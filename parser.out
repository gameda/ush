Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAM ID COLON globales metodos goto_main
Rule 2     goto_main -> VOID MAIN scopemain LEFTP RIGHTP LEFTB declara_var bloque RIGHTB
Rule 3     scopemain -> empty
Rule 4     globales -> declara_var
Rule 5     declara_var -> empty
Rule 6     declara_var -> variables
Rule 7     variables -> VAR tipo var lista_variables SEMICOLON declara_var
Rule 8     lista_variables -> COMMA var lista_variables
Rule 9     lista_variables -> empty
Rule 10    var -> ID
Rule 11    var -> ID LEFTSB INT_CTE RIGHTSB
Rule 12    metodos -> metodo metodos
Rule 13    metodos -> empty
Rule 14    metodo -> METHOD tipo_metodo ID inicio_method LEFTP params RIGHTP LEFTB method_vars bloque RIGHTB end_method
Rule 15    inicio_method -> empty
Rule 16    end_method -> empty
Rule 17    tipo_metodo -> VOID
Rule 18    tipo_metodo -> tipo
Rule 19    params -> empty
Rule 20    params -> parametro paraux
Rule 21    paraux -> empty
Rule 22    paraux -> COMMA parametro paraux
Rule 23    parametro -> tipo ID
Rule 24    method_vars -> declara_var
Rule 25    bloque -> estatuto bloque
Rule 26    bloque -> empty
Rule 27    tipo -> INT
Rule 28    tipo -> CHAR
Rule 29    tipo -> BOOLEAN
Rule 30    tipo -> FLOAT
Rule 31    tipo -> STRING
Rule 32    estatuto -> condicion
Rule 33    estatuto -> ciclo
Rule 34    estatuto -> return
Rule 35    estatuto -> lectura
Rule 36    estatuto -> escritura
Rule 37    estatuto -> llamada SEMICOLON
Rule 38    estatuto -> asignacion
Rule 39    estatuto -> dibujaPunto
Rule 40    estatuto -> dibujaLinea
Rule 41    estatuto -> dibujaCirculo
Rule 42    estatuto -> dibujaTriangulo
Rule 43    estatuto -> dibujaCuadrado
Rule 44    estatuto -> dibujaRectangulo
Rule 45    estatuto -> dibujaCuadrilatero
Rule 46    return -> RETURN exp SEMICOLON
Rule 47    lectura -> ID ASSIGN READ LEFTP RIGHTP SEMICOLON
Rule 48    escritura -> PRINT LEFTP exp RIGHTP SEMICOLON
Rule 49    llamada -> ID llamafun LEFTP args RIGHTP
Rule 50    llamafun -> empty
Rule 51    args -> exp param listargs
Rule 52    args -> empty
Rule 53    listargs -> COMMA args
Rule 54    listargs -> empty
Rule 55    param -> empty
Rule 56    asignacion -> ID asigarray
Rule 57    asigarray -> LEFTSB exp RIGHTSB asign
Rule 58    asigarray -> asign
Rule 59    asign -> ASSIGN exp SEMICOLON
Rule 60    ciclo -> WHILE salto_ciclo LEFTP exp ciclo1 RIGHTP LEFTB bloque ciclo2 RIGHTB
Rule 61    salto_ciclo -> empty
Rule 62    ciclo1 -> empty
Rule 63    ciclo2 -> empty
Rule 64    condicion -> IF LEFTP condicion1 RIGHTP LEFTB bloque RIGHTB else
Rule 65    else -> ELSE condicion3 LEFTB bloque condicion4 RIGHTB
Rule 66    else -> empty
Rule 67    condicion1 -> exp
Rule 68    condicion3 -> empty
Rule 69    condicion4 -> empty
Rule 70    exp -> llamada
Rule 71    exp -> expresion
Rule 72    expresion -> operador1 exp1
Rule 73    exp1 -> empty
Rule 74    exp1 -> AND saveop operador1 exp1
Rule 75    exp1 -> OR saveop operador1 exp1
Rule 76    operador1 -> operador2 exp2
Rule 77    exp2 -> empty
Rule 78    exp2 -> EQUALS saveop operador2 exp2
Rule 79    exp2 -> NOTEQUAL saveop operador2 exp2
Rule 80    exp2 -> GREATEREQUAL saveop operador2 exp2
Rule 81    exp2 -> GREATERTHAN saveop operador2 exp2
Rule 82    exp2 -> LESSTHAN saveop operador2 exp2
Rule 83    exp2 -> LESSEQUAL saveop operador2 exp2
Rule 84    operador2 -> operador3 exp3
Rule 85    exp3 -> empty
Rule 86    exp3 -> SUM saveop operador3 exp3
Rule 87    exp3 -> LESS saveop operador3 exp3
Rule 88    operador3 -> operador4 exp4
Rule 89    exp4 -> empty
Rule 90    exp4 -> TIMES saveop operador4 exp4
Rule 91    exp4 -> DIVISION saveop operador4 exp4
Rule 92    saveop -> empty
Rule 93    operador4 -> ID idarray
Rule 94    idarray -> LEFTSB exp RIGHTSB
Rule 95    idarray -> empty
Rule 96    operador4 -> constante
Rule 97    operador4 -> LEFTP expresion RIGHTP
Rule 98    constante -> INT_CTE
Rule 99    constante -> FLOAT_CTE
Rule 100   constante -> CHAR_CTE
Rule 101   constante -> STRING_CTE
Rule 102   constante -> TRUE
Rule 103   constante -> FALSE
Rule 104   dibujaPunto -> DRAW_DOT LEFTP exp COMMA exp COMMA color RIGHTP SEMICOLON
Rule 105   dibujaLinea -> DRAW_LINE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON
Rule 106   dibujaCirculo -> DRAW_CIRCLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON
Rule 107   dibujaTriangulo -> DRAW_TRIANGLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON
Rule 108   dibujaCuadrado -> DRAW_SQUARE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON
Rule 109   dibujaRectangulo -> DRAW_RECTANGLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON
Rule 110   dibujaCuadrilatero -> DRAW_QUADRITERAL LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON
Rule 111   color -> RED
Rule 112   color -> BLUE
Rule 113   color -> YELLOW
Rule 114   color -> PURPLE
Rule 115   color -> GREEN
Rule 116   color -> BLACK
Rule 117   color -> CYAN
Rule 118   color -> WHITE
Rule 119   color -> FG
Rule 120   color -> AW4
Rule 121   color -> MB
Rule 122   color -> SNOW
Rule 123   color -> LY
Rule 124   empty -> <empty>

Terminals, with rules where they appear

AND                  : 74
ASSIGN               : 47 59
AW4                  : 120
BLACK                : 116
BLUE                 : 112
BOOLEAN              : 29
CHAR                 : 28
CHAR_CTE             : 100
COLON                : 1
COMMA                : 8 22 53 104 104 105 105 105 105 105 106 106 106 106 107 107 107 107 107 107 107 108 108 108 108 109 109 109 109 109 110 110 110 110 110 110 110 110 110
CYAN                 : 117
DIVISION             : 91
DRAW_CIRCLE          : 106
DRAW_DOT             : 104
DRAW_LINE            : 105
DRAW_QUADRITERAL     : 110
DRAW_RECTANGLE       : 109
DRAW_SQUARE          : 108
DRAW_TRIANGLE        : 107
ELSE                 : 65
EQUALS               : 78
FALSE                : 103
FG                   : 119
FLOAT                : 30
FLOAT_CTE            : 99
GREATEREQUAL         : 80
GREATERTHAN          : 81
GREEN                : 115
ID                   : 1 10 11 14 23 47 49 56 93
IF                   : 64
INT                  : 27
INT_CTE              : 11 98
LEFTB                : 2 14 60 64 65
LEFTP                : 2 14 47 48 49 60 64 97 104 105 106 107 108 109 110
LEFTSB               : 11 57 94
LESS                 : 87
LESSEQUAL            : 83
LESSTHAN             : 82
LY                   : 123
MAIN                 : 2
MB                   : 121
METHOD               : 14
NOTEQUAL             : 79
OR                   : 75
PRINT                : 48
PROGRAM              : 1
PURPLE               : 114
READ                 : 47
RED                  : 111
RETURN               : 46
RIGHTB               : 2 14 60 64 65
RIGHTP               : 2 14 47 48 49 60 64 97 104 105 106 107 108 109 110
RIGHTSB              : 11 57 94
SEMICOLON            : 7 37 46 47 48 59 104 105 106 107 108 109 110
SNOW                 : 122
STRING               : 31
STRING_CTE           : 101
SUM                  : 86
TIMES                : 90
TRUE                 : 102
VAR                  : 7
VOID                 : 2 17
WHILE                : 60
WHITE                : 118
YELLOW               : 113
error                : 

Nonterminals, with rules where they appear

args                 : 49 53
asigarray            : 56
asign                : 57 58
asignacion           : 38
bloque               : 2 14 25 60 64 65
ciclo                : 33
ciclo1               : 60
ciclo2               : 60
color                : 104 105 106 107 108 109 110
condicion            : 32
condicion1           : 64
condicion3           : 65
condicion4           : 65
constante            : 96
declara_var          : 2 4 7 24
dibujaCirculo        : 41
dibujaCuadrado       : 43
dibujaCuadrilatero   : 45
dibujaLinea          : 40
dibujaPunto          : 39
dibujaRectangulo     : 44
dibujaTriangulo      : 42
else                 : 64
empty                : 3 5 9 13 15 16 19 21 26 50 52 54 55 61 62 63 66 68 69 73 77 85 89 92 95
end_method           : 14
escritura            : 36
estatuto             : 25
exp                  : 46 48 51 57 59 60 67 94 104 104 105 105 105 105 105 106 106 106 106 107 107 107 107 107 107 107 108 108 108 108 109 109 109 109 109 110 110 110 110 110 110 110 110 110
exp1                 : 72 74 75
exp2                 : 76 78 79 80 81 82 83
exp3                 : 84 86 87
exp4                 : 88 90 91
expresion            : 71 97
globales             : 1
goto_main            : 1
idarray              : 93
inicio_method        : 14
lectura              : 35
lista_variables      : 7 8
listargs             : 51
llamada              : 37 70
llamafun             : 49
method_vars          : 14
metodo               : 12
metodos              : 1 12
operador1            : 72 74 75
operador2            : 76 78 79 80 81 82 83
operador3            : 84 86 87
operador4            : 88 90 91
param                : 51
parametro            : 20 22
params               : 14
paraux               : 20 22
programa             : 0
return               : 34
salto_ciclo          : 60
saveop               : 74 75 78 79 80 81 82 83 86 87 90 91
scopemain            : 2
tipo                 : 7 18 23
tipo_metodo          : 14
var                  : 7 8
variables            : 6

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAM ID COLON globales metodos goto_main

    PROGRAM         shift and go to state 1

    programa                       shift and go to state 2

state 1

    (1) programa -> PROGRAM . ID COLON globales metodos goto_main

    ID              shift and go to state 3


state 2

    (0) S' -> programa .



state 3

    (1) programa -> PROGRAM ID . COLON globales metodos goto_main

    COLON           shift and go to state 4


state 4

    (1) programa -> PROGRAM ID COLON . globales metodos goto_main
    (4) globales -> . declara_var
    (5) declara_var -> . empty
    (6) declara_var -> . variables
    (124) empty -> .
    (7) variables -> . VAR tipo var lista_variables SEMICOLON declara_var

    METHOD          reduce using rule 124 (empty -> .)
    VOID            reduce using rule 124 (empty -> .)
    VAR             shift and go to state 8

    declara_var                    shift and go to state 5
    variables                      shift and go to state 6
    globales                       shift and go to state 7
    empty                          shift and go to state 9

state 5

    (4) globales -> declara_var .

    METHOD          reduce using rule 4 (globales -> declara_var .)
    VOID            reduce using rule 4 (globales -> declara_var .)


state 6

    (6) declara_var -> variables .

    METHOD          reduce using rule 6 (declara_var -> variables .)
    VOID            reduce using rule 6 (declara_var -> variables .)
    IF              reduce using rule 6 (declara_var -> variables .)
    WHILE           reduce using rule 6 (declara_var -> variables .)
    RETURN          reduce using rule 6 (declara_var -> variables .)
    ID              reduce using rule 6 (declara_var -> variables .)
    PRINT           reduce using rule 6 (declara_var -> variables .)
    DRAW_DOT        reduce using rule 6 (declara_var -> variables .)
    DRAW_LINE       reduce using rule 6 (declara_var -> variables .)
    DRAW_CIRCLE     reduce using rule 6 (declara_var -> variables .)
    DRAW_TRIANGLE   reduce using rule 6 (declara_var -> variables .)
    DRAW_SQUARE     reduce using rule 6 (declara_var -> variables .)
    DRAW_RECTANGLE  reduce using rule 6 (declara_var -> variables .)
    DRAW_QUADRITERAL reduce using rule 6 (declara_var -> variables .)
    RIGHTB          reduce using rule 6 (declara_var -> variables .)


state 7

    (1) programa -> PROGRAM ID COLON globales . metodos goto_main
    (12) metodos -> . metodo metodos
    (13) metodos -> . empty
    (14) metodo -> . METHOD tipo_metodo ID inicio_method LEFTP params RIGHTP LEFTB method_vars bloque RIGHTB end_method
    (124) empty -> .

    METHOD          shift and go to state 11
    VOID            reduce using rule 124 (empty -> .)

    metodo                         shift and go to state 10
    metodos                        shift and go to state 12
    empty                          shift and go to state 13

state 8

    (7) variables -> VAR . tipo var lista_variables SEMICOLON declara_var
    (27) tipo -> . INT
    (28) tipo -> . CHAR
    (29) tipo -> . BOOLEAN
    (30) tipo -> . FLOAT
    (31) tipo -> . STRING

    INT             shift and go to state 15
    CHAR            shift and go to state 17
    BOOLEAN         shift and go to state 18
    FLOAT           shift and go to state 16
    STRING          shift and go to state 19

    tipo                           shift and go to state 14

state 9

    (5) declara_var -> empty .

    METHOD          reduce using rule 5 (declara_var -> empty .)
    VOID            reduce using rule 5 (declara_var -> empty .)
    IF              reduce using rule 5 (declara_var -> empty .)
    WHILE           reduce using rule 5 (declara_var -> empty .)
    RETURN          reduce using rule 5 (declara_var -> empty .)
    ID              reduce using rule 5 (declara_var -> empty .)
    PRINT           reduce using rule 5 (declara_var -> empty .)
    DRAW_DOT        reduce using rule 5 (declara_var -> empty .)
    DRAW_LINE       reduce using rule 5 (declara_var -> empty .)
    DRAW_CIRCLE     reduce using rule 5 (declara_var -> empty .)
    DRAW_TRIANGLE   reduce using rule 5 (declara_var -> empty .)
    DRAW_SQUARE     reduce using rule 5 (declara_var -> empty .)
    DRAW_RECTANGLE  reduce using rule 5 (declara_var -> empty .)
    DRAW_QUADRITERAL reduce using rule 5 (declara_var -> empty .)
    RIGHTB          reduce using rule 5 (declara_var -> empty .)


state 10

    (12) metodos -> metodo . metodos
    (12) metodos -> . metodo metodos
    (13) metodos -> . empty
    (14) metodo -> . METHOD tipo_metodo ID inicio_method LEFTP params RIGHTP LEFTB method_vars bloque RIGHTB end_method
    (124) empty -> .

    METHOD          shift and go to state 11
    VOID            reduce using rule 124 (empty -> .)

    metodo                         shift and go to state 10
    metodos                        shift and go to state 20
    empty                          shift and go to state 13

state 11

    (14) metodo -> METHOD . tipo_metodo ID inicio_method LEFTP params RIGHTP LEFTB method_vars bloque RIGHTB end_method
    (17) tipo_metodo -> . VOID
    (18) tipo_metodo -> . tipo
    (27) tipo -> . INT
    (28) tipo -> . CHAR
    (29) tipo -> . BOOLEAN
    (30) tipo -> . FLOAT
    (31) tipo -> . STRING

    VOID            shift and go to state 22
    INT             shift and go to state 15
    CHAR            shift and go to state 17
    BOOLEAN         shift and go to state 18
    FLOAT           shift and go to state 16
    STRING          shift and go to state 19

    tipo                           shift and go to state 21
    tipo_metodo                    shift and go to state 23

state 12

    (1) programa -> PROGRAM ID COLON globales metodos . goto_main
    (2) goto_main -> . VOID MAIN scopemain LEFTP RIGHTP LEFTB declara_var bloque RIGHTB

    VOID            shift and go to state 25

    goto_main                      shift and go to state 24

state 13

    (13) metodos -> empty .

    VOID            reduce using rule 13 (metodos -> empty .)


state 14

    (7) variables -> VAR tipo . var lista_variables SEMICOLON declara_var
    (10) var -> . ID
    (11) var -> . ID LEFTSB INT_CTE RIGHTSB

    ID              shift and go to state 27

    var                            shift and go to state 26

state 15

    (27) tipo -> INT .

    ID              reduce using rule 27 (tipo -> INT .)


state 16

    (30) tipo -> FLOAT .

    ID              reduce using rule 30 (tipo -> FLOAT .)


state 17

    (28) tipo -> CHAR .

    ID              reduce using rule 28 (tipo -> CHAR .)


state 18

    (29) tipo -> BOOLEAN .

    ID              reduce using rule 29 (tipo -> BOOLEAN .)


state 19

    (31) tipo -> STRING .

    ID              reduce using rule 31 (tipo -> STRING .)


state 20

    (12) metodos -> metodo metodos .

    VOID            reduce using rule 12 (metodos -> metodo metodos .)


state 21

    (18) tipo_metodo -> tipo .

    ID              reduce using rule 18 (tipo_metodo -> tipo .)


state 22

    (17) tipo_metodo -> VOID .

    ID              reduce using rule 17 (tipo_metodo -> VOID .)


state 23

    (14) metodo -> METHOD tipo_metodo . ID inicio_method LEFTP params RIGHTP LEFTB method_vars bloque RIGHTB end_method

    ID              shift and go to state 28


state 24

    (1) programa -> PROGRAM ID COLON globales metodos goto_main .

    $end            reduce using rule 1 (programa -> PROGRAM ID COLON globales metodos goto_main .)


state 25

    (2) goto_main -> VOID . MAIN scopemain LEFTP RIGHTP LEFTB declara_var bloque RIGHTB

    MAIN            shift and go to state 29


state 26

    (7) variables -> VAR tipo var . lista_variables SEMICOLON declara_var
    (8) lista_variables -> . COMMA var lista_variables
    (9) lista_variables -> . empty
    (124) empty -> .

    COMMA           shift and go to state 31
    SEMICOLON       reduce using rule 124 (empty -> .)

    lista_variables                shift and go to state 30
    empty                          shift and go to state 32

state 27

    (10) var -> ID .
    (11) var -> ID . LEFTSB INT_CTE RIGHTSB

    COMMA           reduce using rule 10 (var -> ID .)
    SEMICOLON       reduce using rule 10 (var -> ID .)
    LEFTSB          shift and go to state 33


state 28

    (14) metodo -> METHOD tipo_metodo ID . inicio_method LEFTP params RIGHTP LEFTB method_vars bloque RIGHTB end_method
    (15) inicio_method -> . empty
    (124) empty -> .

    LEFTP           reduce using rule 124 (empty -> .)

    inicio_method                  shift and go to state 34
    empty                          shift and go to state 35

state 29

    (2) goto_main -> VOID MAIN . scopemain LEFTP RIGHTP LEFTB declara_var bloque RIGHTB
    (3) scopemain -> . empty
    (124) empty -> .

    LEFTP           reduce using rule 124 (empty -> .)

    scopemain                      shift and go to state 36
    empty                          shift and go to state 37

state 30

    (7) variables -> VAR tipo var lista_variables . SEMICOLON declara_var

    SEMICOLON       shift and go to state 38


state 31

    (8) lista_variables -> COMMA . var lista_variables
    (10) var -> . ID
    (11) var -> . ID LEFTSB INT_CTE RIGHTSB

    ID              shift and go to state 27

    var                            shift and go to state 39

state 32

    (9) lista_variables -> empty .

    SEMICOLON       reduce using rule 9 (lista_variables -> empty .)


state 33

    (11) var -> ID LEFTSB . INT_CTE RIGHTSB

    INT_CTE         shift and go to state 40


state 34

    (14) metodo -> METHOD tipo_metodo ID inicio_method . LEFTP params RIGHTP LEFTB method_vars bloque RIGHTB end_method

    LEFTP           shift and go to state 41


state 35

    (15) inicio_method -> empty .

    LEFTP           reduce using rule 15 (inicio_method -> empty .)


state 36

    (2) goto_main -> VOID MAIN scopemain . LEFTP RIGHTP LEFTB declara_var bloque RIGHTB

    LEFTP           shift and go to state 42


state 37

    (3) scopemain -> empty .

    LEFTP           reduce using rule 3 (scopemain -> empty .)


state 38

    (7) variables -> VAR tipo var lista_variables SEMICOLON . declara_var
    (5) declara_var -> . empty
    (6) declara_var -> . variables
    (124) empty -> .
    (7) variables -> . VAR tipo var lista_variables SEMICOLON declara_var

    METHOD          reduce using rule 124 (empty -> .)
    VOID            reduce using rule 124 (empty -> .)
    IF              reduce using rule 124 (empty -> .)
    WHILE           reduce using rule 124 (empty -> .)
    RETURN          reduce using rule 124 (empty -> .)
    ID              reduce using rule 124 (empty -> .)
    PRINT           reduce using rule 124 (empty -> .)
    DRAW_DOT        reduce using rule 124 (empty -> .)
    DRAW_LINE       reduce using rule 124 (empty -> .)
    DRAW_CIRCLE     reduce using rule 124 (empty -> .)
    DRAW_TRIANGLE   reduce using rule 124 (empty -> .)
    DRAW_SQUARE     reduce using rule 124 (empty -> .)
    DRAW_RECTANGLE  reduce using rule 124 (empty -> .)
    DRAW_QUADRITERAL reduce using rule 124 (empty -> .)
    RIGHTB          reduce using rule 124 (empty -> .)
    VAR             shift and go to state 8

    declara_var                    shift and go to state 43
    variables                      shift and go to state 6
    empty                          shift and go to state 9

state 39

    (8) lista_variables -> COMMA var . lista_variables
    (8) lista_variables -> . COMMA var lista_variables
    (9) lista_variables -> . empty
    (124) empty -> .

    COMMA           shift and go to state 31
    SEMICOLON       reduce using rule 124 (empty -> .)

    lista_variables                shift and go to state 44
    empty                          shift and go to state 32

state 40

    (11) var -> ID LEFTSB INT_CTE . RIGHTSB

    RIGHTSB         shift and go to state 45


state 41

    (14) metodo -> METHOD tipo_metodo ID inicio_method LEFTP . params RIGHTP LEFTB method_vars bloque RIGHTB end_method
    (19) params -> . empty
    (20) params -> . parametro paraux
    (124) empty -> .
    (23) parametro -> . tipo ID
    (27) tipo -> . INT
    (28) tipo -> . CHAR
    (29) tipo -> . BOOLEAN
    (30) tipo -> . FLOAT
    (31) tipo -> . STRING

    RIGHTP          reduce using rule 124 (empty -> .)
    INT             shift and go to state 15
    CHAR            shift and go to state 17
    BOOLEAN         shift and go to state 18
    FLOAT           shift and go to state 16
    STRING          shift and go to state 19

    tipo                           shift and go to state 46
    parametro                      shift and go to state 47
    params                         shift and go to state 48
    empty                          shift and go to state 49

state 42

    (2) goto_main -> VOID MAIN scopemain LEFTP . RIGHTP LEFTB declara_var bloque RIGHTB

    RIGHTP          shift and go to state 50


state 43

    (7) variables -> VAR tipo var lista_variables SEMICOLON declara_var .

    IF              reduce using rule 7 (variables -> VAR tipo var lista_variables SEMICOLON declara_var .)
    WHILE           reduce using rule 7 (variables -> VAR tipo var lista_variables SEMICOLON declara_var .)
    RETURN          reduce using rule 7 (variables -> VAR tipo var lista_variables SEMICOLON declara_var .)
    ID              reduce using rule 7 (variables -> VAR tipo var lista_variables SEMICOLON declara_var .)
    PRINT           reduce using rule 7 (variables -> VAR tipo var lista_variables SEMICOLON declara_var .)
    DRAW_DOT        reduce using rule 7 (variables -> VAR tipo var lista_variables SEMICOLON declara_var .)
    DRAW_LINE       reduce using rule 7 (variables -> VAR tipo var lista_variables SEMICOLON declara_var .)
    DRAW_CIRCLE     reduce using rule 7 (variables -> VAR tipo var lista_variables SEMICOLON declara_var .)
    DRAW_TRIANGLE   reduce using rule 7 (variables -> VAR tipo var lista_variables SEMICOLON declara_var .)
    DRAW_SQUARE     reduce using rule 7 (variables -> VAR tipo var lista_variables SEMICOLON declara_var .)
    DRAW_RECTANGLE  reduce using rule 7 (variables -> VAR tipo var lista_variables SEMICOLON declara_var .)
    DRAW_QUADRITERAL reduce using rule 7 (variables -> VAR tipo var lista_variables SEMICOLON declara_var .)
    RIGHTB          reduce using rule 7 (variables -> VAR tipo var lista_variables SEMICOLON declara_var .)
    METHOD          reduce using rule 7 (variables -> VAR tipo var lista_variables SEMICOLON declara_var .)
    VOID            reduce using rule 7 (variables -> VAR tipo var lista_variables SEMICOLON declara_var .)


state 44

    (8) lista_variables -> COMMA var lista_variables .

    SEMICOLON       reduce using rule 8 (lista_variables -> COMMA var lista_variables .)


state 45

    (11) var -> ID LEFTSB INT_CTE RIGHTSB .

    COMMA           reduce using rule 11 (var -> ID LEFTSB INT_CTE RIGHTSB .)
    SEMICOLON       reduce using rule 11 (var -> ID LEFTSB INT_CTE RIGHTSB .)


state 46

    (23) parametro -> tipo . ID

    ID              shift and go to state 51


state 47

    (20) params -> parametro . paraux
    (21) paraux -> . empty
    (22) paraux -> . COMMA parametro paraux
    (124) empty -> .

    COMMA           shift and go to state 52
    RIGHTP          reduce using rule 124 (empty -> .)

    empty                          shift and go to state 53
    paraux                         shift and go to state 54

state 48

    (14) metodo -> METHOD tipo_metodo ID inicio_method LEFTP params . RIGHTP LEFTB method_vars bloque RIGHTB end_method

    RIGHTP          shift and go to state 55


state 49

    (19) params -> empty .

    RIGHTP          reduce using rule 19 (params -> empty .)


state 50

    (2) goto_main -> VOID MAIN scopemain LEFTP RIGHTP . LEFTB declara_var bloque RIGHTB

    LEFTB           shift and go to state 56


state 51

    (23) parametro -> tipo ID .

    COMMA           reduce using rule 23 (parametro -> tipo ID .)
    RIGHTP          reduce using rule 23 (parametro -> tipo ID .)


state 52

    (22) paraux -> COMMA . parametro paraux
    (23) parametro -> . tipo ID
    (27) tipo -> . INT
    (28) tipo -> . CHAR
    (29) tipo -> . BOOLEAN
    (30) tipo -> . FLOAT
    (31) tipo -> . STRING

    INT             shift and go to state 15
    CHAR            shift and go to state 17
    BOOLEAN         shift and go to state 18
    FLOAT           shift and go to state 16
    STRING          shift and go to state 19

    parametro                      shift and go to state 57
    tipo                           shift and go to state 46

state 53

    (21) paraux -> empty .

    RIGHTP          reduce using rule 21 (paraux -> empty .)


state 54

    (20) params -> parametro paraux .

    RIGHTP          reduce using rule 20 (params -> parametro paraux .)


state 55

    (14) metodo -> METHOD tipo_metodo ID inicio_method LEFTP params RIGHTP . LEFTB method_vars bloque RIGHTB end_method

    LEFTB           shift and go to state 58


state 56

    (2) goto_main -> VOID MAIN scopemain LEFTP RIGHTP LEFTB . declara_var bloque RIGHTB
    (5) declara_var -> . empty
    (6) declara_var -> . variables
    (124) empty -> .
    (7) variables -> . VAR tipo var lista_variables SEMICOLON declara_var

    IF              reduce using rule 124 (empty -> .)
    WHILE           reduce using rule 124 (empty -> .)
    RETURN          reduce using rule 124 (empty -> .)
    ID              reduce using rule 124 (empty -> .)
    PRINT           reduce using rule 124 (empty -> .)
    DRAW_DOT        reduce using rule 124 (empty -> .)
    DRAW_LINE       reduce using rule 124 (empty -> .)
    DRAW_CIRCLE     reduce using rule 124 (empty -> .)
    DRAW_TRIANGLE   reduce using rule 124 (empty -> .)
    DRAW_SQUARE     reduce using rule 124 (empty -> .)
    DRAW_RECTANGLE  reduce using rule 124 (empty -> .)
    DRAW_QUADRITERAL reduce using rule 124 (empty -> .)
    RIGHTB          reduce using rule 124 (empty -> .)
    VAR             shift and go to state 8

    declara_var                    shift and go to state 59
    variables                      shift and go to state 6
    empty                          shift and go to state 9

state 57

    (22) paraux -> COMMA parametro . paraux
    (21) paraux -> . empty
    (22) paraux -> . COMMA parametro paraux
    (124) empty -> .

    COMMA           shift and go to state 52
    RIGHTP          reduce using rule 124 (empty -> .)

    empty                          shift and go to state 53
    paraux                         shift and go to state 60

state 58

    (14) metodo -> METHOD tipo_metodo ID inicio_method LEFTP params RIGHTP LEFTB . method_vars bloque RIGHTB end_method
    (24) method_vars -> . declara_var
    (5) declara_var -> . empty
    (6) declara_var -> . variables
    (124) empty -> .
    (7) variables -> . VAR tipo var lista_variables SEMICOLON declara_var

    IF              reduce using rule 124 (empty -> .)
    WHILE           reduce using rule 124 (empty -> .)
    RETURN          reduce using rule 124 (empty -> .)
    ID              reduce using rule 124 (empty -> .)
    PRINT           reduce using rule 124 (empty -> .)
    DRAW_DOT        reduce using rule 124 (empty -> .)
    DRAW_LINE       reduce using rule 124 (empty -> .)
    DRAW_CIRCLE     reduce using rule 124 (empty -> .)
    DRAW_TRIANGLE   reduce using rule 124 (empty -> .)
    DRAW_SQUARE     reduce using rule 124 (empty -> .)
    DRAW_RECTANGLE  reduce using rule 124 (empty -> .)
    DRAW_QUADRITERAL reduce using rule 124 (empty -> .)
    RIGHTB          reduce using rule 124 (empty -> .)
    VAR             shift and go to state 8

    declara_var                    shift and go to state 61
    variables                      shift and go to state 6
    empty                          shift and go to state 9
    method_vars                    shift and go to state 62

state 59

    (2) goto_main -> VOID MAIN scopemain LEFTP RIGHTP LEFTB declara_var . bloque RIGHTB
    (25) bloque -> . estatuto bloque
    (26) bloque -> . empty
    (32) estatuto -> . condicion
    (33) estatuto -> . ciclo
    (34) estatuto -> . return
    (35) estatuto -> . lectura
    (36) estatuto -> . escritura
    (37) estatuto -> . llamada SEMICOLON
    (38) estatuto -> . asignacion
    (39) estatuto -> . dibujaPunto
    (40) estatuto -> . dibujaLinea
    (41) estatuto -> . dibujaCirculo
    (42) estatuto -> . dibujaTriangulo
    (43) estatuto -> . dibujaCuadrado
    (44) estatuto -> . dibujaRectangulo
    (45) estatuto -> . dibujaCuadrilatero
    (124) empty -> .
    (64) condicion -> . IF LEFTP condicion1 RIGHTP LEFTB bloque RIGHTB else
    (60) ciclo -> . WHILE salto_ciclo LEFTP exp ciclo1 RIGHTP LEFTB bloque ciclo2 RIGHTB
    (46) return -> . RETURN exp SEMICOLON
    (47) lectura -> . ID ASSIGN READ LEFTP RIGHTP SEMICOLON
    (48) escritura -> . PRINT LEFTP exp RIGHTP SEMICOLON
    (49) llamada -> . ID llamafun LEFTP args RIGHTP
    (56) asignacion -> . ID asigarray
    (104) dibujaPunto -> . DRAW_DOT LEFTP exp COMMA exp COMMA color RIGHTP SEMICOLON
    (105) dibujaLinea -> . DRAW_LINE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON
    (106) dibujaCirculo -> . DRAW_CIRCLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON
    (107) dibujaTriangulo -> . DRAW_TRIANGLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON
    (108) dibujaCuadrado -> . DRAW_SQUARE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON
    (109) dibujaRectangulo -> . DRAW_RECTANGLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON
    (110) dibujaCuadrilatero -> . DRAW_QUADRITERAL LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON

    RIGHTB          reduce using rule 124 (empty -> .)
    IF              shift and go to state 87
    WHILE           shift and go to state 68
    RETURN          shift and go to state 63
    ID              shift and go to state 86
    PRINT           shift and go to state 67
    DRAW_DOT        shift and go to state 89
    DRAW_LINE       shift and go to state 83
    DRAW_CIRCLE     shift and go to state 90
    DRAW_TRIANGLE   shift and go to state 69
    DRAW_SQUARE     shift and go to state 65
    DRAW_RECTANGLE  shift and go to state 84
    DRAW_QUADRITERAL shift and go to state 66

    dibujaTriangulo                shift and go to state 64
    dibujaCuadrado                 shift and go to state 70
    bloque                         shift and go to state 71
    dibujaCuadrilatero             shift and go to state 72
    ciclo                          shift and go to state 73
    estatuto                       shift and go to state 74
    llamada                        shift and go to state 75
    condicion                      shift and go to state 76
    dibujaLinea                    shift and go to state 77
    lectura                        shift and go to state 78
    empty                          shift and go to state 79
    dibujaCirculo                  shift and go to state 80
    dibujaRectangulo               shift and go to state 81
    return                         shift and go to state 82
    dibujaPunto                    shift and go to state 85
    asignacion                     shift and go to state 88
    escritura                      shift and go to state 91

state 60

    (22) paraux -> COMMA parametro paraux .

    RIGHTP          reduce using rule 22 (paraux -> COMMA parametro paraux .)


state 61

    (24) method_vars -> declara_var .

    IF              reduce using rule 24 (method_vars -> declara_var .)
    WHILE           reduce using rule 24 (method_vars -> declara_var .)
    RETURN          reduce using rule 24 (method_vars -> declara_var .)
    ID              reduce using rule 24 (method_vars -> declara_var .)
    PRINT           reduce using rule 24 (method_vars -> declara_var .)
    DRAW_DOT        reduce using rule 24 (method_vars -> declara_var .)
    DRAW_LINE       reduce using rule 24 (method_vars -> declara_var .)
    DRAW_CIRCLE     reduce using rule 24 (method_vars -> declara_var .)
    DRAW_TRIANGLE   reduce using rule 24 (method_vars -> declara_var .)
    DRAW_SQUARE     reduce using rule 24 (method_vars -> declara_var .)
    DRAW_RECTANGLE  reduce using rule 24 (method_vars -> declara_var .)
    DRAW_QUADRITERAL reduce using rule 24 (method_vars -> declara_var .)
    RIGHTB          reduce using rule 24 (method_vars -> declara_var .)


state 62

    (14) metodo -> METHOD tipo_metodo ID inicio_method LEFTP params RIGHTP LEFTB method_vars . bloque RIGHTB end_method
    (25) bloque -> . estatuto bloque
    (26) bloque -> . empty
    (32) estatuto -> . condicion
    (33) estatuto -> . ciclo
    (34) estatuto -> . return
    (35) estatuto -> . lectura
    (36) estatuto -> . escritura
    (37) estatuto -> . llamada SEMICOLON
    (38) estatuto -> . asignacion
    (39) estatuto -> . dibujaPunto
    (40) estatuto -> . dibujaLinea
    (41) estatuto -> . dibujaCirculo
    (42) estatuto -> . dibujaTriangulo
    (43) estatuto -> . dibujaCuadrado
    (44) estatuto -> . dibujaRectangulo
    (45) estatuto -> . dibujaCuadrilatero
    (124) empty -> .
    (64) condicion -> . IF LEFTP condicion1 RIGHTP LEFTB bloque RIGHTB else
    (60) ciclo -> . WHILE salto_ciclo LEFTP exp ciclo1 RIGHTP LEFTB bloque ciclo2 RIGHTB
    (46) return -> . RETURN exp SEMICOLON
    (47) lectura -> . ID ASSIGN READ LEFTP RIGHTP SEMICOLON
    (48) escritura -> . PRINT LEFTP exp RIGHTP SEMICOLON
    (49) llamada -> . ID llamafun LEFTP args RIGHTP
    (56) asignacion -> . ID asigarray
    (104) dibujaPunto -> . DRAW_DOT LEFTP exp COMMA exp COMMA color RIGHTP SEMICOLON
    (105) dibujaLinea -> . DRAW_LINE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON
    (106) dibujaCirculo -> . DRAW_CIRCLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON
    (107) dibujaTriangulo -> . DRAW_TRIANGLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON
    (108) dibujaCuadrado -> . DRAW_SQUARE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON
    (109) dibujaRectangulo -> . DRAW_RECTANGLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON
    (110) dibujaCuadrilatero -> . DRAW_QUADRITERAL LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON

    RIGHTB          reduce using rule 124 (empty -> .)
    IF              shift and go to state 87
    WHILE           shift and go to state 68
    RETURN          shift and go to state 63
    ID              shift and go to state 86
    PRINT           shift and go to state 67
    DRAW_DOT        shift and go to state 89
    DRAW_LINE       shift and go to state 83
    DRAW_CIRCLE     shift and go to state 90
    DRAW_TRIANGLE   shift and go to state 69
    DRAW_SQUARE     shift and go to state 65
    DRAW_RECTANGLE  shift and go to state 84
    DRAW_QUADRITERAL shift and go to state 66

    dibujaTriangulo                shift and go to state 64
    dibujaCuadrado                 shift and go to state 70
    bloque                         shift and go to state 92
    dibujaCuadrilatero             shift and go to state 72
    ciclo                          shift and go to state 73
    estatuto                       shift and go to state 74
    llamada                        shift and go to state 75
    condicion                      shift and go to state 76
    dibujaLinea                    shift and go to state 77
    lectura                        shift and go to state 78
    empty                          shift and go to state 79
    dibujaCirculo                  shift and go to state 80
    dibujaRectangulo               shift and go to state 81
    return                         shift and go to state 82
    dibujaPunto                    shift and go to state 85
    asignacion                     shift and go to state 88
    escritura                      shift and go to state 91

state 63

    (46) return -> RETURN . exp SEMICOLON
    (70) exp -> . llamada
    (71) exp -> . expresion
    (49) llamada -> . ID llamafun LEFTP args RIGHTP
    (72) expresion -> . operador1 exp1
    (76) operador1 -> . operador2 exp2
    (84) operador2 -> . operador3 exp3
    (88) operador3 -> . operador4 exp4
    (93) operador4 -> . ID idarray
    (96) operador4 -> . constante
    (97) operador4 -> . LEFTP expresion RIGHTP
    (98) constante -> . INT_CTE
    (99) constante -> . FLOAT_CTE
    (100) constante -> . CHAR_CTE
    (101) constante -> . STRING_CTE
    (102) constante -> . TRUE
    (103) constante -> . FALSE

    ID              shift and go to state 104
    LEFTP           shift and go to state 99
    INT_CTE         shift and go to state 105
    FLOAT_CTE       shift and go to state 107
    CHAR_CTE        shift and go to state 101
    STRING_CTE      shift and go to state 93
    TRUE            shift and go to state 97
    FALSE           shift and go to state 103

    expresion                      shift and go to state 106
    constante                      shift and go to state 102
    llamada                        shift and go to state 100
    exp                            shift and go to state 108
    operador1                      shift and go to state 94
    operador3                      shift and go to state 95
    operador2                      shift and go to state 96
    operador4                      shift and go to state 98

state 64

    (42) estatuto -> dibujaTriangulo .

    IF              reduce using rule 42 (estatuto -> dibujaTriangulo .)
    WHILE           reduce using rule 42 (estatuto -> dibujaTriangulo .)
    RETURN          reduce using rule 42 (estatuto -> dibujaTriangulo .)
    ID              reduce using rule 42 (estatuto -> dibujaTriangulo .)
    PRINT           reduce using rule 42 (estatuto -> dibujaTriangulo .)
    DRAW_DOT        reduce using rule 42 (estatuto -> dibujaTriangulo .)
    DRAW_LINE       reduce using rule 42 (estatuto -> dibujaTriangulo .)
    DRAW_CIRCLE     reduce using rule 42 (estatuto -> dibujaTriangulo .)
    DRAW_TRIANGLE   reduce using rule 42 (estatuto -> dibujaTriangulo .)
    DRAW_SQUARE     reduce using rule 42 (estatuto -> dibujaTriangulo .)
    DRAW_RECTANGLE  reduce using rule 42 (estatuto -> dibujaTriangulo .)
    DRAW_QUADRITERAL reduce using rule 42 (estatuto -> dibujaTriangulo .)
    RIGHTB          reduce using rule 42 (estatuto -> dibujaTriangulo .)


state 65

    (108) dibujaCuadrado -> DRAW_SQUARE . LEFTP exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON

    LEFTP           shift and go to state 109


state 66

    (110) dibujaCuadrilatero -> DRAW_QUADRITERAL . LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON

    LEFTP           shift and go to state 110


state 67

    (48) escritura -> PRINT . LEFTP exp RIGHTP SEMICOLON

    LEFTP           shift and go to state 111


state 68

    (60) ciclo -> WHILE . salto_ciclo LEFTP exp ciclo1 RIGHTP LEFTB bloque ciclo2 RIGHTB
    (61) salto_ciclo -> . empty
    (124) empty -> .

    LEFTP           reduce using rule 124 (empty -> .)

    salto_ciclo                    shift and go to state 112
    empty                          shift and go to state 113

state 69

    (107) dibujaTriangulo -> DRAW_TRIANGLE . LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON

    LEFTP           shift and go to state 114


state 70

    (43) estatuto -> dibujaCuadrado .

    IF              reduce using rule 43 (estatuto -> dibujaCuadrado .)
    WHILE           reduce using rule 43 (estatuto -> dibujaCuadrado .)
    RETURN          reduce using rule 43 (estatuto -> dibujaCuadrado .)
    ID              reduce using rule 43 (estatuto -> dibujaCuadrado .)
    PRINT           reduce using rule 43 (estatuto -> dibujaCuadrado .)
    DRAW_DOT        reduce using rule 43 (estatuto -> dibujaCuadrado .)
    DRAW_LINE       reduce using rule 43 (estatuto -> dibujaCuadrado .)
    DRAW_CIRCLE     reduce using rule 43 (estatuto -> dibujaCuadrado .)
    DRAW_TRIANGLE   reduce using rule 43 (estatuto -> dibujaCuadrado .)
    DRAW_SQUARE     reduce using rule 43 (estatuto -> dibujaCuadrado .)
    DRAW_RECTANGLE  reduce using rule 43 (estatuto -> dibujaCuadrado .)
    DRAW_QUADRITERAL reduce using rule 43 (estatuto -> dibujaCuadrado .)
    RIGHTB          reduce using rule 43 (estatuto -> dibujaCuadrado .)


state 71

    (2) goto_main -> VOID MAIN scopemain LEFTP RIGHTP LEFTB declara_var bloque . RIGHTB

    RIGHTB          shift and go to state 115


state 72

    (45) estatuto -> dibujaCuadrilatero .

    IF              reduce using rule 45 (estatuto -> dibujaCuadrilatero .)
    WHILE           reduce using rule 45 (estatuto -> dibujaCuadrilatero .)
    RETURN          reduce using rule 45 (estatuto -> dibujaCuadrilatero .)
    ID              reduce using rule 45 (estatuto -> dibujaCuadrilatero .)
    PRINT           reduce using rule 45 (estatuto -> dibujaCuadrilatero .)
    DRAW_DOT        reduce using rule 45 (estatuto -> dibujaCuadrilatero .)
    DRAW_LINE       reduce using rule 45 (estatuto -> dibujaCuadrilatero .)
    DRAW_CIRCLE     reduce using rule 45 (estatuto -> dibujaCuadrilatero .)
    DRAW_TRIANGLE   reduce using rule 45 (estatuto -> dibujaCuadrilatero .)
    DRAW_SQUARE     reduce using rule 45 (estatuto -> dibujaCuadrilatero .)
    DRAW_RECTANGLE  reduce using rule 45 (estatuto -> dibujaCuadrilatero .)
    DRAW_QUADRITERAL reduce using rule 45 (estatuto -> dibujaCuadrilatero .)
    RIGHTB          reduce using rule 45 (estatuto -> dibujaCuadrilatero .)


state 73

    (33) estatuto -> ciclo .

    IF              reduce using rule 33 (estatuto -> ciclo .)
    WHILE           reduce using rule 33 (estatuto -> ciclo .)
    RETURN          reduce using rule 33 (estatuto -> ciclo .)
    ID              reduce using rule 33 (estatuto -> ciclo .)
    PRINT           reduce using rule 33 (estatuto -> ciclo .)
    DRAW_DOT        reduce using rule 33 (estatuto -> ciclo .)
    DRAW_LINE       reduce using rule 33 (estatuto -> ciclo .)
    DRAW_CIRCLE     reduce using rule 33 (estatuto -> ciclo .)
    DRAW_TRIANGLE   reduce using rule 33 (estatuto -> ciclo .)
    DRAW_SQUARE     reduce using rule 33 (estatuto -> ciclo .)
    DRAW_RECTANGLE  reduce using rule 33 (estatuto -> ciclo .)
    DRAW_QUADRITERAL reduce using rule 33 (estatuto -> ciclo .)
    RIGHTB          reduce using rule 33 (estatuto -> ciclo .)


state 74

    (25) bloque -> estatuto . bloque
    (25) bloque -> . estatuto bloque
    (26) bloque -> . empty
    (32) estatuto -> . condicion
    (33) estatuto -> . ciclo
    (34) estatuto -> . return
    (35) estatuto -> . lectura
    (36) estatuto -> . escritura
    (37) estatuto -> . llamada SEMICOLON
    (38) estatuto -> . asignacion
    (39) estatuto -> . dibujaPunto
    (40) estatuto -> . dibujaLinea
    (41) estatuto -> . dibujaCirculo
    (42) estatuto -> . dibujaTriangulo
    (43) estatuto -> . dibujaCuadrado
    (44) estatuto -> . dibujaRectangulo
    (45) estatuto -> . dibujaCuadrilatero
    (124) empty -> .
    (64) condicion -> . IF LEFTP condicion1 RIGHTP LEFTB bloque RIGHTB else
    (60) ciclo -> . WHILE salto_ciclo LEFTP exp ciclo1 RIGHTP LEFTB bloque ciclo2 RIGHTB
    (46) return -> . RETURN exp SEMICOLON
    (47) lectura -> . ID ASSIGN READ LEFTP RIGHTP SEMICOLON
    (48) escritura -> . PRINT LEFTP exp RIGHTP SEMICOLON
    (49) llamada -> . ID llamafun LEFTP args RIGHTP
    (56) asignacion -> . ID asigarray
    (104) dibujaPunto -> . DRAW_DOT LEFTP exp COMMA exp COMMA color RIGHTP SEMICOLON
    (105) dibujaLinea -> . DRAW_LINE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON
    (106) dibujaCirculo -> . DRAW_CIRCLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON
    (107) dibujaTriangulo -> . DRAW_TRIANGLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON
    (108) dibujaCuadrado -> . DRAW_SQUARE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON
    (109) dibujaRectangulo -> . DRAW_RECTANGLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON
    (110) dibujaCuadrilatero -> . DRAW_QUADRITERAL LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON

    RIGHTB          reduce using rule 124 (empty -> .)
    IF              shift and go to state 87
    WHILE           shift and go to state 68
    RETURN          shift and go to state 63
    ID              shift and go to state 86
    PRINT           shift and go to state 67
    DRAW_DOT        shift and go to state 89
    DRAW_LINE       shift and go to state 83
    DRAW_CIRCLE     shift and go to state 90
    DRAW_TRIANGLE   shift and go to state 69
    DRAW_SQUARE     shift and go to state 65
    DRAW_RECTANGLE  shift and go to state 84
    DRAW_QUADRITERAL shift and go to state 66

    dibujaTriangulo                shift and go to state 64
    dibujaCuadrado                 shift and go to state 70
    bloque                         shift and go to state 116
    dibujaCuadrilatero             shift and go to state 72
    ciclo                          shift and go to state 73
    estatuto                       shift and go to state 74
    llamada                        shift and go to state 75
    condicion                      shift and go to state 76
    dibujaLinea                    shift and go to state 77
    lectura                        shift and go to state 78
    empty                          shift and go to state 79
    dibujaCirculo                  shift and go to state 80
    dibujaRectangulo               shift and go to state 81
    return                         shift and go to state 82
    dibujaPunto                    shift and go to state 85
    asignacion                     shift and go to state 88
    escritura                      shift and go to state 91

state 75

    (37) estatuto -> llamada . SEMICOLON

    SEMICOLON       shift and go to state 117


state 76

    (32) estatuto -> condicion .

    IF              reduce using rule 32 (estatuto -> condicion .)
    WHILE           reduce using rule 32 (estatuto -> condicion .)
    RETURN          reduce using rule 32 (estatuto -> condicion .)
    ID              reduce using rule 32 (estatuto -> condicion .)
    PRINT           reduce using rule 32 (estatuto -> condicion .)
    DRAW_DOT        reduce using rule 32 (estatuto -> condicion .)
    DRAW_LINE       reduce using rule 32 (estatuto -> condicion .)
    DRAW_CIRCLE     reduce using rule 32 (estatuto -> condicion .)
    DRAW_TRIANGLE   reduce using rule 32 (estatuto -> condicion .)
    DRAW_SQUARE     reduce using rule 32 (estatuto -> condicion .)
    DRAW_RECTANGLE  reduce using rule 32 (estatuto -> condicion .)
    DRAW_QUADRITERAL reduce using rule 32 (estatuto -> condicion .)
    RIGHTB          reduce using rule 32 (estatuto -> condicion .)


state 77

    (40) estatuto -> dibujaLinea .

    IF              reduce using rule 40 (estatuto -> dibujaLinea .)
    WHILE           reduce using rule 40 (estatuto -> dibujaLinea .)
    RETURN          reduce using rule 40 (estatuto -> dibujaLinea .)
    ID              reduce using rule 40 (estatuto -> dibujaLinea .)
    PRINT           reduce using rule 40 (estatuto -> dibujaLinea .)
    DRAW_DOT        reduce using rule 40 (estatuto -> dibujaLinea .)
    DRAW_LINE       reduce using rule 40 (estatuto -> dibujaLinea .)
    DRAW_CIRCLE     reduce using rule 40 (estatuto -> dibujaLinea .)
    DRAW_TRIANGLE   reduce using rule 40 (estatuto -> dibujaLinea .)
    DRAW_SQUARE     reduce using rule 40 (estatuto -> dibujaLinea .)
    DRAW_RECTANGLE  reduce using rule 40 (estatuto -> dibujaLinea .)
    DRAW_QUADRITERAL reduce using rule 40 (estatuto -> dibujaLinea .)
    RIGHTB          reduce using rule 40 (estatuto -> dibujaLinea .)


state 78

    (35) estatuto -> lectura .

    IF              reduce using rule 35 (estatuto -> lectura .)
    WHILE           reduce using rule 35 (estatuto -> lectura .)
    RETURN          reduce using rule 35 (estatuto -> lectura .)
    ID              reduce using rule 35 (estatuto -> lectura .)
    PRINT           reduce using rule 35 (estatuto -> lectura .)
    DRAW_DOT        reduce using rule 35 (estatuto -> lectura .)
    DRAW_LINE       reduce using rule 35 (estatuto -> lectura .)
    DRAW_CIRCLE     reduce using rule 35 (estatuto -> lectura .)
    DRAW_TRIANGLE   reduce using rule 35 (estatuto -> lectura .)
    DRAW_SQUARE     reduce using rule 35 (estatuto -> lectura .)
    DRAW_RECTANGLE  reduce using rule 35 (estatuto -> lectura .)
    DRAW_QUADRITERAL reduce using rule 35 (estatuto -> lectura .)
    RIGHTB          reduce using rule 35 (estatuto -> lectura .)


state 79

    (26) bloque -> empty .

    RIGHTB          reduce using rule 26 (bloque -> empty .)


state 80

    (41) estatuto -> dibujaCirculo .

    IF              reduce using rule 41 (estatuto -> dibujaCirculo .)
    WHILE           reduce using rule 41 (estatuto -> dibujaCirculo .)
    RETURN          reduce using rule 41 (estatuto -> dibujaCirculo .)
    ID              reduce using rule 41 (estatuto -> dibujaCirculo .)
    PRINT           reduce using rule 41 (estatuto -> dibujaCirculo .)
    DRAW_DOT        reduce using rule 41 (estatuto -> dibujaCirculo .)
    DRAW_LINE       reduce using rule 41 (estatuto -> dibujaCirculo .)
    DRAW_CIRCLE     reduce using rule 41 (estatuto -> dibujaCirculo .)
    DRAW_TRIANGLE   reduce using rule 41 (estatuto -> dibujaCirculo .)
    DRAW_SQUARE     reduce using rule 41 (estatuto -> dibujaCirculo .)
    DRAW_RECTANGLE  reduce using rule 41 (estatuto -> dibujaCirculo .)
    DRAW_QUADRITERAL reduce using rule 41 (estatuto -> dibujaCirculo .)
    RIGHTB          reduce using rule 41 (estatuto -> dibujaCirculo .)


state 81

    (44) estatuto -> dibujaRectangulo .

    IF              reduce using rule 44 (estatuto -> dibujaRectangulo .)
    WHILE           reduce using rule 44 (estatuto -> dibujaRectangulo .)
    RETURN          reduce using rule 44 (estatuto -> dibujaRectangulo .)
    ID              reduce using rule 44 (estatuto -> dibujaRectangulo .)
    PRINT           reduce using rule 44 (estatuto -> dibujaRectangulo .)
    DRAW_DOT        reduce using rule 44 (estatuto -> dibujaRectangulo .)
    DRAW_LINE       reduce using rule 44 (estatuto -> dibujaRectangulo .)
    DRAW_CIRCLE     reduce using rule 44 (estatuto -> dibujaRectangulo .)
    DRAW_TRIANGLE   reduce using rule 44 (estatuto -> dibujaRectangulo .)
    DRAW_SQUARE     reduce using rule 44 (estatuto -> dibujaRectangulo .)
    DRAW_RECTANGLE  reduce using rule 44 (estatuto -> dibujaRectangulo .)
    DRAW_QUADRITERAL reduce using rule 44 (estatuto -> dibujaRectangulo .)
    RIGHTB          reduce using rule 44 (estatuto -> dibujaRectangulo .)


state 82

    (34) estatuto -> return .

    IF              reduce using rule 34 (estatuto -> return .)
    WHILE           reduce using rule 34 (estatuto -> return .)
    RETURN          reduce using rule 34 (estatuto -> return .)
    ID              reduce using rule 34 (estatuto -> return .)
    PRINT           reduce using rule 34 (estatuto -> return .)
    DRAW_DOT        reduce using rule 34 (estatuto -> return .)
    DRAW_LINE       reduce using rule 34 (estatuto -> return .)
    DRAW_CIRCLE     reduce using rule 34 (estatuto -> return .)
    DRAW_TRIANGLE   reduce using rule 34 (estatuto -> return .)
    DRAW_SQUARE     reduce using rule 34 (estatuto -> return .)
    DRAW_RECTANGLE  reduce using rule 34 (estatuto -> return .)
    DRAW_QUADRITERAL reduce using rule 34 (estatuto -> return .)
    RIGHTB          reduce using rule 34 (estatuto -> return .)


state 83

    (105) dibujaLinea -> DRAW_LINE . LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON

    LEFTP           shift and go to state 118


state 84

    (109) dibujaRectangulo -> DRAW_RECTANGLE . LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON

    LEFTP           shift and go to state 119


state 85

    (39) estatuto -> dibujaPunto .

    IF              reduce using rule 39 (estatuto -> dibujaPunto .)
    WHILE           reduce using rule 39 (estatuto -> dibujaPunto .)
    RETURN          reduce using rule 39 (estatuto -> dibujaPunto .)
    ID              reduce using rule 39 (estatuto -> dibujaPunto .)
    PRINT           reduce using rule 39 (estatuto -> dibujaPunto .)
    DRAW_DOT        reduce using rule 39 (estatuto -> dibujaPunto .)
    DRAW_LINE       reduce using rule 39 (estatuto -> dibujaPunto .)
    DRAW_CIRCLE     reduce using rule 39 (estatuto -> dibujaPunto .)
    DRAW_TRIANGLE   reduce using rule 39 (estatuto -> dibujaPunto .)
    DRAW_SQUARE     reduce using rule 39 (estatuto -> dibujaPunto .)
    DRAW_RECTANGLE  reduce using rule 39 (estatuto -> dibujaPunto .)
    DRAW_QUADRITERAL reduce using rule 39 (estatuto -> dibujaPunto .)
    RIGHTB          reduce using rule 39 (estatuto -> dibujaPunto .)


state 86

    (47) lectura -> ID . ASSIGN READ LEFTP RIGHTP SEMICOLON
    (49) llamada -> ID . llamafun LEFTP args RIGHTP
    (56) asignacion -> ID . asigarray
    (50) llamafun -> . empty
    (57) asigarray -> . LEFTSB exp RIGHTSB asign
    (58) asigarray -> . asign
    (124) empty -> .
    (59) asign -> . ASSIGN exp SEMICOLON

    ASSIGN          shift and go to state 121
    LEFTSB          shift and go to state 120
    LEFTP           reduce using rule 124 (empty -> .)

    asign                          shift and go to state 124
    llamafun                       shift and go to state 125
    asigarray                      shift and go to state 123
    empty                          shift and go to state 122

state 87

    (64) condicion -> IF . LEFTP condicion1 RIGHTP LEFTB bloque RIGHTB else

    LEFTP           shift and go to state 126


state 88

    (38) estatuto -> asignacion .

    IF              reduce using rule 38 (estatuto -> asignacion .)
    WHILE           reduce using rule 38 (estatuto -> asignacion .)
    RETURN          reduce using rule 38 (estatuto -> asignacion .)
    ID              reduce using rule 38 (estatuto -> asignacion .)
    PRINT           reduce using rule 38 (estatuto -> asignacion .)
    DRAW_DOT        reduce using rule 38 (estatuto -> asignacion .)
    DRAW_LINE       reduce using rule 38 (estatuto -> asignacion .)
    DRAW_CIRCLE     reduce using rule 38 (estatuto -> asignacion .)
    DRAW_TRIANGLE   reduce using rule 38 (estatuto -> asignacion .)
    DRAW_SQUARE     reduce using rule 38 (estatuto -> asignacion .)
    DRAW_RECTANGLE  reduce using rule 38 (estatuto -> asignacion .)
    DRAW_QUADRITERAL reduce using rule 38 (estatuto -> asignacion .)
    RIGHTB          reduce using rule 38 (estatuto -> asignacion .)


state 89

    (104) dibujaPunto -> DRAW_DOT . LEFTP exp COMMA exp COMMA color RIGHTP SEMICOLON

    LEFTP           shift and go to state 127


state 90

    (106) dibujaCirculo -> DRAW_CIRCLE . LEFTP exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON

    LEFTP           shift and go to state 128


state 91

    (36) estatuto -> escritura .

    IF              reduce using rule 36 (estatuto -> escritura .)
    WHILE           reduce using rule 36 (estatuto -> escritura .)
    RETURN          reduce using rule 36 (estatuto -> escritura .)
    ID              reduce using rule 36 (estatuto -> escritura .)
    PRINT           reduce using rule 36 (estatuto -> escritura .)
    DRAW_DOT        reduce using rule 36 (estatuto -> escritura .)
    DRAW_LINE       reduce using rule 36 (estatuto -> escritura .)
    DRAW_CIRCLE     reduce using rule 36 (estatuto -> escritura .)
    DRAW_TRIANGLE   reduce using rule 36 (estatuto -> escritura .)
    DRAW_SQUARE     reduce using rule 36 (estatuto -> escritura .)
    DRAW_RECTANGLE  reduce using rule 36 (estatuto -> escritura .)
    DRAW_QUADRITERAL reduce using rule 36 (estatuto -> escritura .)
    RIGHTB          reduce using rule 36 (estatuto -> escritura .)


state 92

    (14) metodo -> METHOD tipo_metodo ID inicio_method LEFTP params RIGHTP LEFTB method_vars bloque . RIGHTB end_method

    RIGHTB          shift and go to state 129


state 93

    (101) constante -> STRING_CTE .

    TIMES           reduce using rule 101 (constante -> STRING_CTE .)
    DIVISION        reduce using rule 101 (constante -> STRING_CTE .)
    SUM             reduce using rule 101 (constante -> STRING_CTE .)
    LESS            reduce using rule 101 (constante -> STRING_CTE .)
    EQUALS          reduce using rule 101 (constante -> STRING_CTE .)
    NOTEQUAL        reduce using rule 101 (constante -> STRING_CTE .)
    GREATEREQUAL    reduce using rule 101 (constante -> STRING_CTE .)
    GREATERTHAN     reduce using rule 101 (constante -> STRING_CTE .)
    LESSTHAN        reduce using rule 101 (constante -> STRING_CTE .)
    LESSEQUAL       reduce using rule 101 (constante -> STRING_CTE .)
    AND             reduce using rule 101 (constante -> STRING_CTE .)
    OR              reduce using rule 101 (constante -> STRING_CTE .)
    COMMA           reduce using rule 101 (constante -> STRING_CTE .)
    RIGHTP          reduce using rule 101 (constante -> STRING_CTE .)
    SEMICOLON       reduce using rule 101 (constante -> STRING_CTE .)
    RIGHTSB         reduce using rule 101 (constante -> STRING_CTE .)


state 94

    (72) expresion -> operador1 . exp1
    (73) exp1 -> . empty
    (74) exp1 -> . AND saveop operador1 exp1
    (75) exp1 -> . OR saveop operador1 exp1
    (124) empty -> .

    AND             shift and go to state 130
    OR              shift and go to state 132
    SEMICOLON       reduce using rule 124 (empty -> .)
    RIGHTP          reduce using rule 124 (empty -> .)
    COMMA           reduce using rule 124 (empty -> .)
    RIGHTSB         reduce using rule 124 (empty -> .)

    exp1                           shift and go to state 131
    empty                          shift and go to state 133

state 95

    (84) operador2 -> operador3 . exp3
    (85) exp3 -> . empty
    (86) exp3 -> . SUM saveop operador3 exp3
    (87) exp3 -> . LESS saveop operador3 exp3
    (124) empty -> .

    SUM             shift and go to state 136
    LESS            shift and go to state 134
    EQUALS          reduce using rule 124 (empty -> .)
    NOTEQUAL        reduce using rule 124 (empty -> .)
    GREATEREQUAL    reduce using rule 124 (empty -> .)
    GREATERTHAN     reduce using rule 124 (empty -> .)
    LESSTHAN        reduce using rule 124 (empty -> .)
    LESSEQUAL       reduce using rule 124 (empty -> .)
    AND             reduce using rule 124 (empty -> .)
    OR              reduce using rule 124 (empty -> .)
    SEMICOLON       reduce using rule 124 (empty -> .)
    RIGHTP          reduce using rule 124 (empty -> .)
    COMMA           reduce using rule 124 (empty -> .)
    RIGHTSB         reduce using rule 124 (empty -> .)

    exp3                           shift and go to state 135
    empty                          shift and go to state 137

state 96

    (76) operador1 -> operador2 . exp2
    (77) exp2 -> . empty
    (78) exp2 -> . EQUALS saveop operador2 exp2
    (79) exp2 -> . NOTEQUAL saveop operador2 exp2
    (80) exp2 -> . GREATEREQUAL saveop operador2 exp2
    (81) exp2 -> . GREATERTHAN saveop operador2 exp2
    (82) exp2 -> . LESSTHAN saveop operador2 exp2
    (83) exp2 -> . LESSEQUAL saveop operador2 exp2
    (124) empty -> .

    EQUALS          shift and go to state 141
    NOTEQUAL        shift and go to state 138
    GREATEREQUAL    shift and go to state 139
    GREATERTHAN     shift and go to state 143
    LESSTHAN        shift and go to state 142
    LESSEQUAL       shift and go to state 144
    AND             reduce using rule 124 (empty -> .)
    OR              reduce using rule 124 (empty -> .)
    SEMICOLON       reduce using rule 124 (empty -> .)
    RIGHTP          reduce using rule 124 (empty -> .)
    COMMA           reduce using rule 124 (empty -> .)
    RIGHTSB         reduce using rule 124 (empty -> .)

    exp2                           shift and go to state 140
    empty                          shift and go to state 145

state 97

    (102) constante -> TRUE .

    TIMES           reduce using rule 102 (constante -> TRUE .)
    DIVISION        reduce using rule 102 (constante -> TRUE .)
    SUM             reduce using rule 102 (constante -> TRUE .)
    LESS            reduce using rule 102 (constante -> TRUE .)
    EQUALS          reduce using rule 102 (constante -> TRUE .)
    NOTEQUAL        reduce using rule 102 (constante -> TRUE .)
    GREATEREQUAL    reduce using rule 102 (constante -> TRUE .)
    GREATERTHAN     reduce using rule 102 (constante -> TRUE .)
    LESSTHAN        reduce using rule 102 (constante -> TRUE .)
    LESSEQUAL       reduce using rule 102 (constante -> TRUE .)
    AND             reduce using rule 102 (constante -> TRUE .)
    OR              reduce using rule 102 (constante -> TRUE .)
    COMMA           reduce using rule 102 (constante -> TRUE .)
    RIGHTP          reduce using rule 102 (constante -> TRUE .)
    SEMICOLON       reduce using rule 102 (constante -> TRUE .)
    RIGHTSB         reduce using rule 102 (constante -> TRUE .)


state 98

    (88) operador3 -> operador4 . exp4
    (89) exp4 -> . empty
    (90) exp4 -> . TIMES saveop operador4 exp4
    (91) exp4 -> . DIVISION saveop operador4 exp4
    (124) empty -> .

    TIMES           shift and go to state 147
    DIVISION        shift and go to state 146
    SUM             reduce using rule 124 (empty -> .)
    LESS            reduce using rule 124 (empty -> .)
    EQUALS          reduce using rule 124 (empty -> .)
    NOTEQUAL        reduce using rule 124 (empty -> .)
    GREATEREQUAL    reduce using rule 124 (empty -> .)
    GREATERTHAN     reduce using rule 124 (empty -> .)
    LESSTHAN        reduce using rule 124 (empty -> .)
    LESSEQUAL       reduce using rule 124 (empty -> .)
    AND             reduce using rule 124 (empty -> .)
    OR              reduce using rule 124 (empty -> .)
    SEMICOLON       reduce using rule 124 (empty -> .)
    RIGHTP          reduce using rule 124 (empty -> .)
    COMMA           reduce using rule 124 (empty -> .)
    RIGHTSB         reduce using rule 124 (empty -> .)

    empty                          shift and go to state 149
    exp4                           shift and go to state 148

state 99

    (97) operador4 -> LEFTP . expresion RIGHTP
    (72) expresion -> . operador1 exp1
    (76) operador1 -> . operador2 exp2
    (84) operador2 -> . operador3 exp3
    (88) operador3 -> . operador4 exp4
    (93) operador4 -> . ID idarray
    (96) operador4 -> . constante
    (97) operador4 -> . LEFTP expresion RIGHTP
    (98) constante -> . INT_CTE
    (99) constante -> . FLOAT_CTE
    (100) constante -> . CHAR_CTE
    (101) constante -> . STRING_CTE
    (102) constante -> . TRUE
    (103) constante -> . FALSE

    ID              shift and go to state 151
    LEFTP           shift and go to state 99
    INT_CTE         shift and go to state 105
    FLOAT_CTE       shift and go to state 107
    CHAR_CTE        shift and go to state 101
    STRING_CTE      shift and go to state 93
    TRUE            shift and go to state 97
    FALSE           shift and go to state 103

    expresion                      shift and go to state 150
    constante                      shift and go to state 102
    operador1                      shift and go to state 94
    operador3                      shift and go to state 95
    operador2                      shift and go to state 96
    operador4                      shift and go to state 98

state 100

    (70) exp -> llamada .

    COMMA           reduce using rule 70 (exp -> llamada .)
    RIGHTSB         reduce using rule 70 (exp -> llamada .)
    SEMICOLON       reduce using rule 70 (exp -> llamada .)
    RIGHTP          reduce using rule 70 (exp -> llamada .)


state 101

    (100) constante -> CHAR_CTE .

    TIMES           reduce using rule 100 (constante -> CHAR_CTE .)
    DIVISION        reduce using rule 100 (constante -> CHAR_CTE .)
    SUM             reduce using rule 100 (constante -> CHAR_CTE .)
    LESS            reduce using rule 100 (constante -> CHAR_CTE .)
    EQUALS          reduce using rule 100 (constante -> CHAR_CTE .)
    NOTEQUAL        reduce using rule 100 (constante -> CHAR_CTE .)
    GREATEREQUAL    reduce using rule 100 (constante -> CHAR_CTE .)
    GREATERTHAN     reduce using rule 100 (constante -> CHAR_CTE .)
    LESSTHAN        reduce using rule 100 (constante -> CHAR_CTE .)
    LESSEQUAL       reduce using rule 100 (constante -> CHAR_CTE .)
    AND             reduce using rule 100 (constante -> CHAR_CTE .)
    OR              reduce using rule 100 (constante -> CHAR_CTE .)
    COMMA           reduce using rule 100 (constante -> CHAR_CTE .)
    RIGHTP          reduce using rule 100 (constante -> CHAR_CTE .)
    SEMICOLON       reduce using rule 100 (constante -> CHAR_CTE .)
    RIGHTSB         reduce using rule 100 (constante -> CHAR_CTE .)


state 102

    (96) operador4 -> constante .

    TIMES           reduce using rule 96 (operador4 -> constante .)
    DIVISION        reduce using rule 96 (operador4 -> constante .)
    SUM             reduce using rule 96 (operador4 -> constante .)
    LESS            reduce using rule 96 (operador4 -> constante .)
    EQUALS          reduce using rule 96 (operador4 -> constante .)
    NOTEQUAL        reduce using rule 96 (operador4 -> constante .)
    GREATEREQUAL    reduce using rule 96 (operador4 -> constante .)
    GREATERTHAN     reduce using rule 96 (operador4 -> constante .)
    LESSTHAN        reduce using rule 96 (operador4 -> constante .)
    LESSEQUAL       reduce using rule 96 (operador4 -> constante .)
    AND             reduce using rule 96 (operador4 -> constante .)
    OR              reduce using rule 96 (operador4 -> constante .)
    COMMA           reduce using rule 96 (operador4 -> constante .)
    RIGHTSB         reduce using rule 96 (operador4 -> constante .)
    SEMICOLON       reduce using rule 96 (operador4 -> constante .)
    RIGHTP          reduce using rule 96 (operador4 -> constante .)


state 103

    (103) constante -> FALSE .

    TIMES           reduce using rule 103 (constante -> FALSE .)
    DIVISION        reduce using rule 103 (constante -> FALSE .)
    SUM             reduce using rule 103 (constante -> FALSE .)
    LESS            reduce using rule 103 (constante -> FALSE .)
    EQUALS          reduce using rule 103 (constante -> FALSE .)
    NOTEQUAL        reduce using rule 103 (constante -> FALSE .)
    GREATEREQUAL    reduce using rule 103 (constante -> FALSE .)
    GREATERTHAN     reduce using rule 103 (constante -> FALSE .)
    LESSTHAN        reduce using rule 103 (constante -> FALSE .)
    LESSEQUAL       reduce using rule 103 (constante -> FALSE .)
    AND             reduce using rule 103 (constante -> FALSE .)
    OR              reduce using rule 103 (constante -> FALSE .)
    COMMA           reduce using rule 103 (constante -> FALSE .)
    RIGHTP          reduce using rule 103 (constante -> FALSE .)
    SEMICOLON       reduce using rule 103 (constante -> FALSE .)
    RIGHTSB         reduce using rule 103 (constante -> FALSE .)


state 104

    (49) llamada -> ID . llamafun LEFTP args RIGHTP
    (93) operador4 -> ID . idarray
    (50) llamafun -> . empty
    (94) idarray -> . LEFTSB exp RIGHTSB
    (95) idarray -> . empty
    (124) empty -> .

    LEFTSB          shift and go to state 152
    LEFTP           reduce using rule 124 (empty -> .)
    TIMES           reduce using rule 124 (empty -> .)
    DIVISION        reduce using rule 124 (empty -> .)
    SUM             reduce using rule 124 (empty -> .)
    LESS            reduce using rule 124 (empty -> .)
    EQUALS          reduce using rule 124 (empty -> .)
    NOTEQUAL        reduce using rule 124 (empty -> .)
    GREATEREQUAL    reduce using rule 124 (empty -> .)
    GREATERTHAN     reduce using rule 124 (empty -> .)
    LESSTHAN        reduce using rule 124 (empty -> .)
    LESSEQUAL       reduce using rule 124 (empty -> .)
    AND             reduce using rule 124 (empty -> .)
    OR              reduce using rule 124 (empty -> .)
    SEMICOLON       reduce using rule 124 (empty -> .)
    COMMA           reduce using rule 124 (empty -> .)
    RIGHTP          reduce using rule 124 (empty -> .)
    RIGHTSB         reduce using rule 124 (empty -> .)

    empty                          shift and go to state 154
    idarray                        shift and go to state 153
    llamafun                       shift and go to state 125

state 105

    (98) constante -> INT_CTE .

    TIMES           reduce using rule 98 (constante -> INT_CTE .)
    DIVISION        reduce using rule 98 (constante -> INT_CTE .)
    SUM             reduce using rule 98 (constante -> INT_CTE .)
    LESS            reduce using rule 98 (constante -> INT_CTE .)
    EQUALS          reduce using rule 98 (constante -> INT_CTE .)
    NOTEQUAL        reduce using rule 98 (constante -> INT_CTE .)
    GREATEREQUAL    reduce using rule 98 (constante -> INT_CTE .)
    GREATERTHAN     reduce using rule 98 (constante -> INT_CTE .)
    LESSTHAN        reduce using rule 98 (constante -> INT_CTE .)
    LESSEQUAL       reduce using rule 98 (constante -> INT_CTE .)
    AND             reduce using rule 98 (constante -> INT_CTE .)
    OR              reduce using rule 98 (constante -> INT_CTE .)
    COMMA           reduce using rule 98 (constante -> INT_CTE .)
    RIGHTP          reduce using rule 98 (constante -> INT_CTE .)
    SEMICOLON       reduce using rule 98 (constante -> INT_CTE .)
    RIGHTSB         reduce using rule 98 (constante -> INT_CTE .)


state 106

    (71) exp -> expresion .

    COMMA           reduce using rule 71 (exp -> expresion .)
    RIGHTSB         reduce using rule 71 (exp -> expresion .)
    SEMICOLON       reduce using rule 71 (exp -> expresion .)
    RIGHTP          reduce using rule 71 (exp -> expresion .)


state 107

    (99) constante -> FLOAT_CTE .

    TIMES           reduce using rule 99 (constante -> FLOAT_CTE .)
    DIVISION        reduce using rule 99 (constante -> FLOAT_CTE .)
    SUM             reduce using rule 99 (constante -> FLOAT_CTE .)
    LESS            reduce using rule 99 (constante -> FLOAT_CTE .)
    EQUALS          reduce using rule 99 (constante -> FLOAT_CTE .)
    NOTEQUAL        reduce using rule 99 (constante -> FLOAT_CTE .)
    GREATEREQUAL    reduce using rule 99 (constante -> FLOAT_CTE .)
    GREATERTHAN     reduce using rule 99 (constante -> FLOAT_CTE .)
    LESSTHAN        reduce using rule 99 (constante -> FLOAT_CTE .)
    LESSEQUAL       reduce using rule 99 (constante -> FLOAT_CTE .)
    AND             reduce using rule 99 (constante -> FLOAT_CTE .)
    OR              reduce using rule 99 (constante -> FLOAT_CTE .)
    COMMA           reduce using rule 99 (constante -> FLOAT_CTE .)
    RIGHTP          reduce using rule 99 (constante -> FLOAT_CTE .)
    SEMICOLON       reduce using rule 99 (constante -> FLOAT_CTE .)
    RIGHTSB         reduce using rule 99 (constante -> FLOAT_CTE .)


state 108

    (46) return -> RETURN exp . SEMICOLON

    SEMICOLON       shift and go to state 155


state 109

    (108) dibujaCuadrado -> DRAW_SQUARE LEFTP . exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON
    (70) exp -> . llamada
    (71) exp -> . expresion
    (49) llamada -> . ID llamafun LEFTP args RIGHTP
    (72) expresion -> . operador1 exp1
    (76) operador1 -> . operador2 exp2
    (84) operador2 -> . operador3 exp3
    (88) operador3 -> . operador4 exp4
    (93) operador4 -> . ID idarray
    (96) operador4 -> . constante
    (97) operador4 -> . LEFTP expresion RIGHTP
    (98) constante -> . INT_CTE
    (99) constante -> . FLOAT_CTE
    (100) constante -> . CHAR_CTE
    (101) constante -> . STRING_CTE
    (102) constante -> . TRUE
    (103) constante -> . FALSE

    ID              shift and go to state 104
    LEFTP           shift and go to state 99
    INT_CTE         shift and go to state 105
    FLOAT_CTE       shift and go to state 107
    CHAR_CTE        shift and go to state 101
    STRING_CTE      shift and go to state 93
    TRUE            shift and go to state 97
    FALSE           shift and go to state 103

    expresion                      shift and go to state 106
    constante                      shift and go to state 102
    llamada                        shift and go to state 100
    exp                            shift and go to state 156
    operador1                      shift and go to state 94
    operador3                      shift and go to state 95
    operador2                      shift and go to state 96
    operador4                      shift and go to state 98

state 110

    (110) dibujaCuadrilatero -> DRAW_QUADRITERAL LEFTP . exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON
    (70) exp -> . llamada
    (71) exp -> . expresion
    (49) llamada -> . ID llamafun LEFTP args RIGHTP
    (72) expresion -> . operador1 exp1
    (76) operador1 -> . operador2 exp2
    (84) operador2 -> . operador3 exp3
    (88) operador3 -> . operador4 exp4
    (93) operador4 -> . ID idarray
    (96) operador4 -> . constante
    (97) operador4 -> . LEFTP expresion RIGHTP
    (98) constante -> . INT_CTE
    (99) constante -> . FLOAT_CTE
    (100) constante -> . CHAR_CTE
    (101) constante -> . STRING_CTE
    (102) constante -> . TRUE
    (103) constante -> . FALSE

    ID              shift and go to state 104
    LEFTP           shift and go to state 99
    INT_CTE         shift and go to state 105
    FLOAT_CTE       shift and go to state 107
    CHAR_CTE        shift and go to state 101
    STRING_CTE      shift and go to state 93
    TRUE            shift and go to state 97
    FALSE           shift and go to state 103

    expresion                      shift and go to state 106
    constante                      shift and go to state 102
    llamada                        shift and go to state 100
    exp                            shift and go to state 157
    operador1                      shift and go to state 94
    operador3                      shift and go to state 95
    operador2                      shift and go to state 96
    operador4                      shift and go to state 98

state 111

    (48) escritura -> PRINT LEFTP . exp RIGHTP SEMICOLON
    (70) exp -> . llamada
    (71) exp -> . expresion
    (49) llamada -> . ID llamafun LEFTP args RIGHTP
    (72) expresion -> . operador1 exp1
    (76) operador1 -> . operador2 exp2
    (84) operador2 -> . operador3 exp3
    (88) operador3 -> . operador4 exp4
    (93) operador4 -> . ID idarray
    (96) operador4 -> . constante
    (97) operador4 -> . LEFTP expresion RIGHTP
    (98) constante -> . INT_CTE
    (99) constante -> . FLOAT_CTE
    (100) constante -> . CHAR_CTE
    (101) constante -> . STRING_CTE
    (102) constante -> . TRUE
    (103) constante -> . FALSE

    ID              shift and go to state 104
    LEFTP           shift and go to state 99
    INT_CTE         shift and go to state 105
    FLOAT_CTE       shift and go to state 107
    CHAR_CTE        shift and go to state 101
    STRING_CTE      shift and go to state 93
    TRUE            shift and go to state 97
    FALSE           shift and go to state 103

    expresion                      shift and go to state 106
    constante                      shift and go to state 102
    llamada                        shift and go to state 100
    exp                            shift and go to state 158
    operador1                      shift and go to state 94
    operador3                      shift and go to state 95
    operador2                      shift and go to state 96
    operador4                      shift and go to state 98

state 112

    (60) ciclo -> WHILE salto_ciclo . LEFTP exp ciclo1 RIGHTP LEFTB bloque ciclo2 RIGHTB

    LEFTP           shift and go to state 159


state 113

    (61) salto_ciclo -> empty .

    LEFTP           reduce using rule 61 (salto_ciclo -> empty .)


state 114

    (107) dibujaTriangulo -> DRAW_TRIANGLE LEFTP . exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON
    (70) exp -> . llamada
    (71) exp -> . expresion
    (49) llamada -> . ID llamafun LEFTP args RIGHTP
    (72) expresion -> . operador1 exp1
    (76) operador1 -> . operador2 exp2
    (84) operador2 -> . operador3 exp3
    (88) operador3 -> . operador4 exp4
    (93) operador4 -> . ID idarray
    (96) operador4 -> . constante
    (97) operador4 -> . LEFTP expresion RIGHTP
    (98) constante -> . INT_CTE
    (99) constante -> . FLOAT_CTE
    (100) constante -> . CHAR_CTE
    (101) constante -> . STRING_CTE
    (102) constante -> . TRUE
    (103) constante -> . FALSE

    ID              shift and go to state 104
    LEFTP           shift and go to state 99
    INT_CTE         shift and go to state 105
    FLOAT_CTE       shift and go to state 107
    CHAR_CTE        shift and go to state 101
    STRING_CTE      shift and go to state 93
    TRUE            shift and go to state 97
    FALSE           shift and go to state 103

    expresion                      shift and go to state 106
    constante                      shift and go to state 102
    llamada                        shift and go to state 100
    exp                            shift and go to state 160
    operador1                      shift and go to state 94
    operador3                      shift and go to state 95
    operador2                      shift and go to state 96
    operador4                      shift and go to state 98

state 115

    (2) goto_main -> VOID MAIN scopemain LEFTP RIGHTP LEFTB declara_var bloque RIGHTB .

    $end            reduce using rule 2 (goto_main -> VOID MAIN scopemain LEFTP RIGHTP LEFTB declara_var bloque RIGHTB .)


state 116

    (25) bloque -> estatuto bloque .

    RIGHTB          reduce using rule 25 (bloque -> estatuto bloque .)


state 117

    (37) estatuto -> llamada SEMICOLON .

    IF              reduce using rule 37 (estatuto -> llamada SEMICOLON .)
    WHILE           reduce using rule 37 (estatuto -> llamada SEMICOLON .)
    RETURN          reduce using rule 37 (estatuto -> llamada SEMICOLON .)
    ID              reduce using rule 37 (estatuto -> llamada SEMICOLON .)
    PRINT           reduce using rule 37 (estatuto -> llamada SEMICOLON .)
    DRAW_DOT        reduce using rule 37 (estatuto -> llamada SEMICOLON .)
    DRAW_LINE       reduce using rule 37 (estatuto -> llamada SEMICOLON .)
    DRAW_CIRCLE     reduce using rule 37 (estatuto -> llamada SEMICOLON .)
    DRAW_TRIANGLE   reduce using rule 37 (estatuto -> llamada SEMICOLON .)
    DRAW_SQUARE     reduce using rule 37 (estatuto -> llamada SEMICOLON .)
    DRAW_RECTANGLE  reduce using rule 37 (estatuto -> llamada SEMICOLON .)
    DRAW_QUADRITERAL reduce using rule 37 (estatuto -> llamada SEMICOLON .)
    RIGHTB          reduce using rule 37 (estatuto -> llamada SEMICOLON .)


state 118

    (105) dibujaLinea -> DRAW_LINE LEFTP . exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON
    (70) exp -> . llamada
    (71) exp -> . expresion
    (49) llamada -> . ID llamafun LEFTP args RIGHTP
    (72) expresion -> . operador1 exp1
    (76) operador1 -> . operador2 exp2
    (84) operador2 -> . operador3 exp3
    (88) operador3 -> . operador4 exp4
    (93) operador4 -> . ID idarray
    (96) operador4 -> . constante
    (97) operador4 -> . LEFTP expresion RIGHTP
    (98) constante -> . INT_CTE
    (99) constante -> . FLOAT_CTE
    (100) constante -> . CHAR_CTE
    (101) constante -> . STRING_CTE
    (102) constante -> . TRUE
    (103) constante -> . FALSE

    ID              shift and go to state 104
    LEFTP           shift and go to state 99
    INT_CTE         shift and go to state 105
    FLOAT_CTE       shift and go to state 107
    CHAR_CTE        shift and go to state 101
    STRING_CTE      shift and go to state 93
    TRUE            shift and go to state 97
    FALSE           shift and go to state 103

    expresion                      shift and go to state 106
    constante                      shift and go to state 102
    llamada                        shift and go to state 100
    exp                            shift and go to state 161
    operador1                      shift and go to state 94
    operador3                      shift and go to state 95
    operador2                      shift and go to state 96
    operador4                      shift and go to state 98

state 119

    (109) dibujaRectangulo -> DRAW_RECTANGLE LEFTP . exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON
    (70) exp -> . llamada
    (71) exp -> . expresion
    (49) llamada -> . ID llamafun LEFTP args RIGHTP
    (72) expresion -> . operador1 exp1
    (76) operador1 -> . operador2 exp2
    (84) operador2 -> . operador3 exp3
    (88) operador3 -> . operador4 exp4
    (93) operador4 -> . ID idarray
    (96) operador4 -> . constante
    (97) operador4 -> . LEFTP expresion RIGHTP
    (98) constante -> . INT_CTE
    (99) constante -> . FLOAT_CTE
    (100) constante -> . CHAR_CTE
    (101) constante -> . STRING_CTE
    (102) constante -> . TRUE
    (103) constante -> . FALSE

    ID              shift and go to state 104
    LEFTP           shift and go to state 99
    INT_CTE         shift and go to state 105
    FLOAT_CTE       shift and go to state 107
    CHAR_CTE        shift and go to state 101
    STRING_CTE      shift and go to state 93
    TRUE            shift and go to state 97
    FALSE           shift and go to state 103

    expresion                      shift and go to state 106
    constante                      shift and go to state 102
    llamada                        shift and go to state 100
    exp                            shift and go to state 162
    operador1                      shift and go to state 94
    operador3                      shift and go to state 95
    operador2                      shift and go to state 96
    operador4                      shift and go to state 98

state 120

    (57) asigarray -> LEFTSB . exp RIGHTSB asign
    (70) exp -> . llamada
    (71) exp -> . expresion
    (49) llamada -> . ID llamafun LEFTP args RIGHTP
    (72) expresion -> . operador1 exp1
    (76) operador1 -> . operador2 exp2
    (84) operador2 -> . operador3 exp3
    (88) operador3 -> . operador4 exp4
    (93) operador4 -> . ID idarray
    (96) operador4 -> . constante
    (97) operador4 -> . LEFTP expresion RIGHTP
    (98) constante -> . INT_CTE
    (99) constante -> . FLOAT_CTE
    (100) constante -> . CHAR_CTE
    (101) constante -> . STRING_CTE
    (102) constante -> . TRUE
    (103) constante -> . FALSE

    ID              shift and go to state 104
    LEFTP           shift and go to state 99
    INT_CTE         shift and go to state 105
    FLOAT_CTE       shift and go to state 107
    CHAR_CTE        shift and go to state 101
    STRING_CTE      shift and go to state 93
    TRUE            shift and go to state 97
    FALSE           shift and go to state 103

    expresion                      shift and go to state 106
    constante                      shift and go to state 102
    llamada                        shift and go to state 100
    exp                            shift and go to state 163
    operador1                      shift and go to state 94
    operador3                      shift and go to state 95
    operador2                      shift and go to state 96
    operador4                      shift and go to state 98

state 121

    (47) lectura -> ID ASSIGN . READ LEFTP RIGHTP SEMICOLON
    (59) asign -> ASSIGN . exp SEMICOLON
    (70) exp -> . llamada
    (71) exp -> . expresion
    (49) llamada -> . ID llamafun LEFTP args RIGHTP
    (72) expresion -> . operador1 exp1
    (76) operador1 -> . operador2 exp2
    (84) operador2 -> . operador3 exp3
    (88) operador3 -> . operador4 exp4
    (93) operador4 -> . ID idarray
    (96) operador4 -> . constante
    (97) operador4 -> . LEFTP expresion RIGHTP
    (98) constante -> . INT_CTE
    (99) constante -> . FLOAT_CTE
    (100) constante -> . CHAR_CTE
    (101) constante -> . STRING_CTE
    (102) constante -> . TRUE
    (103) constante -> . FALSE

    READ            shift and go to state 164
    ID              shift and go to state 104
    LEFTP           shift and go to state 99
    INT_CTE         shift and go to state 105
    FLOAT_CTE       shift and go to state 107
    CHAR_CTE        shift and go to state 101
    STRING_CTE      shift and go to state 93
    TRUE            shift and go to state 97
    FALSE           shift and go to state 103

    expresion                      shift and go to state 106
    constante                      shift and go to state 102
    llamada                        shift and go to state 100
    exp                            shift and go to state 165
    operador1                      shift and go to state 94
    operador3                      shift and go to state 95
    operador2                      shift and go to state 96
    operador4                      shift and go to state 98

state 122

    (50) llamafun -> empty .

    LEFTP           reduce using rule 50 (llamafun -> empty .)


state 123

    (56) asignacion -> ID asigarray .

    IF              reduce using rule 56 (asignacion -> ID asigarray .)
    WHILE           reduce using rule 56 (asignacion -> ID asigarray .)
    RETURN          reduce using rule 56 (asignacion -> ID asigarray .)
    ID              reduce using rule 56 (asignacion -> ID asigarray .)
    PRINT           reduce using rule 56 (asignacion -> ID asigarray .)
    DRAW_DOT        reduce using rule 56 (asignacion -> ID asigarray .)
    DRAW_LINE       reduce using rule 56 (asignacion -> ID asigarray .)
    DRAW_CIRCLE     reduce using rule 56 (asignacion -> ID asigarray .)
    DRAW_TRIANGLE   reduce using rule 56 (asignacion -> ID asigarray .)
    DRAW_SQUARE     reduce using rule 56 (asignacion -> ID asigarray .)
    DRAW_RECTANGLE  reduce using rule 56 (asignacion -> ID asigarray .)
    DRAW_QUADRITERAL reduce using rule 56 (asignacion -> ID asigarray .)
    RIGHTB          reduce using rule 56 (asignacion -> ID asigarray .)


state 124

    (58) asigarray -> asign .

    IF              reduce using rule 58 (asigarray -> asign .)
    WHILE           reduce using rule 58 (asigarray -> asign .)
    RETURN          reduce using rule 58 (asigarray -> asign .)
    ID              reduce using rule 58 (asigarray -> asign .)
    PRINT           reduce using rule 58 (asigarray -> asign .)
    DRAW_DOT        reduce using rule 58 (asigarray -> asign .)
    DRAW_LINE       reduce using rule 58 (asigarray -> asign .)
    DRAW_CIRCLE     reduce using rule 58 (asigarray -> asign .)
    DRAW_TRIANGLE   reduce using rule 58 (asigarray -> asign .)
    DRAW_SQUARE     reduce using rule 58 (asigarray -> asign .)
    DRAW_RECTANGLE  reduce using rule 58 (asigarray -> asign .)
    DRAW_QUADRITERAL reduce using rule 58 (asigarray -> asign .)
    RIGHTB          reduce using rule 58 (asigarray -> asign .)


state 125

    (49) llamada -> ID llamafun . LEFTP args RIGHTP

    LEFTP           shift and go to state 166


state 126

    (64) condicion -> IF LEFTP . condicion1 RIGHTP LEFTB bloque RIGHTB else
    (67) condicion1 -> . exp
    (70) exp -> . llamada
    (71) exp -> . expresion
    (49) llamada -> . ID llamafun LEFTP args RIGHTP
    (72) expresion -> . operador1 exp1
    (76) operador1 -> . operador2 exp2
    (84) operador2 -> . operador3 exp3
    (88) operador3 -> . operador4 exp4
    (93) operador4 -> . ID idarray
    (96) operador4 -> . constante
    (97) operador4 -> . LEFTP expresion RIGHTP
    (98) constante -> . INT_CTE
    (99) constante -> . FLOAT_CTE
    (100) constante -> . CHAR_CTE
    (101) constante -> . STRING_CTE
    (102) constante -> . TRUE
    (103) constante -> . FALSE

    ID              shift and go to state 104
    LEFTP           shift and go to state 99
    INT_CTE         shift and go to state 105
    FLOAT_CTE       shift and go to state 107
    CHAR_CTE        shift and go to state 101
    STRING_CTE      shift and go to state 93
    TRUE            shift and go to state 97
    FALSE           shift and go to state 103

    expresion                      shift and go to state 106
    constante                      shift and go to state 102
    llamada                        shift and go to state 100
    operador4                      shift and go to state 98
    condicion1                     shift and go to state 167
    exp                            shift and go to state 168
    operador1                      shift and go to state 94
    operador2                      shift and go to state 96
    operador3                      shift and go to state 95

state 127

    (104) dibujaPunto -> DRAW_DOT LEFTP . exp COMMA exp COMMA color RIGHTP SEMICOLON
    (70) exp -> . llamada
    (71) exp -> . expresion
    (49) llamada -> . ID llamafun LEFTP args RIGHTP
    (72) expresion -> . operador1 exp1
    (76) operador1 -> . operador2 exp2
    (84) operador2 -> . operador3 exp3
    (88) operador3 -> . operador4 exp4
    (93) operador4 -> . ID idarray
    (96) operador4 -> . constante
    (97) operador4 -> . LEFTP expresion RIGHTP
    (98) constante -> . INT_CTE
    (99) constante -> . FLOAT_CTE
    (100) constante -> . CHAR_CTE
    (101) constante -> . STRING_CTE
    (102) constante -> . TRUE
    (103) constante -> . FALSE

    ID              shift and go to state 104
    LEFTP           shift and go to state 99
    INT_CTE         shift and go to state 105
    FLOAT_CTE       shift and go to state 107
    CHAR_CTE        shift and go to state 101
    STRING_CTE      shift and go to state 93
    TRUE            shift and go to state 97
    FALSE           shift and go to state 103

    expresion                      shift and go to state 106
    constante                      shift and go to state 102
    llamada                        shift and go to state 100
    exp                            shift and go to state 169
    operador1                      shift and go to state 94
    operador3                      shift and go to state 95
    operador2                      shift and go to state 96
    operador4                      shift and go to state 98

state 128

    (106) dibujaCirculo -> DRAW_CIRCLE LEFTP . exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON
    (70) exp -> . llamada
    (71) exp -> . expresion
    (49) llamada -> . ID llamafun LEFTP args RIGHTP
    (72) expresion -> . operador1 exp1
    (76) operador1 -> . operador2 exp2
    (84) operador2 -> . operador3 exp3
    (88) operador3 -> . operador4 exp4
    (93) operador4 -> . ID idarray
    (96) operador4 -> . constante
    (97) operador4 -> . LEFTP expresion RIGHTP
    (98) constante -> . INT_CTE
    (99) constante -> . FLOAT_CTE
    (100) constante -> . CHAR_CTE
    (101) constante -> . STRING_CTE
    (102) constante -> . TRUE
    (103) constante -> . FALSE

    ID              shift and go to state 104
    LEFTP           shift and go to state 99
    INT_CTE         shift and go to state 105
    FLOAT_CTE       shift and go to state 107
    CHAR_CTE        shift and go to state 101
    STRING_CTE      shift and go to state 93
    TRUE            shift and go to state 97
    FALSE           shift and go to state 103

    expresion                      shift and go to state 106
    constante                      shift and go to state 102
    llamada                        shift and go to state 100
    exp                            shift and go to state 170
    operador1                      shift and go to state 94
    operador3                      shift and go to state 95
    operador2                      shift and go to state 96
    operador4                      shift and go to state 98

state 129

    (14) metodo -> METHOD tipo_metodo ID inicio_method LEFTP params RIGHTP LEFTB method_vars bloque RIGHTB . end_method
    (16) end_method -> . empty
    (124) empty -> .

    METHOD          reduce using rule 124 (empty -> .)
    VOID            reduce using rule 124 (empty -> .)

    end_method                     shift and go to state 171
    empty                          shift and go to state 172

state 130

    (74) exp1 -> AND . saveop operador1 exp1
    (92) saveop -> . empty
    (124) empty -> .

    ID              reduce using rule 124 (empty -> .)
    LEFTP           reduce using rule 124 (empty -> .)
    INT_CTE         reduce using rule 124 (empty -> .)
    FLOAT_CTE       reduce using rule 124 (empty -> .)
    CHAR_CTE        reduce using rule 124 (empty -> .)
    STRING_CTE      reduce using rule 124 (empty -> .)
    TRUE            reduce using rule 124 (empty -> .)
    FALSE           reduce using rule 124 (empty -> .)

    saveop                         shift and go to state 173
    empty                          shift and go to state 174

state 131

    (72) expresion -> operador1 exp1 .

    COMMA           reduce using rule 72 (expresion -> operador1 exp1 .)
    SEMICOLON       reduce using rule 72 (expresion -> operador1 exp1 .)
    RIGHTSB         reduce using rule 72 (expresion -> operador1 exp1 .)
    RIGHTP          reduce using rule 72 (expresion -> operador1 exp1 .)


state 132

    (75) exp1 -> OR . saveop operador1 exp1
    (92) saveop -> . empty
    (124) empty -> .

    ID              reduce using rule 124 (empty -> .)
    LEFTP           reduce using rule 124 (empty -> .)
    INT_CTE         reduce using rule 124 (empty -> .)
    FLOAT_CTE       reduce using rule 124 (empty -> .)
    CHAR_CTE        reduce using rule 124 (empty -> .)
    STRING_CTE      reduce using rule 124 (empty -> .)
    TRUE            reduce using rule 124 (empty -> .)
    FALSE           reduce using rule 124 (empty -> .)

    saveop                         shift and go to state 175
    empty                          shift and go to state 174

state 133

    (73) exp1 -> empty .

    SEMICOLON       reduce using rule 73 (exp1 -> empty .)
    RIGHTP          reduce using rule 73 (exp1 -> empty .)
    COMMA           reduce using rule 73 (exp1 -> empty .)
    RIGHTSB         reduce using rule 73 (exp1 -> empty .)


state 134

    (87) exp3 -> LESS . saveop operador3 exp3
    (92) saveop -> . empty
    (124) empty -> .

    ID              reduce using rule 124 (empty -> .)
    LEFTP           reduce using rule 124 (empty -> .)
    INT_CTE         reduce using rule 124 (empty -> .)
    FLOAT_CTE       reduce using rule 124 (empty -> .)
    CHAR_CTE        reduce using rule 124 (empty -> .)
    STRING_CTE      reduce using rule 124 (empty -> .)
    TRUE            reduce using rule 124 (empty -> .)
    FALSE           reduce using rule 124 (empty -> .)

    saveop                         shift and go to state 176
    empty                          shift and go to state 174

state 135

    (84) operador2 -> operador3 exp3 .

    EQUALS          reduce using rule 84 (operador2 -> operador3 exp3 .)
    NOTEQUAL        reduce using rule 84 (operador2 -> operador3 exp3 .)
    GREATEREQUAL    reduce using rule 84 (operador2 -> operador3 exp3 .)
    GREATERTHAN     reduce using rule 84 (operador2 -> operador3 exp3 .)
    LESSTHAN        reduce using rule 84 (operador2 -> operador3 exp3 .)
    LESSEQUAL       reduce using rule 84 (operador2 -> operador3 exp3 .)
    AND             reduce using rule 84 (operador2 -> operador3 exp3 .)
    OR              reduce using rule 84 (operador2 -> operador3 exp3 .)
    COMMA           reduce using rule 84 (operador2 -> operador3 exp3 .)
    RIGHTP          reduce using rule 84 (operador2 -> operador3 exp3 .)
    SEMICOLON       reduce using rule 84 (operador2 -> operador3 exp3 .)
    RIGHTSB         reduce using rule 84 (operador2 -> operador3 exp3 .)


state 136

    (86) exp3 -> SUM . saveop operador3 exp3
    (92) saveop -> . empty
    (124) empty -> .

    ID              reduce using rule 124 (empty -> .)
    LEFTP           reduce using rule 124 (empty -> .)
    INT_CTE         reduce using rule 124 (empty -> .)
    FLOAT_CTE       reduce using rule 124 (empty -> .)
    CHAR_CTE        reduce using rule 124 (empty -> .)
    STRING_CTE      reduce using rule 124 (empty -> .)
    TRUE            reduce using rule 124 (empty -> .)
    FALSE           reduce using rule 124 (empty -> .)

    saveop                         shift and go to state 177
    empty                          shift and go to state 174

state 137

    (85) exp3 -> empty .

    EQUALS          reduce using rule 85 (exp3 -> empty .)
    NOTEQUAL        reduce using rule 85 (exp3 -> empty .)
    GREATEREQUAL    reduce using rule 85 (exp3 -> empty .)
    GREATERTHAN     reduce using rule 85 (exp3 -> empty .)
    LESSTHAN        reduce using rule 85 (exp3 -> empty .)
    LESSEQUAL       reduce using rule 85 (exp3 -> empty .)
    AND             reduce using rule 85 (exp3 -> empty .)
    OR              reduce using rule 85 (exp3 -> empty .)
    SEMICOLON       reduce using rule 85 (exp3 -> empty .)
    RIGHTP          reduce using rule 85 (exp3 -> empty .)
    COMMA           reduce using rule 85 (exp3 -> empty .)
    RIGHTSB         reduce using rule 85 (exp3 -> empty .)


state 138

    (79) exp2 -> NOTEQUAL . saveop operador2 exp2
    (92) saveop -> . empty
    (124) empty -> .

    ID              reduce using rule 124 (empty -> .)
    LEFTP           reduce using rule 124 (empty -> .)
    INT_CTE         reduce using rule 124 (empty -> .)
    FLOAT_CTE       reduce using rule 124 (empty -> .)
    CHAR_CTE        reduce using rule 124 (empty -> .)
    STRING_CTE      reduce using rule 124 (empty -> .)
    TRUE            reduce using rule 124 (empty -> .)
    FALSE           reduce using rule 124 (empty -> .)

    saveop                         shift and go to state 178
    empty                          shift and go to state 174

state 139

    (80) exp2 -> GREATEREQUAL . saveop operador2 exp2
    (92) saveop -> . empty
    (124) empty -> .

    ID              reduce using rule 124 (empty -> .)
    LEFTP           reduce using rule 124 (empty -> .)
    INT_CTE         reduce using rule 124 (empty -> .)
    FLOAT_CTE       reduce using rule 124 (empty -> .)
    CHAR_CTE        reduce using rule 124 (empty -> .)
    STRING_CTE      reduce using rule 124 (empty -> .)
    TRUE            reduce using rule 124 (empty -> .)
    FALSE           reduce using rule 124 (empty -> .)

    saveop                         shift and go to state 179
    empty                          shift and go to state 174

state 140

    (76) operador1 -> operador2 exp2 .

    AND             reduce using rule 76 (operador1 -> operador2 exp2 .)
    OR              reduce using rule 76 (operador1 -> operador2 exp2 .)
    COMMA           reduce using rule 76 (operador1 -> operador2 exp2 .)
    RIGHTP          reduce using rule 76 (operador1 -> operador2 exp2 .)
    SEMICOLON       reduce using rule 76 (operador1 -> operador2 exp2 .)
    RIGHTSB         reduce using rule 76 (operador1 -> operador2 exp2 .)


state 141

    (78) exp2 -> EQUALS . saveop operador2 exp2
    (92) saveop -> . empty
    (124) empty -> .

    ID              reduce using rule 124 (empty -> .)
    LEFTP           reduce using rule 124 (empty -> .)
    INT_CTE         reduce using rule 124 (empty -> .)
    FLOAT_CTE       reduce using rule 124 (empty -> .)
    CHAR_CTE        reduce using rule 124 (empty -> .)
    STRING_CTE      reduce using rule 124 (empty -> .)
    TRUE            reduce using rule 124 (empty -> .)
    FALSE           reduce using rule 124 (empty -> .)

    saveop                         shift and go to state 180
    empty                          shift and go to state 174

state 142

    (82) exp2 -> LESSTHAN . saveop operador2 exp2
    (92) saveop -> . empty
    (124) empty -> .

    ID              reduce using rule 124 (empty -> .)
    LEFTP           reduce using rule 124 (empty -> .)
    INT_CTE         reduce using rule 124 (empty -> .)
    FLOAT_CTE       reduce using rule 124 (empty -> .)
    CHAR_CTE        reduce using rule 124 (empty -> .)
    STRING_CTE      reduce using rule 124 (empty -> .)
    TRUE            reduce using rule 124 (empty -> .)
    FALSE           reduce using rule 124 (empty -> .)

    saveop                         shift and go to state 181
    empty                          shift and go to state 174

state 143

    (81) exp2 -> GREATERTHAN . saveop operador2 exp2
    (92) saveop -> . empty
    (124) empty -> .

    ID              reduce using rule 124 (empty -> .)
    LEFTP           reduce using rule 124 (empty -> .)
    INT_CTE         reduce using rule 124 (empty -> .)
    FLOAT_CTE       reduce using rule 124 (empty -> .)
    CHAR_CTE        reduce using rule 124 (empty -> .)
    STRING_CTE      reduce using rule 124 (empty -> .)
    TRUE            reduce using rule 124 (empty -> .)
    FALSE           reduce using rule 124 (empty -> .)

    saveop                         shift and go to state 182
    empty                          shift and go to state 174

state 144

    (83) exp2 -> LESSEQUAL . saveop operador2 exp2
    (92) saveop -> . empty
    (124) empty -> .

    ID              reduce using rule 124 (empty -> .)
    LEFTP           reduce using rule 124 (empty -> .)
    INT_CTE         reduce using rule 124 (empty -> .)
    FLOAT_CTE       reduce using rule 124 (empty -> .)
    CHAR_CTE        reduce using rule 124 (empty -> .)
    STRING_CTE      reduce using rule 124 (empty -> .)
    TRUE            reduce using rule 124 (empty -> .)
    FALSE           reduce using rule 124 (empty -> .)

    saveop                         shift and go to state 183
    empty                          shift and go to state 174

state 145

    (77) exp2 -> empty .

    AND             reduce using rule 77 (exp2 -> empty .)
    OR              reduce using rule 77 (exp2 -> empty .)
    SEMICOLON       reduce using rule 77 (exp2 -> empty .)
    RIGHTP          reduce using rule 77 (exp2 -> empty .)
    COMMA           reduce using rule 77 (exp2 -> empty .)
    RIGHTSB         reduce using rule 77 (exp2 -> empty .)


state 146

    (91) exp4 -> DIVISION . saveop operador4 exp4
    (92) saveop -> . empty
    (124) empty -> .

    ID              reduce using rule 124 (empty -> .)
    LEFTP           reduce using rule 124 (empty -> .)
    INT_CTE         reduce using rule 124 (empty -> .)
    FLOAT_CTE       reduce using rule 124 (empty -> .)
    CHAR_CTE        reduce using rule 124 (empty -> .)
    STRING_CTE      reduce using rule 124 (empty -> .)
    TRUE            reduce using rule 124 (empty -> .)
    FALSE           reduce using rule 124 (empty -> .)

    saveop                         shift and go to state 184
    empty                          shift and go to state 174

state 147

    (90) exp4 -> TIMES . saveop operador4 exp4
    (92) saveop -> . empty
    (124) empty -> .

    ID              reduce using rule 124 (empty -> .)
    LEFTP           reduce using rule 124 (empty -> .)
    INT_CTE         reduce using rule 124 (empty -> .)
    FLOAT_CTE       reduce using rule 124 (empty -> .)
    CHAR_CTE        reduce using rule 124 (empty -> .)
    STRING_CTE      reduce using rule 124 (empty -> .)
    TRUE            reduce using rule 124 (empty -> .)
    FALSE           reduce using rule 124 (empty -> .)

    saveop                         shift and go to state 185
    empty                          shift and go to state 174

state 148

    (88) operador3 -> operador4 exp4 .

    SUM             reduce using rule 88 (operador3 -> operador4 exp4 .)
    LESS            reduce using rule 88 (operador3 -> operador4 exp4 .)
    EQUALS          reduce using rule 88 (operador3 -> operador4 exp4 .)
    NOTEQUAL        reduce using rule 88 (operador3 -> operador4 exp4 .)
    GREATEREQUAL    reduce using rule 88 (operador3 -> operador4 exp4 .)
    GREATERTHAN     reduce using rule 88 (operador3 -> operador4 exp4 .)
    LESSTHAN        reduce using rule 88 (operador3 -> operador4 exp4 .)
    LESSEQUAL       reduce using rule 88 (operador3 -> operador4 exp4 .)
    AND             reduce using rule 88 (operador3 -> operador4 exp4 .)
    OR              reduce using rule 88 (operador3 -> operador4 exp4 .)
    SEMICOLON       reduce using rule 88 (operador3 -> operador4 exp4 .)
    COMMA           reduce using rule 88 (operador3 -> operador4 exp4 .)
    RIGHTP          reduce using rule 88 (operador3 -> operador4 exp4 .)
    RIGHTSB         reduce using rule 88 (operador3 -> operador4 exp4 .)


state 149

    (89) exp4 -> empty .

    SUM             reduce using rule 89 (exp4 -> empty .)
    LESS            reduce using rule 89 (exp4 -> empty .)
    EQUALS          reduce using rule 89 (exp4 -> empty .)
    NOTEQUAL        reduce using rule 89 (exp4 -> empty .)
    GREATEREQUAL    reduce using rule 89 (exp4 -> empty .)
    GREATERTHAN     reduce using rule 89 (exp4 -> empty .)
    LESSTHAN        reduce using rule 89 (exp4 -> empty .)
    LESSEQUAL       reduce using rule 89 (exp4 -> empty .)
    AND             reduce using rule 89 (exp4 -> empty .)
    OR              reduce using rule 89 (exp4 -> empty .)
    SEMICOLON       reduce using rule 89 (exp4 -> empty .)
    RIGHTP          reduce using rule 89 (exp4 -> empty .)
    COMMA           reduce using rule 89 (exp4 -> empty .)
    RIGHTSB         reduce using rule 89 (exp4 -> empty .)


state 150

    (97) operador4 -> LEFTP expresion . RIGHTP

    RIGHTP          shift and go to state 186


state 151

    (93) operador4 -> ID . idarray
    (94) idarray -> . LEFTSB exp RIGHTSB
    (95) idarray -> . empty
    (124) empty -> .

    LEFTSB          shift and go to state 152
    TIMES           reduce using rule 124 (empty -> .)
    DIVISION        reduce using rule 124 (empty -> .)
    SUM             reduce using rule 124 (empty -> .)
    LESS            reduce using rule 124 (empty -> .)
    EQUALS          reduce using rule 124 (empty -> .)
    NOTEQUAL        reduce using rule 124 (empty -> .)
    GREATEREQUAL    reduce using rule 124 (empty -> .)
    GREATERTHAN     reduce using rule 124 (empty -> .)
    LESSTHAN        reduce using rule 124 (empty -> .)
    LESSEQUAL       reduce using rule 124 (empty -> .)
    AND             reduce using rule 124 (empty -> .)
    OR              reduce using rule 124 (empty -> .)
    RIGHTP          reduce using rule 124 (empty -> .)
    SEMICOLON       reduce using rule 124 (empty -> .)
    COMMA           reduce using rule 124 (empty -> .)
    RIGHTSB         reduce using rule 124 (empty -> .)

    empty                          shift and go to state 187
    idarray                        shift and go to state 153

state 152

    (94) idarray -> LEFTSB . exp RIGHTSB
    (70) exp -> . llamada
    (71) exp -> . expresion
    (49) llamada -> . ID llamafun LEFTP args RIGHTP
    (72) expresion -> . operador1 exp1
    (76) operador1 -> . operador2 exp2
    (84) operador2 -> . operador3 exp3
    (88) operador3 -> . operador4 exp4
    (93) operador4 -> . ID idarray
    (96) operador4 -> . constante
    (97) operador4 -> . LEFTP expresion RIGHTP
    (98) constante -> . INT_CTE
    (99) constante -> . FLOAT_CTE
    (100) constante -> . CHAR_CTE
    (101) constante -> . STRING_CTE
    (102) constante -> . TRUE
    (103) constante -> . FALSE

    ID              shift and go to state 104
    LEFTP           shift and go to state 99
    INT_CTE         shift and go to state 105
    FLOAT_CTE       shift and go to state 107
    CHAR_CTE        shift and go to state 101
    STRING_CTE      shift and go to state 93
    TRUE            shift and go to state 97
    FALSE           shift and go to state 103

    expresion                      shift and go to state 106
    constante                      shift and go to state 102
    llamada                        shift and go to state 100
    exp                            shift and go to state 188
    operador1                      shift and go to state 94
    operador3                      shift and go to state 95
    operador2                      shift and go to state 96
    operador4                      shift and go to state 98

state 153

    (93) operador4 -> ID idarray .

    TIMES           reduce using rule 93 (operador4 -> ID idarray .)
    DIVISION        reduce using rule 93 (operador4 -> ID idarray .)
    SUM             reduce using rule 93 (operador4 -> ID idarray .)
    LESS            reduce using rule 93 (operador4 -> ID idarray .)
    EQUALS          reduce using rule 93 (operador4 -> ID idarray .)
    NOTEQUAL        reduce using rule 93 (operador4 -> ID idarray .)
    GREATEREQUAL    reduce using rule 93 (operador4 -> ID idarray .)
    GREATERTHAN     reduce using rule 93 (operador4 -> ID idarray .)
    LESSTHAN        reduce using rule 93 (operador4 -> ID idarray .)
    LESSEQUAL       reduce using rule 93 (operador4 -> ID idarray .)
    AND             reduce using rule 93 (operador4 -> ID idarray .)
    OR              reduce using rule 93 (operador4 -> ID idarray .)
    COMMA           reduce using rule 93 (operador4 -> ID idarray .)
    RIGHTSB         reduce using rule 93 (operador4 -> ID idarray .)
    SEMICOLON       reduce using rule 93 (operador4 -> ID idarray .)
    RIGHTP          reduce using rule 93 (operador4 -> ID idarray .)


state 154

    (50) llamafun -> empty .
    (95) idarray -> empty .

    LEFTP           reduce using rule 50 (llamafun -> empty .)
    TIMES           reduce using rule 95 (idarray -> empty .)
    DIVISION        reduce using rule 95 (idarray -> empty .)
    SUM             reduce using rule 95 (idarray -> empty .)
    LESS            reduce using rule 95 (idarray -> empty .)
    EQUALS          reduce using rule 95 (idarray -> empty .)
    NOTEQUAL        reduce using rule 95 (idarray -> empty .)
    GREATEREQUAL    reduce using rule 95 (idarray -> empty .)
    GREATERTHAN     reduce using rule 95 (idarray -> empty .)
    LESSTHAN        reduce using rule 95 (idarray -> empty .)
    LESSEQUAL       reduce using rule 95 (idarray -> empty .)
    AND             reduce using rule 95 (idarray -> empty .)
    OR              reduce using rule 95 (idarray -> empty .)
    SEMICOLON       reduce using rule 95 (idarray -> empty .)
    COMMA           reduce using rule 95 (idarray -> empty .)
    RIGHTP          reduce using rule 95 (idarray -> empty .)
    RIGHTSB         reduce using rule 95 (idarray -> empty .)


state 155

    (46) return -> RETURN exp SEMICOLON .

    IF              reduce using rule 46 (return -> RETURN exp SEMICOLON .)
    WHILE           reduce using rule 46 (return -> RETURN exp SEMICOLON .)
    RETURN          reduce using rule 46 (return -> RETURN exp SEMICOLON .)
    ID              reduce using rule 46 (return -> RETURN exp SEMICOLON .)
    PRINT           reduce using rule 46 (return -> RETURN exp SEMICOLON .)
    DRAW_DOT        reduce using rule 46 (return -> RETURN exp SEMICOLON .)
    DRAW_LINE       reduce using rule 46 (return -> RETURN exp SEMICOLON .)
    DRAW_CIRCLE     reduce using rule 46 (return -> RETURN exp SEMICOLON .)
    DRAW_TRIANGLE   reduce using rule 46 (return -> RETURN exp SEMICOLON .)
    DRAW_SQUARE     reduce using rule 46 (return -> RETURN exp SEMICOLON .)
    DRAW_RECTANGLE  reduce using rule 46 (return -> RETURN exp SEMICOLON .)
    DRAW_QUADRITERAL reduce using rule 46 (return -> RETURN exp SEMICOLON .)
    RIGHTB          reduce using rule 46 (return -> RETURN exp SEMICOLON .)


state 156

    (108) dibujaCuadrado -> DRAW_SQUARE LEFTP exp . COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON

    COMMA           shift and go to state 189


state 157

    (110) dibujaCuadrilatero -> DRAW_QUADRITERAL LEFTP exp . COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON

    COMMA           shift and go to state 190


state 158

    (48) escritura -> PRINT LEFTP exp . RIGHTP SEMICOLON

    RIGHTP          shift and go to state 191


state 159

    (60) ciclo -> WHILE salto_ciclo LEFTP . exp ciclo1 RIGHTP LEFTB bloque ciclo2 RIGHTB
    (70) exp -> . llamada
    (71) exp -> . expresion
    (49) llamada -> . ID llamafun LEFTP args RIGHTP
    (72) expresion -> . operador1 exp1
    (76) operador1 -> . operador2 exp2
    (84) operador2 -> . operador3 exp3
    (88) operador3 -> . operador4 exp4
    (93) operador4 -> . ID idarray
    (96) operador4 -> . constante
    (97) operador4 -> . LEFTP expresion RIGHTP
    (98) constante -> . INT_CTE
    (99) constante -> . FLOAT_CTE
    (100) constante -> . CHAR_CTE
    (101) constante -> . STRING_CTE
    (102) constante -> . TRUE
    (103) constante -> . FALSE

    ID              shift and go to state 104
    LEFTP           shift and go to state 99
    INT_CTE         shift and go to state 105
    FLOAT_CTE       shift and go to state 107
    CHAR_CTE        shift and go to state 101
    STRING_CTE      shift and go to state 93
    TRUE            shift and go to state 97
    FALSE           shift and go to state 103

    expresion                      shift and go to state 106
    constante                      shift and go to state 102
    llamada                        shift and go to state 100
    operador4                      shift and go to state 98
    exp                            shift and go to state 192
    operador1                      shift and go to state 94
    operador2                      shift and go to state 96
    operador3                      shift and go to state 95

state 160

    (107) dibujaTriangulo -> DRAW_TRIANGLE LEFTP exp . COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON

    COMMA           shift and go to state 193


state 161

    (105) dibujaLinea -> DRAW_LINE LEFTP exp . COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON

    COMMA           shift and go to state 194


state 162

    (109) dibujaRectangulo -> DRAW_RECTANGLE LEFTP exp . COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON

    COMMA           shift and go to state 195


state 163

    (57) asigarray -> LEFTSB exp . RIGHTSB asign

    RIGHTSB         shift and go to state 196


state 164

    (47) lectura -> ID ASSIGN READ . LEFTP RIGHTP SEMICOLON

    LEFTP           shift and go to state 197


state 165

    (59) asign -> ASSIGN exp . SEMICOLON

    SEMICOLON       shift and go to state 198


state 166

    (49) llamada -> ID llamafun LEFTP . args RIGHTP
    (51) args -> . exp param listargs
    (52) args -> . empty
    (70) exp -> . llamada
    (71) exp -> . expresion
    (124) empty -> .
    (49) llamada -> . ID llamafun LEFTP args RIGHTP
    (72) expresion -> . operador1 exp1
    (76) operador1 -> . operador2 exp2
    (84) operador2 -> . operador3 exp3
    (88) operador3 -> . operador4 exp4
    (93) operador4 -> . ID idarray
    (96) operador4 -> . constante
    (97) operador4 -> . LEFTP expresion RIGHTP
    (98) constante -> . INT_CTE
    (99) constante -> . FLOAT_CTE
    (100) constante -> . CHAR_CTE
    (101) constante -> . STRING_CTE
    (102) constante -> . TRUE
    (103) constante -> . FALSE

    RIGHTP          reduce using rule 124 (empty -> .)
    ID              shift and go to state 104
    LEFTP           shift and go to state 99
    INT_CTE         shift and go to state 105
    FLOAT_CTE       shift and go to state 107
    CHAR_CTE        shift and go to state 101
    STRING_CTE      shift and go to state 93
    TRUE            shift and go to state 97
    FALSE           shift and go to state 103

    expresion                      shift and go to state 106
    constante                      shift and go to state 102
    args                           shift and go to state 200
    llamada                        shift and go to state 100
    exp                            shift and go to state 201
    operador1                      shift and go to state 94
    operador3                      shift and go to state 95
    operador2                      shift and go to state 96
    operador4                      shift and go to state 98
    empty                          shift and go to state 199

state 167

    (64) condicion -> IF LEFTP condicion1 . RIGHTP LEFTB bloque RIGHTB else

    RIGHTP          shift and go to state 202


state 168

    (67) condicion1 -> exp .

    RIGHTP          reduce using rule 67 (condicion1 -> exp .)


state 169

    (104) dibujaPunto -> DRAW_DOT LEFTP exp . COMMA exp COMMA color RIGHTP SEMICOLON

    COMMA           shift and go to state 203


state 170

    (106) dibujaCirculo -> DRAW_CIRCLE LEFTP exp . COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON

    COMMA           shift and go to state 204


state 171

    (14) metodo -> METHOD tipo_metodo ID inicio_method LEFTP params RIGHTP LEFTB method_vars bloque RIGHTB end_method .

    METHOD          reduce using rule 14 (metodo -> METHOD tipo_metodo ID inicio_method LEFTP params RIGHTP LEFTB method_vars bloque RIGHTB end_method .)
    VOID            reduce using rule 14 (metodo -> METHOD tipo_metodo ID inicio_method LEFTP params RIGHTP LEFTB method_vars bloque RIGHTB end_method .)


state 172

    (16) end_method -> empty .

    METHOD          reduce using rule 16 (end_method -> empty .)
    VOID            reduce using rule 16 (end_method -> empty .)


state 173

    (74) exp1 -> AND saveop . operador1 exp1
    (76) operador1 -> . operador2 exp2
    (84) operador2 -> . operador3 exp3
    (88) operador3 -> . operador4 exp4
    (93) operador4 -> . ID idarray
    (96) operador4 -> . constante
    (97) operador4 -> . LEFTP expresion RIGHTP
    (98) constante -> . INT_CTE
    (99) constante -> . FLOAT_CTE
    (100) constante -> . CHAR_CTE
    (101) constante -> . STRING_CTE
    (102) constante -> . TRUE
    (103) constante -> . FALSE

    ID              shift and go to state 151
    LEFTP           shift and go to state 99
    INT_CTE         shift and go to state 105
    FLOAT_CTE       shift and go to state 107
    CHAR_CTE        shift and go to state 101
    STRING_CTE      shift and go to state 93
    TRUE            shift and go to state 97
    FALSE           shift and go to state 103

    constante                      shift and go to state 102
    operador1                      shift and go to state 205
    operador3                      shift and go to state 95
    operador2                      shift and go to state 96
    operador4                      shift and go to state 98

state 174

    (92) saveop -> empty .

    ID              reduce using rule 92 (saveop -> empty .)
    LEFTP           reduce using rule 92 (saveop -> empty .)
    INT_CTE         reduce using rule 92 (saveop -> empty .)
    FLOAT_CTE       reduce using rule 92 (saveop -> empty .)
    CHAR_CTE        reduce using rule 92 (saveop -> empty .)
    STRING_CTE      reduce using rule 92 (saveop -> empty .)
    TRUE            reduce using rule 92 (saveop -> empty .)
    FALSE           reduce using rule 92 (saveop -> empty .)


state 175

    (75) exp1 -> OR saveop . operador1 exp1
    (76) operador1 -> . operador2 exp2
    (84) operador2 -> . operador3 exp3
    (88) operador3 -> . operador4 exp4
    (93) operador4 -> . ID idarray
    (96) operador4 -> . constante
    (97) operador4 -> . LEFTP expresion RIGHTP
    (98) constante -> . INT_CTE
    (99) constante -> . FLOAT_CTE
    (100) constante -> . CHAR_CTE
    (101) constante -> . STRING_CTE
    (102) constante -> . TRUE
    (103) constante -> . FALSE

    ID              shift and go to state 151
    LEFTP           shift and go to state 99
    INT_CTE         shift and go to state 105
    FLOAT_CTE       shift and go to state 107
    CHAR_CTE        shift and go to state 101
    STRING_CTE      shift and go to state 93
    TRUE            shift and go to state 97
    FALSE           shift and go to state 103

    constante                      shift and go to state 102
    operador1                      shift and go to state 206
    operador3                      shift and go to state 95
    operador2                      shift and go to state 96
    operador4                      shift and go to state 98

state 176

    (87) exp3 -> LESS saveop . operador3 exp3
    (88) operador3 -> . operador4 exp4
    (93) operador4 -> . ID idarray
    (96) operador4 -> . constante
    (97) operador4 -> . LEFTP expresion RIGHTP
    (98) constante -> . INT_CTE
    (99) constante -> . FLOAT_CTE
    (100) constante -> . CHAR_CTE
    (101) constante -> . STRING_CTE
    (102) constante -> . TRUE
    (103) constante -> . FALSE

    ID              shift and go to state 151
    LEFTP           shift and go to state 99
    INT_CTE         shift and go to state 105
    FLOAT_CTE       shift and go to state 107
    CHAR_CTE        shift and go to state 101
    STRING_CTE      shift and go to state 93
    TRUE            shift and go to state 97
    FALSE           shift and go to state 103

    operador4                      shift and go to state 98
    constante                      shift and go to state 102
    operador3                      shift and go to state 207

state 177

    (86) exp3 -> SUM saveop . operador3 exp3
    (88) operador3 -> . operador4 exp4
    (93) operador4 -> . ID idarray
    (96) operador4 -> . constante
    (97) operador4 -> . LEFTP expresion RIGHTP
    (98) constante -> . INT_CTE
    (99) constante -> . FLOAT_CTE
    (100) constante -> . CHAR_CTE
    (101) constante -> . STRING_CTE
    (102) constante -> . TRUE
    (103) constante -> . FALSE

    ID              shift and go to state 151
    LEFTP           shift and go to state 99
    INT_CTE         shift and go to state 105
    FLOAT_CTE       shift and go to state 107
    CHAR_CTE        shift and go to state 101
    STRING_CTE      shift and go to state 93
    TRUE            shift and go to state 97
    FALSE           shift and go to state 103

    operador4                      shift and go to state 98
    constante                      shift and go to state 102
    operador3                      shift and go to state 208

state 178

    (79) exp2 -> NOTEQUAL saveop . operador2 exp2
    (84) operador2 -> . operador3 exp3
    (88) operador3 -> . operador4 exp4
    (93) operador4 -> . ID idarray
    (96) operador4 -> . constante
    (97) operador4 -> . LEFTP expresion RIGHTP
    (98) constante -> . INT_CTE
    (99) constante -> . FLOAT_CTE
    (100) constante -> . CHAR_CTE
    (101) constante -> . STRING_CTE
    (102) constante -> . TRUE
    (103) constante -> . FALSE

    ID              shift and go to state 151
    LEFTP           shift and go to state 99
    INT_CTE         shift and go to state 105
    FLOAT_CTE       shift and go to state 107
    CHAR_CTE        shift and go to state 101
    STRING_CTE      shift and go to state 93
    TRUE            shift and go to state 97
    FALSE           shift and go to state 103

    constante                      shift and go to state 102
    operador3                      shift and go to state 95
    operador2                      shift and go to state 209
    operador4                      shift and go to state 98

state 179

    (80) exp2 -> GREATEREQUAL saveop . operador2 exp2
    (84) operador2 -> . operador3 exp3
    (88) operador3 -> . operador4 exp4
    (93) operador4 -> . ID idarray
    (96) operador4 -> . constante
    (97) operador4 -> . LEFTP expresion RIGHTP
    (98) constante -> . INT_CTE
    (99) constante -> . FLOAT_CTE
    (100) constante -> . CHAR_CTE
    (101) constante -> . STRING_CTE
    (102) constante -> . TRUE
    (103) constante -> . FALSE

    ID              shift and go to state 151
    LEFTP           shift and go to state 99
    INT_CTE         shift and go to state 105
    FLOAT_CTE       shift and go to state 107
    CHAR_CTE        shift and go to state 101
    STRING_CTE      shift and go to state 93
    TRUE            shift and go to state 97
    FALSE           shift and go to state 103

    constante                      shift and go to state 102
    operador3                      shift and go to state 95
    operador2                      shift and go to state 210
    operador4                      shift and go to state 98

state 180

    (78) exp2 -> EQUALS saveop . operador2 exp2
    (84) operador2 -> . operador3 exp3
    (88) operador3 -> . operador4 exp4
    (93) operador4 -> . ID idarray
    (96) operador4 -> . constante
    (97) operador4 -> . LEFTP expresion RIGHTP
    (98) constante -> . INT_CTE
    (99) constante -> . FLOAT_CTE
    (100) constante -> . CHAR_CTE
    (101) constante -> . STRING_CTE
    (102) constante -> . TRUE
    (103) constante -> . FALSE

    ID              shift and go to state 151
    LEFTP           shift and go to state 99
    INT_CTE         shift and go to state 105
    FLOAT_CTE       shift and go to state 107
    CHAR_CTE        shift and go to state 101
    STRING_CTE      shift and go to state 93
    TRUE            shift and go to state 97
    FALSE           shift and go to state 103

    constante                      shift and go to state 102
    operador3                      shift and go to state 95
    operador2                      shift and go to state 211
    operador4                      shift and go to state 98

state 181

    (82) exp2 -> LESSTHAN saveop . operador2 exp2
    (84) operador2 -> . operador3 exp3
    (88) operador3 -> . operador4 exp4
    (93) operador4 -> . ID idarray
    (96) operador4 -> . constante
    (97) operador4 -> . LEFTP expresion RIGHTP
    (98) constante -> . INT_CTE
    (99) constante -> . FLOAT_CTE
    (100) constante -> . CHAR_CTE
    (101) constante -> . STRING_CTE
    (102) constante -> . TRUE
    (103) constante -> . FALSE

    ID              shift and go to state 151
    LEFTP           shift and go to state 99
    INT_CTE         shift and go to state 105
    FLOAT_CTE       shift and go to state 107
    CHAR_CTE        shift and go to state 101
    STRING_CTE      shift and go to state 93
    TRUE            shift and go to state 97
    FALSE           shift and go to state 103

    constante                      shift and go to state 102
    operador3                      shift and go to state 95
    operador2                      shift and go to state 212
    operador4                      shift and go to state 98

state 182

    (81) exp2 -> GREATERTHAN saveop . operador2 exp2
    (84) operador2 -> . operador3 exp3
    (88) operador3 -> . operador4 exp4
    (93) operador4 -> . ID idarray
    (96) operador4 -> . constante
    (97) operador4 -> . LEFTP expresion RIGHTP
    (98) constante -> . INT_CTE
    (99) constante -> . FLOAT_CTE
    (100) constante -> . CHAR_CTE
    (101) constante -> . STRING_CTE
    (102) constante -> . TRUE
    (103) constante -> . FALSE

    ID              shift and go to state 151
    LEFTP           shift and go to state 99
    INT_CTE         shift and go to state 105
    FLOAT_CTE       shift and go to state 107
    CHAR_CTE        shift and go to state 101
    STRING_CTE      shift and go to state 93
    TRUE            shift and go to state 97
    FALSE           shift and go to state 103

    constante                      shift and go to state 102
    operador3                      shift and go to state 95
    operador2                      shift and go to state 213
    operador4                      shift and go to state 98

state 183

    (83) exp2 -> LESSEQUAL saveop . operador2 exp2
    (84) operador2 -> . operador3 exp3
    (88) operador3 -> . operador4 exp4
    (93) operador4 -> . ID idarray
    (96) operador4 -> . constante
    (97) operador4 -> . LEFTP expresion RIGHTP
    (98) constante -> . INT_CTE
    (99) constante -> . FLOAT_CTE
    (100) constante -> . CHAR_CTE
    (101) constante -> . STRING_CTE
    (102) constante -> . TRUE
    (103) constante -> . FALSE

    ID              shift and go to state 151
    LEFTP           shift and go to state 99
    INT_CTE         shift and go to state 105
    FLOAT_CTE       shift and go to state 107
    CHAR_CTE        shift and go to state 101
    STRING_CTE      shift and go to state 93
    TRUE            shift and go to state 97
    FALSE           shift and go to state 103

    constante                      shift and go to state 102
    operador3                      shift and go to state 95
    operador2                      shift and go to state 214
    operador4                      shift and go to state 98

state 184

    (91) exp4 -> DIVISION saveop . operador4 exp4
    (93) operador4 -> . ID idarray
    (96) operador4 -> . constante
    (97) operador4 -> . LEFTP expresion RIGHTP
    (98) constante -> . INT_CTE
    (99) constante -> . FLOAT_CTE
    (100) constante -> . CHAR_CTE
    (101) constante -> . STRING_CTE
    (102) constante -> . TRUE
    (103) constante -> . FALSE

    ID              shift and go to state 151
    LEFTP           shift and go to state 99
    INT_CTE         shift and go to state 105
    FLOAT_CTE       shift and go to state 107
    CHAR_CTE        shift and go to state 101
    STRING_CTE      shift and go to state 93
    TRUE            shift and go to state 97
    FALSE           shift and go to state 103

    constante                      shift and go to state 102
    operador4                      shift and go to state 215

state 185

    (90) exp4 -> TIMES saveop . operador4 exp4
    (93) operador4 -> . ID idarray
    (96) operador4 -> . constante
    (97) operador4 -> . LEFTP expresion RIGHTP
    (98) constante -> . INT_CTE
    (99) constante -> . FLOAT_CTE
    (100) constante -> . CHAR_CTE
    (101) constante -> . STRING_CTE
    (102) constante -> . TRUE
    (103) constante -> . FALSE

    ID              shift and go to state 151
    LEFTP           shift and go to state 99
    INT_CTE         shift and go to state 105
    FLOAT_CTE       shift and go to state 107
    CHAR_CTE        shift and go to state 101
    STRING_CTE      shift and go to state 93
    TRUE            shift and go to state 97
    FALSE           shift and go to state 103

    constante                      shift and go to state 102
    operador4                      shift and go to state 216

state 186

    (97) operador4 -> LEFTP expresion RIGHTP .

    TIMES           reduce using rule 97 (operador4 -> LEFTP expresion RIGHTP .)
    DIVISION        reduce using rule 97 (operador4 -> LEFTP expresion RIGHTP .)
    SUM             reduce using rule 97 (operador4 -> LEFTP expresion RIGHTP .)
    LESS            reduce using rule 97 (operador4 -> LEFTP expresion RIGHTP .)
    EQUALS          reduce using rule 97 (operador4 -> LEFTP expresion RIGHTP .)
    NOTEQUAL        reduce using rule 97 (operador4 -> LEFTP expresion RIGHTP .)
    GREATEREQUAL    reduce using rule 97 (operador4 -> LEFTP expresion RIGHTP .)
    GREATERTHAN     reduce using rule 97 (operador4 -> LEFTP expresion RIGHTP .)
    LESSTHAN        reduce using rule 97 (operador4 -> LEFTP expresion RIGHTP .)
    LESSEQUAL       reduce using rule 97 (operador4 -> LEFTP expresion RIGHTP .)
    AND             reduce using rule 97 (operador4 -> LEFTP expresion RIGHTP .)
    OR              reduce using rule 97 (operador4 -> LEFTP expresion RIGHTP .)
    COMMA           reduce using rule 97 (operador4 -> LEFTP expresion RIGHTP .)
    RIGHTSB         reduce using rule 97 (operador4 -> LEFTP expresion RIGHTP .)
    SEMICOLON       reduce using rule 97 (operador4 -> LEFTP expresion RIGHTP .)
    RIGHTP          reduce using rule 97 (operador4 -> LEFTP expresion RIGHTP .)


state 187

    (95) idarray -> empty .

    TIMES           reduce using rule 95 (idarray -> empty .)
    DIVISION        reduce using rule 95 (idarray -> empty .)
    SUM             reduce using rule 95 (idarray -> empty .)
    LESS            reduce using rule 95 (idarray -> empty .)
    EQUALS          reduce using rule 95 (idarray -> empty .)
    NOTEQUAL        reduce using rule 95 (idarray -> empty .)
    GREATEREQUAL    reduce using rule 95 (idarray -> empty .)
    GREATERTHAN     reduce using rule 95 (idarray -> empty .)
    LESSTHAN        reduce using rule 95 (idarray -> empty .)
    LESSEQUAL       reduce using rule 95 (idarray -> empty .)
    AND             reduce using rule 95 (idarray -> empty .)
    OR              reduce using rule 95 (idarray -> empty .)
    RIGHTP          reduce using rule 95 (idarray -> empty .)
    SEMICOLON       reduce using rule 95 (idarray -> empty .)
    COMMA           reduce using rule 95 (idarray -> empty .)
    RIGHTSB         reduce using rule 95 (idarray -> empty .)


state 188

    (94) idarray -> LEFTSB exp . RIGHTSB

    RIGHTSB         shift and go to state 217


state 189

    (108) dibujaCuadrado -> DRAW_SQUARE LEFTP exp COMMA . exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON
    (70) exp -> . llamada
    (71) exp -> . expresion
    (49) llamada -> . ID llamafun LEFTP args RIGHTP
    (72) expresion -> . operador1 exp1
    (76) operador1 -> . operador2 exp2
    (84) operador2 -> . operador3 exp3
    (88) operador3 -> . operador4 exp4
    (93) operador4 -> . ID idarray
    (96) operador4 -> . constante
    (97) operador4 -> . LEFTP expresion RIGHTP
    (98) constante -> . INT_CTE
    (99) constante -> . FLOAT_CTE
    (100) constante -> . CHAR_CTE
    (101) constante -> . STRING_CTE
    (102) constante -> . TRUE
    (103) constante -> . FALSE

    ID              shift and go to state 104
    LEFTP           shift and go to state 99
    INT_CTE         shift and go to state 105
    FLOAT_CTE       shift and go to state 107
    CHAR_CTE        shift and go to state 101
    STRING_CTE      shift and go to state 93
    TRUE            shift and go to state 97
    FALSE           shift and go to state 103

    expresion                      shift and go to state 106
    constante                      shift and go to state 102
    llamada                        shift and go to state 100
    exp                            shift and go to state 218
    operador1                      shift and go to state 94
    operador3                      shift and go to state 95
    operador2                      shift and go to state 96
    operador4                      shift and go to state 98

state 190

    (110) dibujaCuadrilatero -> DRAW_QUADRITERAL LEFTP exp COMMA . exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON
    (70) exp -> . llamada
    (71) exp -> . expresion
    (49) llamada -> . ID llamafun LEFTP args RIGHTP
    (72) expresion -> . operador1 exp1
    (76) operador1 -> . operador2 exp2
    (84) operador2 -> . operador3 exp3
    (88) operador3 -> . operador4 exp4
    (93) operador4 -> . ID idarray
    (96) operador4 -> . constante
    (97) operador4 -> . LEFTP expresion RIGHTP
    (98) constante -> . INT_CTE
    (99) constante -> . FLOAT_CTE
    (100) constante -> . CHAR_CTE
    (101) constante -> . STRING_CTE
    (102) constante -> . TRUE
    (103) constante -> . FALSE

    ID              shift and go to state 104
    LEFTP           shift and go to state 99
    INT_CTE         shift and go to state 105
    FLOAT_CTE       shift and go to state 107
    CHAR_CTE        shift and go to state 101
    STRING_CTE      shift and go to state 93
    TRUE            shift and go to state 97
    FALSE           shift and go to state 103

    expresion                      shift and go to state 106
    constante                      shift and go to state 102
    llamada                        shift and go to state 100
    exp                            shift and go to state 219
    operador1                      shift and go to state 94
    operador3                      shift and go to state 95
    operador2                      shift and go to state 96
    operador4                      shift and go to state 98

state 191

    (48) escritura -> PRINT LEFTP exp RIGHTP . SEMICOLON

    SEMICOLON       shift and go to state 220


state 192

    (60) ciclo -> WHILE salto_ciclo LEFTP exp . ciclo1 RIGHTP LEFTB bloque ciclo2 RIGHTB
    (62) ciclo1 -> . empty
    (124) empty -> .

    RIGHTP          reduce using rule 124 (empty -> .)

    ciclo1                         shift and go to state 221
    empty                          shift and go to state 222

state 193

    (107) dibujaTriangulo -> DRAW_TRIANGLE LEFTP exp COMMA . exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON
    (70) exp -> . llamada
    (71) exp -> . expresion
    (49) llamada -> . ID llamafun LEFTP args RIGHTP
    (72) expresion -> . operador1 exp1
    (76) operador1 -> . operador2 exp2
    (84) operador2 -> . operador3 exp3
    (88) operador3 -> . operador4 exp4
    (93) operador4 -> . ID idarray
    (96) operador4 -> . constante
    (97) operador4 -> . LEFTP expresion RIGHTP
    (98) constante -> . INT_CTE
    (99) constante -> . FLOAT_CTE
    (100) constante -> . CHAR_CTE
    (101) constante -> . STRING_CTE
    (102) constante -> . TRUE
    (103) constante -> . FALSE

    ID              shift and go to state 104
    LEFTP           shift and go to state 99
    INT_CTE         shift and go to state 105
    FLOAT_CTE       shift and go to state 107
    CHAR_CTE        shift and go to state 101
    STRING_CTE      shift and go to state 93
    TRUE            shift and go to state 97
    FALSE           shift and go to state 103

    expresion                      shift and go to state 106
    constante                      shift and go to state 102
    llamada                        shift and go to state 100
    exp                            shift and go to state 223
    operador1                      shift and go to state 94
    operador3                      shift and go to state 95
    operador2                      shift and go to state 96
    operador4                      shift and go to state 98

state 194

    (105) dibujaLinea -> DRAW_LINE LEFTP exp COMMA . exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON
    (70) exp -> . llamada
    (71) exp -> . expresion
    (49) llamada -> . ID llamafun LEFTP args RIGHTP
    (72) expresion -> . operador1 exp1
    (76) operador1 -> . operador2 exp2
    (84) operador2 -> . operador3 exp3
    (88) operador3 -> . operador4 exp4
    (93) operador4 -> . ID idarray
    (96) operador4 -> . constante
    (97) operador4 -> . LEFTP expresion RIGHTP
    (98) constante -> . INT_CTE
    (99) constante -> . FLOAT_CTE
    (100) constante -> . CHAR_CTE
    (101) constante -> . STRING_CTE
    (102) constante -> . TRUE
    (103) constante -> . FALSE

    ID              shift and go to state 104
    LEFTP           shift and go to state 99
    INT_CTE         shift and go to state 105
    FLOAT_CTE       shift and go to state 107
    CHAR_CTE        shift and go to state 101
    STRING_CTE      shift and go to state 93
    TRUE            shift and go to state 97
    FALSE           shift and go to state 103

    expresion                      shift and go to state 106
    constante                      shift and go to state 102
    llamada                        shift and go to state 100
    exp                            shift and go to state 224
    operador1                      shift and go to state 94
    operador3                      shift and go to state 95
    operador2                      shift and go to state 96
    operador4                      shift and go to state 98

state 195

    (109) dibujaRectangulo -> DRAW_RECTANGLE LEFTP exp COMMA . exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON
    (70) exp -> . llamada
    (71) exp -> . expresion
    (49) llamada -> . ID llamafun LEFTP args RIGHTP
    (72) expresion -> . operador1 exp1
    (76) operador1 -> . operador2 exp2
    (84) operador2 -> . operador3 exp3
    (88) operador3 -> . operador4 exp4
    (93) operador4 -> . ID idarray
    (96) operador4 -> . constante
    (97) operador4 -> . LEFTP expresion RIGHTP
    (98) constante -> . INT_CTE
    (99) constante -> . FLOAT_CTE
    (100) constante -> . CHAR_CTE
    (101) constante -> . STRING_CTE
    (102) constante -> . TRUE
    (103) constante -> . FALSE

    ID              shift and go to state 104
    LEFTP           shift and go to state 99
    INT_CTE         shift and go to state 105
    FLOAT_CTE       shift and go to state 107
    CHAR_CTE        shift and go to state 101
    STRING_CTE      shift and go to state 93
    TRUE            shift and go to state 97
    FALSE           shift and go to state 103

    expresion                      shift and go to state 106
    constante                      shift and go to state 102
    llamada                        shift and go to state 100
    exp                            shift and go to state 225
    operador1                      shift and go to state 94
    operador3                      shift and go to state 95
    operador2                      shift and go to state 96
    operador4                      shift and go to state 98

state 196

    (57) asigarray -> LEFTSB exp RIGHTSB . asign
    (59) asign -> . ASSIGN exp SEMICOLON

    ASSIGN          shift and go to state 227

    asign                          shift and go to state 226

state 197

    (47) lectura -> ID ASSIGN READ LEFTP . RIGHTP SEMICOLON

    RIGHTP          shift and go to state 228


state 198

    (59) asign -> ASSIGN exp SEMICOLON .

    IF              reduce using rule 59 (asign -> ASSIGN exp SEMICOLON .)
    WHILE           reduce using rule 59 (asign -> ASSIGN exp SEMICOLON .)
    RETURN          reduce using rule 59 (asign -> ASSIGN exp SEMICOLON .)
    ID              reduce using rule 59 (asign -> ASSIGN exp SEMICOLON .)
    PRINT           reduce using rule 59 (asign -> ASSIGN exp SEMICOLON .)
    DRAW_DOT        reduce using rule 59 (asign -> ASSIGN exp SEMICOLON .)
    DRAW_LINE       reduce using rule 59 (asign -> ASSIGN exp SEMICOLON .)
    DRAW_CIRCLE     reduce using rule 59 (asign -> ASSIGN exp SEMICOLON .)
    DRAW_TRIANGLE   reduce using rule 59 (asign -> ASSIGN exp SEMICOLON .)
    DRAW_SQUARE     reduce using rule 59 (asign -> ASSIGN exp SEMICOLON .)
    DRAW_RECTANGLE  reduce using rule 59 (asign -> ASSIGN exp SEMICOLON .)
    DRAW_QUADRITERAL reduce using rule 59 (asign -> ASSIGN exp SEMICOLON .)
    RIGHTB          reduce using rule 59 (asign -> ASSIGN exp SEMICOLON .)


state 199

    (52) args -> empty .

    RIGHTP          reduce using rule 52 (args -> empty .)


state 200

    (49) llamada -> ID llamafun LEFTP args . RIGHTP

    RIGHTP          shift and go to state 229


state 201

    (51) args -> exp . param listargs
    (55) param -> . empty
    (124) empty -> .

    COMMA           reduce using rule 124 (empty -> .)
    RIGHTP          reduce using rule 124 (empty -> .)

    empty                          shift and go to state 230
    param                          shift and go to state 231

state 202

    (64) condicion -> IF LEFTP condicion1 RIGHTP . LEFTB bloque RIGHTB else

    LEFTB           shift and go to state 232


state 203

    (104) dibujaPunto -> DRAW_DOT LEFTP exp COMMA . exp COMMA color RIGHTP SEMICOLON
    (70) exp -> . llamada
    (71) exp -> . expresion
    (49) llamada -> . ID llamafun LEFTP args RIGHTP
    (72) expresion -> . operador1 exp1
    (76) operador1 -> . operador2 exp2
    (84) operador2 -> . operador3 exp3
    (88) operador3 -> . operador4 exp4
    (93) operador4 -> . ID idarray
    (96) operador4 -> . constante
    (97) operador4 -> . LEFTP expresion RIGHTP
    (98) constante -> . INT_CTE
    (99) constante -> . FLOAT_CTE
    (100) constante -> . CHAR_CTE
    (101) constante -> . STRING_CTE
    (102) constante -> . TRUE
    (103) constante -> . FALSE

    ID              shift and go to state 104
    LEFTP           shift and go to state 99
    INT_CTE         shift and go to state 105
    FLOAT_CTE       shift and go to state 107
    CHAR_CTE        shift and go to state 101
    STRING_CTE      shift and go to state 93
    TRUE            shift and go to state 97
    FALSE           shift and go to state 103

    expresion                      shift and go to state 106
    constante                      shift and go to state 102
    llamada                        shift and go to state 100
    exp                            shift and go to state 233
    operador1                      shift and go to state 94
    operador3                      shift and go to state 95
    operador2                      shift and go to state 96
    operador4                      shift and go to state 98

state 204

    (106) dibujaCirculo -> DRAW_CIRCLE LEFTP exp COMMA . exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON
    (70) exp -> . llamada
    (71) exp -> . expresion
    (49) llamada -> . ID llamafun LEFTP args RIGHTP
    (72) expresion -> . operador1 exp1
    (76) operador1 -> . operador2 exp2
    (84) operador2 -> . operador3 exp3
    (88) operador3 -> . operador4 exp4
    (93) operador4 -> . ID idarray
    (96) operador4 -> . constante
    (97) operador4 -> . LEFTP expresion RIGHTP
    (98) constante -> . INT_CTE
    (99) constante -> . FLOAT_CTE
    (100) constante -> . CHAR_CTE
    (101) constante -> . STRING_CTE
    (102) constante -> . TRUE
    (103) constante -> . FALSE

    ID              shift and go to state 104
    LEFTP           shift and go to state 99
    INT_CTE         shift and go to state 105
    FLOAT_CTE       shift and go to state 107
    CHAR_CTE        shift and go to state 101
    STRING_CTE      shift and go to state 93
    TRUE            shift and go to state 97
    FALSE           shift and go to state 103

    expresion                      shift and go to state 106
    constante                      shift and go to state 102
    llamada                        shift and go to state 100
    exp                            shift and go to state 234
    operador1                      shift and go to state 94
    operador3                      shift and go to state 95
    operador2                      shift and go to state 96
    operador4                      shift and go to state 98

state 205

    (74) exp1 -> AND saveop operador1 . exp1
    (73) exp1 -> . empty
    (74) exp1 -> . AND saveop operador1 exp1
    (75) exp1 -> . OR saveop operador1 exp1
    (124) empty -> .

    AND             shift and go to state 130
    OR              shift and go to state 132
    SEMICOLON       reduce using rule 124 (empty -> .)
    RIGHTP          reduce using rule 124 (empty -> .)
    COMMA           reduce using rule 124 (empty -> .)
    RIGHTSB         reduce using rule 124 (empty -> .)

    exp1                           shift and go to state 235
    empty                          shift and go to state 133

state 206

    (75) exp1 -> OR saveop operador1 . exp1
    (73) exp1 -> . empty
    (74) exp1 -> . AND saveop operador1 exp1
    (75) exp1 -> . OR saveop operador1 exp1
    (124) empty -> .

    AND             shift and go to state 130
    OR              shift and go to state 132
    SEMICOLON       reduce using rule 124 (empty -> .)
    RIGHTP          reduce using rule 124 (empty -> .)
    COMMA           reduce using rule 124 (empty -> .)
    RIGHTSB         reduce using rule 124 (empty -> .)

    exp1                           shift and go to state 236
    empty                          shift and go to state 133

state 207

    (87) exp3 -> LESS saveop operador3 . exp3
    (85) exp3 -> . empty
    (86) exp3 -> . SUM saveop operador3 exp3
    (87) exp3 -> . LESS saveop operador3 exp3
    (124) empty -> .

    SUM             shift and go to state 136
    LESS            shift and go to state 134
    EQUALS          reduce using rule 124 (empty -> .)
    NOTEQUAL        reduce using rule 124 (empty -> .)
    GREATEREQUAL    reduce using rule 124 (empty -> .)
    GREATERTHAN     reduce using rule 124 (empty -> .)
    LESSTHAN        reduce using rule 124 (empty -> .)
    LESSEQUAL       reduce using rule 124 (empty -> .)
    AND             reduce using rule 124 (empty -> .)
    OR              reduce using rule 124 (empty -> .)
    SEMICOLON       reduce using rule 124 (empty -> .)
    RIGHTP          reduce using rule 124 (empty -> .)
    COMMA           reduce using rule 124 (empty -> .)
    RIGHTSB         reduce using rule 124 (empty -> .)

    exp3                           shift and go to state 237
    empty                          shift and go to state 137

state 208

    (86) exp3 -> SUM saveop operador3 . exp3
    (85) exp3 -> . empty
    (86) exp3 -> . SUM saveop operador3 exp3
    (87) exp3 -> . LESS saveop operador3 exp3
    (124) empty -> .

    SUM             shift and go to state 136
    LESS            shift and go to state 134
    EQUALS          reduce using rule 124 (empty -> .)
    NOTEQUAL        reduce using rule 124 (empty -> .)
    GREATEREQUAL    reduce using rule 124 (empty -> .)
    GREATERTHAN     reduce using rule 124 (empty -> .)
    LESSTHAN        reduce using rule 124 (empty -> .)
    LESSEQUAL       reduce using rule 124 (empty -> .)
    AND             reduce using rule 124 (empty -> .)
    OR              reduce using rule 124 (empty -> .)
    SEMICOLON       reduce using rule 124 (empty -> .)
    RIGHTP          reduce using rule 124 (empty -> .)
    COMMA           reduce using rule 124 (empty -> .)
    RIGHTSB         reduce using rule 124 (empty -> .)

    exp3                           shift and go to state 238
    empty                          shift and go to state 137

state 209

    (79) exp2 -> NOTEQUAL saveop operador2 . exp2
    (77) exp2 -> . empty
    (78) exp2 -> . EQUALS saveop operador2 exp2
    (79) exp2 -> . NOTEQUAL saveop operador2 exp2
    (80) exp2 -> . GREATEREQUAL saveop operador2 exp2
    (81) exp2 -> . GREATERTHAN saveop operador2 exp2
    (82) exp2 -> . LESSTHAN saveop operador2 exp2
    (83) exp2 -> . LESSEQUAL saveop operador2 exp2
    (124) empty -> .

    EQUALS          shift and go to state 141
    NOTEQUAL        shift and go to state 138
    GREATEREQUAL    shift and go to state 139
    GREATERTHAN     shift and go to state 143
    LESSTHAN        shift and go to state 142
    LESSEQUAL       shift and go to state 144
    AND             reduce using rule 124 (empty -> .)
    OR              reduce using rule 124 (empty -> .)
    SEMICOLON       reduce using rule 124 (empty -> .)
    RIGHTP          reduce using rule 124 (empty -> .)
    COMMA           reduce using rule 124 (empty -> .)
    RIGHTSB         reduce using rule 124 (empty -> .)

    exp2                           shift and go to state 239
    empty                          shift and go to state 145

state 210

    (80) exp2 -> GREATEREQUAL saveop operador2 . exp2
    (77) exp2 -> . empty
    (78) exp2 -> . EQUALS saveop operador2 exp2
    (79) exp2 -> . NOTEQUAL saveop operador2 exp2
    (80) exp2 -> . GREATEREQUAL saveop operador2 exp2
    (81) exp2 -> . GREATERTHAN saveop operador2 exp2
    (82) exp2 -> . LESSTHAN saveop operador2 exp2
    (83) exp2 -> . LESSEQUAL saveop operador2 exp2
    (124) empty -> .

    EQUALS          shift and go to state 141
    NOTEQUAL        shift and go to state 138
    GREATEREQUAL    shift and go to state 139
    GREATERTHAN     shift and go to state 143
    LESSTHAN        shift and go to state 142
    LESSEQUAL       shift and go to state 144
    AND             reduce using rule 124 (empty -> .)
    OR              reduce using rule 124 (empty -> .)
    SEMICOLON       reduce using rule 124 (empty -> .)
    RIGHTP          reduce using rule 124 (empty -> .)
    COMMA           reduce using rule 124 (empty -> .)
    RIGHTSB         reduce using rule 124 (empty -> .)

    exp2                           shift and go to state 240
    empty                          shift and go to state 145

state 211

    (78) exp2 -> EQUALS saveop operador2 . exp2
    (77) exp2 -> . empty
    (78) exp2 -> . EQUALS saveop operador2 exp2
    (79) exp2 -> . NOTEQUAL saveop operador2 exp2
    (80) exp2 -> . GREATEREQUAL saveop operador2 exp2
    (81) exp2 -> . GREATERTHAN saveop operador2 exp2
    (82) exp2 -> . LESSTHAN saveop operador2 exp2
    (83) exp2 -> . LESSEQUAL saveop operador2 exp2
    (124) empty -> .

    EQUALS          shift and go to state 141
    NOTEQUAL        shift and go to state 138
    GREATEREQUAL    shift and go to state 139
    GREATERTHAN     shift and go to state 143
    LESSTHAN        shift and go to state 142
    LESSEQUAL       shift and go to state 144
    AND             reduce using rule 124 (empty -> .)
    OR              reduce using rule 124 (empty -> .)
    SEMICOLON       reduce using rule 124 (empty -> .)
    RIGHTP          reduce using rule 124 (empty -> .)
    COMMA           reduce using rule 124 (empty -> .)
    RIGHTSB         reduce using rule 124 (empty -> .)

    exp2                           shift and go to state 241
    empty                          shift and go to state 145

state 212

    (82) exp2 -> LESSTHAN saveop operador2 . exp2
    (77) exp2 -> . empty
    (78) exp2 -> . EQUALS saveop operador2 exp2
    (79) exp2 -> . NOTEQUAL saveop operador2 exp2
    (80) exp2 -> . GREATEREQUAL saveop operador2 exp2
    (81) exp2 -> . GREATERTHAN saveop operador2 exp2
    (82) exp2 -> . LESSTHAN saveop operador2 exp2
    (83) exp2 -> . LESSEQUAL saveop operador2 exp2
    (124) empty -> .

    EQUALS          shift and go to state 141
    NOTEQUAL        shift and go to state 138
    GREATEREQUAL    shift and go to state 139
    GREATERTHAN     shift and go to state 143
    LESSTHAN        shift and go to state 142
    LESSEQUAL       shift and go to state 144
    AND             reduce using rule 124 (empty -> .)
    OR              reduce using rule 124 (empty -> .)
    SEMICOLON       reduce using rule 124 (empty -> .)
    RIGHTP          reduce using rule 124 (empty -> .)
    COMMA           reduce using rule 124 (empty -> .)
    RIGHTSB         reduce using rule 124 (empty -> .)

    exp2                           shift and go to state 242
    empty                          shift and go to state 145

state 213

    (81) exp2 -> GREATERTHAN saveop operador2 . exp2
    (77) exp2 -> . empty
    (78) exp2 -> . EQUALS saveop operador2 exp2
    (79) exp2 -> . NOTEQUAL saveop operador2 exp2
    (80) exp2 -> . GREATEREQUAL saveop operador2 exp2
    (81) exp2 -> . GREATERTHAN saveop operador2 exp2
    (82) exp2 -> . LESSTHAN saveop operador2 exp2
    (83) exp2 -> . LESSEQUAL saveop operador2 exp2
    (124) empty -> .

    EQUALS          shift and go to state 141
    NOTEQUAL        shift and go to state 138
    GREATEREQUAL    shift and go to state 139
    GREATERTHAN     shift and go to state 143
    LESSTHAN        shift and go to state 142
    LESSEQUAL       shift and go to state 144
    AND             reduce using rule 124 (empty -> .)
    OR              reduce using rule 124 (empty -> .)
    SEMICOLON       reduce using rule 124 (empty -> .)
    RIGHTP          reduce using rule 124 (empty -> .)
    COMMA           reduce using rule 124 (empty -> .)
    RIGHTSB         reduce using rule 124 (empty -> .)

    exp2                           shift and go to state 243
    empty                          shift and go to state 145

state 214

    (83) exp2 -> LESSEQUAL saveop operador2 . exp2
    (77) exp2 -> . empty
    (78) exp2 -> . EQUALS saveop operador2 exp2
    (79) exp2 -> . NOTEQUAL saveop operador2 exp2
    (80) exp2 -> . GREATEREQUAL saveop operador2 exp2
    (81) exp2 -> . GREATERTHAN saveop operador2 exp2
    (82) exp2 -> . LESSTHAN saveop operador2 exp2
    (83) exp2 -> . LESSEQUAL saveop operador2 exp2
    (124) empty -> .

    EQUALS          shift and go to state 141
    NOTEQUAL        shift and go to state 138
    GREATEREQUAL    shift and go to state 139
    GREATERTHAN     shift and go to state 143
    LESSTHAN        shift and go to state 142
    LESSEQUAL       shift and go to state 144
    AND             reduce using rule 124 (empty -> .)
    OR              reduce using rule 124 (empty -> .)
    SEMICOLON       reduce using rule 124 (empty -> .)
    RIGHTP          reduce using rule 124 (empty -> .)
    COMMA           reduce using rule 124 (empty -> .)
    RIGHTSB         reduce using rule 124 (empty -> .)

    exp2                           shift and go to state 244
    empty                          shift and go to state 145

state 215

    (91) exp4 -> DIVISION saveop operador4 . exp4
    (89) exp4 -> . empty
    (90) exp4 -> . TIMES saveop operador4 exp4
    (91) exp4 -> . DIVISION saveop operador4 exp4
    (124) empty -> .

    TIMES           shift and go to state 147
    DIVISION        shift and go to state 146
    SUM             reduce using rule 124 (empty -> .)
    LESS            reduce using rule 124 (empty -> .)
    EQUALS          reduce using rule 124 (empty -> .)
    NOTEQUAL        reduce using rule 124 (empty -> .)
    GREATEREQUAL    reduce using rule 124 (empty -> .)
    GREATERTHAN     reduce using rule 124 (empty -> .)
    LESSTHAN        reduce using rule 124 (empty -> .)
    LESSEQUAL       reduce using rule 124 (empty -> .)
    AND             reduce using rule 124 (empty -> .)
    OR              reduce using rule 124 (empty -> .)
    SEMICOLON       reduce using rule 124 (empty -> .)
    RIGHTP          reduce using rule 124 (empty -> .)
    COMMA           reduce using rule 124 (empty -> .)
    RIGHTSB         reduce using rule 124 (empty -> .)

    empty                          shift and go to state 149
    exp4                           shift and go to state 245

state 216

    (90) exp4 -> TIMES saveop operador4 . exp4
    (89) exp4 -> . empty
    (90) exp4 -> . TIMES saveop operador4 exp4
    (91) exp4 -> . DIVISION saveop operador4 exp4
    (124) empty -> .

    TIMES           shift and go to state 147
    DIVISION        shift and go to state 146
    SUM             reduce using rule 124 (empty -> .)
    LESS            reduce using rule 124 (empty -> .)
    EQUALS          reduce using rule 124 (empty -> .)
    NOTEQUAL        reduce using rule 124 (empty -> .)
    GREATEREQUAL    reduce using rule 124 (empty -> .)
    GREATERTHAN     reduce using rule 124 (empty -> .)
    LESSTHAN        reduce using rule 124 (empty -> .)
    LESSEQUAL       reduce using rule 124 (empty -> .)
    AND             reduce using rule 124 (empty -> .)
    OR              reduce using rule 124 (empty -> .)
    SEMICOLON       reduce using rule 124 (empty -> .)
    RIGHTP          reduce using rule 124 (empty -> .)
    COMMA           reduce using rule 124 (empty -> .)
    RIGHTSB         reduce using rule 124 (empty -> .)

    empty                          shift and go to state 149
    exp4                           shift and go to state 246

state 217

    (94) idarray -> LEFTSB exp RIGHTSB .

    TIMES           reduce using rule 94 (idarray -> LEFTSB exp RIGHTSB .)
    DIVISION        reduce using rule 94 (idarray -> LEFTSB exp RIGHTSB .)
    SUM             reduce using rule 94 (idarray -> LEFTSB exp RIGHTSB .)
    LESS            reduce using rule 94 (idarray -> LEFTSB exp RIGHTSB .)
    EQUALS          reduce using rule 94 (idarray -> LEFTSB exp RIGHTSB .)
    NOTEQUAL        reduce using rule 94 (idarray -> LEFTSB exp RIGHTSB .)
    GREATEREQUAL    reduce using rule 94 (idarray -> LEFTSB exp RIGHTSB .)
    GREATERTHAN     reduce using rule 94 (idarray -> LEFTSB exp RIGHTSB .)
    LESSTHAN        reduce using rule 94 (idarray -> LEFTSB exp RIGHTSB .)
    LESSEQUAL       reduce using rule 94 (idarray -> LEFTSB exp RIGHTSB .)
    AND             reduce using rule 94 (idarray -> LEFTSB exp RIGHTSB .)
    OR              reduce using rule 94 (idarray -> LEFTSB exp RIGHTSB .)
    RIGHTP          reduce using rule 94 (idarray -> LEFTSB exp RIGHTSB .)
    SEMICOLON       reduce using rule 94 (idarray -> LEFTSB exp RIGHTSB .)
    COMMA           reduce using rule 94 (idarray -> LEFTSB exp RIGHTSB .)
    RIGHTSB         reduce using rule 94 (idarray -> LEFTSB exp RIGHTSB .)


state 218

    (108) dibujaCuadrado -> DRAW_SQUARE LEFTP exp COMMA exp . COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON

    COMMA           shift and go to state 247


state 219

    (110) dibujaCuadrilatero -> DRAW_QUADRITERAL LEFTP exp COMMA exp . COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON

    COMMA           shift and go to state 248


state 220

    (48) escritura -> PRINT LEFTP exp RIGHTP SEMICOLON .

    IF              reduce using rule 48 (escritura -> PRINT LEFTP exp RIGHTP SEMICOLON .)
    WHILE           reduce using rule 48 (escritura -> PRINT LEFTP exp RIGHTP SEMICOLON .)
    RETURN          reduce using rule 48 (escritura -> PRINT LEFTP exp RIGHTP SEMICOLON .)
    ID              reduce using rule 48 (escritura -> PRINT LEFTP exp RIGHTP SEMICOLON .)
    PRINT           reduce using rule 48 (escritura -> PRINT LEFTP exp RIGHTP SEMICOLON .)
    DRAW_DOT        reduce using rule 48 (escritura -> PRINT LEFTP exp RIGHTP SEMICOLON .)
    DRAW_LINE       reduce using rule 48 (escritura -> PRINT LEFTP exp RIGHTP SEMICOLON .)
    DRAW_CIRCLE     reduce using rule 48 (escritura -> PRINT LEFTP exp RIGHTP SEMICOLON .)
    DRAW_TRIANGLE   reduce using rule 48 (escritura -> PRINT LEFTP exp RIGHTP SEMICOLON .)
    DRAW_SQUARE     reduce using rule 48 (escritura -> PRINT LEFTP exp RIGHTP SEMICOLON .)
    DRAW_RECTANGLE  reduce using rule 48 (escritura -> PRINT LEFTP exp RIGHTP SEMICOLON .)
    DRAW_QUADRITERAL reduce using rule 48 (escritura -> PRINT LEFTP exp RIGHTP SEMICOLON .)
    RIGHTB          reduce using rule 48 (escritura -> PRINT LEFTP exp RIGHTP SEMICOLON .)


state 221

    (60) ciclo -> WHILE salto_ciclo LEFTP exp ciclo1 . RIGHTP LEFTB bloque ciclo2 RIGHTB

    RIGHTP          shift and go to state 249


state 222

    (62) ciclo1 -> empty .

    RIGHTP          reduce using rule 62 (ciclo1 -> empty .)


state 223

    (107) dibujaTriangulo -> DRAW_TRIANGLE LEFTP exp COMMA exp . COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON

    COMMA           shift and go to state 250


state 224

    (105) dibujaLinea -> DRAW_LINE LEFTP exp COMMA exp . COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON

    COMMA           shift and go to state 251


state 225

    (109) dibujaRectangulo -> DRAW_RECTANGLE LEFTP exp COMMA exp . COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON

    COMMA           shift and go to state 252


state 226

    (57) asigarray -> LEFTSB exp RIGHTSB asign .

    IF              reduce using rule 57 (asigarray -> LEFTSB exp RIGHTSB asign .)
    WHILE           reduce using rule 57 (asigarray -> LEFTSB exp RIGHTSB asign .)
    RETURN          reduce using rule 57 (asigarray -> LEFTSB exp RIGHTSB asign .)
    ID              reduce using rule 57 (asigarray -> LEFTSB exp RIGHTSB asign .)
    PRINT           reduce using rule 57 (asigarray -> LEFTSB exp RIGHTSB asign .)
    DRAW_DOT        reduce using rule 57 (asigarray -> LEFTSB exp RIGHTSB asign .)
    DRAW_LINE       reduce using rule 57 (asigarray -> LEFTSB exp RIGHTSB asign .)
    DRAW_CIRCLE     reduce using rule 57 (asigarray -> LEFTSB exp RIGHTSB asign .)
    DRAW_TRIANGLE   reduce using rule 57 (asigarray -> LEFTSB exp RIGHTSB asign .)
    DRAW_SQUARE     reduce using rule 57 (asigarray -> LEFTSB exp RIGHTSB asign .)
    DRAW_RECTANGLE  reduce using rule 57 (asigarray -> LEFTSB exp RIGHTSB asign .)
    DRAW_QUADRITERAL reduce using rule 57 (asigarray -> LEFTSB exp RIGHTSB asign .)
    RIGHTB          reduce using rule 57 (asigarray -> LEFTSB exp RIGHTSB asign .)


state 227

    (59) asign -> ASSIGN . exp SEMICOLON
    (70) exp -> . llamada
    (71) exp -> . expresion
    (49) llamada -> . ID llamafun LEFTP args RIGHTP
    (72) expresion -> . operador1 exp1
    (76) operador1 -> . operador2 exp2
    (84) operador2 -> . operador3 exp3
    (88) operador3 -> . operador4 exp4
    (93) operador4 -> . ID idarray
    (96) operador4 -> . constante
    (97) operador4 -> . LEFTP expresion RIGHTP
    (98) constante -> . INT_CTE
    (99) constante -> . FLOAT_CTE
    (100) constante -> . CHAR_CTE
    (101) constante -> . STRING_CTE
    (102) constante -> . TRUE
    (103) constante -> . FALSE

    ID              shift and go to state 104
    LEFTP           shift and go to state 99
    INT_CTE         shift and go to state 105
    FLOAT_CTE       shift and go to state 107
    CHAR_CTE        shift and go to state 101
    STRING_CTE      shift and go to state 93
    TRUE            shift and go to state 97
    FALSE           shift and go to state 103

    expresion                      shift and go to state 106
    constante                      shift and go to state 102
    llamada                        shift and go to state 100
    exp                            shift and go to state 165
    operador1                      shift and go to state 94
    operador3                      shift and go to state 95
    operador2                      shift and go to state 96
    operador4                      shift and go to state 98

state 228

    (47) lectura -> ID ASSIGN READ LEFTP RIGHTP . SEMICOLON

    SEMICOLON       shift and go to state 253


state 229

    (49) llamada -> ID llamafun LEFTP args RIGHTP .

    SEMICOLON       reduce using rule 49 (llamada -> ID llamafun LEFTP args RIGHTP .)
    COMMA           reduce using rule 49 (llamada -> ID llamafun LEFTP args RIGHTP .)
    RIGHTSB         reduce using rule 49 (llamada -> ID llamafun LEFTP args RIGHTP .)
    RIGHTP          reduce using rule 49 (llamada -> ID llamafun LEFTP args RIGHTP .)


state 230

    (55) param -> empty .

    COMMA           reduce using rule 55 (param -> empty .)
    RIGHTP          reduce using rule 55 (param -> empty .)


state 231

    (51) args -> exp param . listargs
    (53) listargs -> . COMMA args
    (54) listargs -> . empty
    (124) empty -> .

    COMMA           shift and go to state 254
    RIGHTP          reduce using rule 124 (empty -> .)

    empty                          shift and go to state 255
    listargs                       shift and go to state 256

state 232

    (64) condicion -> IF LEFTP condicion1 RIGHTP LEFTB . bloque RIGHTB else
    (25) bloque -> . estatuto bloque
    (26) bloque -> . empty
    (32) estatuto -> . condicion
    (33) estatuto -> . ciclo
    (34) estatuto -> . return
    (35) estatuto -> . lectura
    (36) estatuto -> . escritura
    (37) estatuto -> . llamada SEMICOLON
    (38) estatuto -> . asignacion
    (39) estatuto -> . dibujaPunto
    (40) estatuto -> . dibujaLinea
    (41) estatuto -> . dibujaCirculo
    (42) estatuto -> . dibujaTriangulo
    (43) estatuto -> . dibujaCuadrado
    (44) estatuto -> . dibujaRectangulo
    (45) estatuto -> . dibujaCuadrilatero
    (124) empty -> .
    (64) condicion -> . IF LEFTP condicion1 RIGHTP LEFTB bloque RIGHTB else
    (60) ciclo -> . WHILE salto_ciclo LEFTP exp ciclo1 RIGHTP LEFTB bloque ciclo2 RIGHTB
    (46) return -> . RETURN exp SEMICOLON
    (47) lectura -> . ID ASSIGN READ LEFTP RIGHTP SEMICOLON
    (48) escritura -> . PRINT LEFTP exp RIGHTP SEMICOLON
    (49) llamada -> . ID llamafun LEFTP args RIGHTP
    (56) asignacion -> . ID asigarray
    (104) dibujaPunto -> . DRAW_DOT LEFTP exp COMMA exp COMMA color RIGHTP SEMICOLON
    (105) dibujaLinea -> . DRAW_LINE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON
    (106) dibujaCirculo -> . DRAW_CIRCLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON
    (107) dibujaTriangulo -> . DRAW_TRIANGLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON
    (108) dibujaCuadrado -> . DRAW_SQUARE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON
    (109) dibujaRectangulo -> . DRAW_RECTANGLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON
    (110) dibujaCuadrilatero -> . DRAW_QUADRITERAL LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON

    RIGHTB          reduce using rule 124 (empty -> .)
    IF              shift and go to state 87
    WHILE           shift and go to state 68
    RETURN          shift and go to state 63
    ID              shift and go to state 86
    PRINT           shift and go to state 67
    DRAW_DOT        shift and go to state 89
    DRAW_LINE       shift and go to state 83
    DRAW_CIRCLE     shift and go to state 90
    DRAW_TRIANGLE   shift and go to state 69
    DRAW_SQUARE     shift and go to state 65
    DRAW_RECTANGLE  shift and go to state 84
    DRAW_QUADRITERAL shift and go to state 66

    dibujaTriangulo                shift and go to state 64
    dibujaCuadrado                 shift and go to state 70
    bloque                         shift and go to state 257
    dibujaCuadrilatero             shift and go to state 72
    ciclo                          shift and go to state 73
    estatuto                       shift and go to state 74
    llamada                        shift and go to state 75
    condicion                      shift and go to state 76
    dibujaLinea                    shift and go to state 77
    lectura                        shift and go to state 78
    empty                          shift and go to state 79
    dibujaCirculo                  shift and go to state 80
    dibujaRectangulo               shift and go to state 81
    return                         shift and go to state 82
    dibujaPunto                    shift and go to state 85
    asignacion                     shift and go to state 88
    escritura                      shift and go to state 91

state 233

    (104) dibujaPunto -> DRAW_DOT LEFTP exp COMMA exp . COMMA color RIGHTP SEMICOLON

    COMMA           shift and go to state 258


state 234

    (106) dibujaCirculo -> DRAW_CIRCLE LEFTP exp COMMA exp . COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON

    COMMA           shift and go to state 259


state 235

    (74) exp1 -> AND saveop operador1 exp1 .

    SEMICOLON       reduce using rule 74 (exp1 -> AND saveop operador1 exp1 .)
    RIGHTP          reduce using rule 74 (exp1 -> AND saveop operador1 exp1 .)
    COMMA           reduce using rule 74 (exp1 -> AND saveop operador1 exp1 .)
    RIGHTSB         reduce using rule 74 (exp1 -> AND saveop operador1 exp1 .)


state 236

    (75) exp1 -> OR saveop operador1 exp1 .

    SEMICOLON       reduce using rule 75 (exp1 -> OR saveop operador1 exp1 .)
    RIGHTP          reduce using rule 75 (exp1 -> OR saveop operador1 exp1 .)
    COMMA           reduce using rule 75 (exp1 -> OR saveop operador1 exp1 .)
    RIGHTSB         reduce using rule 75 (exp1 -> OR saveop operador1 exp1 .)


state 237

    (87) exp3 -> LESS saveop operador3 exp3 .

    EQUALS          reduce using rule 87 (exp3 -> LESS saveop operador3 exp3 .)
    NOTEQUAL        reduce using rule 87 (exp3 -> LESS saveop operador3 exp3 .)
    GREATEREQUAL    reduce using rule 87 (exp3 -> LESS saveop operador3 exp3 .)
    GREATERTHAN     reduce using rule 87 (exp3 -> LESS saveop operador3 exp3 .)
    LESSTHAN        reduce using rule 87 (exp3 -> LESS saveop operador3 exp3 .)
    LESSEQUAL       reduce using rule 87 (exp3 -> LESS saveop operador3 exp3 .)
    AND             reduce using rule 87 (exp3 -> LESS saveop operador3 exp3 .)
    OR              reduce using rule 87 (exp3 -> LESS saveop operador3 exp3 .)
    SEMICOLON       reduce using rule 87 (exp3 -> LESS saveop operador3 exp3 .)
    RIGHTP          reduce using rule 87 (exp3 -> LESS saveop operador3 exp3 .)
    COMMA           reduce using rule 87 (exp3 -> LESS saveop operador3 exp3 .)
    RIGHTSB         reduce using rule 87 (exp3 -> LESS saveop operador3 exp3 .)


state 238

    (86) exp3 -> SUM saveop operador3 exp3 .

    EQUALS          reduce using rule 86 (exp3 -> SUM saveop operador3 exp3 .)
    NOTEQUAL        reduce using rule 86 (exp3 -> SUM saveop operador3 exp3 .)
    GREATEREQUAL    reduce using rule 86 (exp3 -> SUM saveop operador3 exp3 .)
    GREATERTHAN     reduce using rule 86 (exp3 -> SUM saveop operador3 exp3 .)
    LESSTHAN        reduce using rule 86 (exp3 -> SUM saveop operador3 exp3 .)
    LESSEQUAL       reduce using rule 86 (exp3 -> SUM saveop operador3 exp3 .)
    AND             reduce using rule 86 (exp3 -> SUM saveop operador3 exp3 .)
    OR              reduce using rule 86 (exp3 -> SUM saveop operador3 exp3 .)
    SEMICOLON       reduce using rule 86 (exp3 -> SUM saveop operador3 exp3 .)
    RIGHTP          reduce using rule 86 (exp3 -> SUM saveop operador3 exp3 .)
    COMMA           reduce using rule 86 (exp3 -> SUM saveop operador3 exp3 .)
    RIGHTSB         reduce using rule 86 (exp3 -> SUM saveop operador3 exp3 .)


state 239

    (79) exp2 -> NOTEQUAL saveop operador2 exp2 .

    AND             reduce using rule 79 (exp2 -> NOTEQUAL saveop operador2 exp2 .)
    OR              reduce using rule 79 (exp2 -> NOTEQUAL saveop operador2 exp2 .)
    SEMICOLON       reduce using rule 79 (exp2 -> NOTEQUAL saveop operador2 exp2 .)
    RIGHTP          reduce using rule 79 (exp2 -> NOTEQUAL saveop operador2 exp2 .)
    COMMA           reduce using rule 79 (exp2 -> NOTEQUAL saveop operador2 exp2 .)
    RIGHTSB         reduce using rule 79 (exp2 -> NOTEQUAL saveop operador2 exp2 .)


state 240

    (80) exp2 -> GREATEREQUAL saveop operador2 exp2 .

    AND             reduce using rule 80 (exp2 -> GREATEREQUAL saveop operador2 exp2 .)
    OR              reduce using rule 80 (exp2 -> GREATEREQUAL saveop operador2 exp2 .)
    SEMICOLON       reduce using rule 80 (exp2 -> GREATEREQUAL saveop operador2 exp2 .)
    RIGHTP          reduce using rule 80 (exp2 -> GREATEREQUAL saveop operador2 exp2 .)
    COMMA           reduce using rule 80 (exp2 -> GREATEREQUAL saveop operador2 exp2 .)
    RIGHTSB         reduce using rule 80 (exp2 -> GREATEREQUAL saveop operador2 exp2 .)


state 241

    (78) exp2 -> EQUALS saveop operador2 exp2 .

    AND             reduce using rule 78 (exp2 -> EQUALS saveop operador2 exp2 .)
    OR              reduce using rule 78 (exp2 -> EQUALS saveop operador2 exp2 .)
    SEMICOLON       reduce using rule 78 (exp2 -> EQUALS saveop operador2 exp2 .)
    RIGHTP          reduce using rule 78 (exp2 -> EQUALS saveop operador2 exp2 .)
    COMMA           reduce using rule 78 (exp2 -> EQUALS saveop operador2 exp2 .)
    RIGHTSB         reduce using rule 78 (exp2 -> EQUALS saveop operador2 exp2 .)


state 242

    (82) exp2 -> LESSTHAN saveop operador2 exp2 .

    AND             reduce using rule 82 (exp2 -> LESSTHAN saveop operador2 exp2 .)
    OR              reduce using rule 82 (exp2 -> LESSTHAN saveop operador2 exp2 .)
    SEMICOLON       reduce using rule 82 (exp2 -> LESSTHAN saveop operador2 exp2 .)
    RIGHTP          reduce using rule 82 (exp2 -> LESSTHAN saveop operador2 exp2 .)
    COMMA           reduce using rule 82 (exp2 -> LESSTHAN saveop operador2 exp2 .)
    RIGHTSB         reduce using rule 82 (exp2 -> LESSTHAN saveop operador2 exp2 .)


state 243

    (81) exp2 -> GREATERTHAN saveop operador2 exp2 .

    AND             reduce using rule 81 (exp2 -> GREATERTHAN saveop operador2 exp2 .)
    OR              reduce using rule 81 (exp2 -> GREATERTHAN saveop operador2 exp2 .)
    SEMICOLON       reduce using rule 81 (exp2 -> GREATERTHAN saveop operador2 exp2 .)
    RIGHTP          reduce using rule 81 (exp2 -> GREATERTHAN saveop operador2 exp2 .)
    COMMA           reduce using rule 81 (exp2 -> GREATERTHAN saveop operador2 exp2 .)
    RIGHTSB         reduce using rule 81 (exp2 -> GREATERTHAN saveop operador2 exp2 .)


state 244

    (83) exp2 -> LESSEQUAL saveop operador2 exp2 .

    AND             reduce using rule 83 (exp2 -> LESSEQUAL saveop operador2 exp2 .)
    OR              reduce using rule 83 (exp2 -> LESSEQUAL saveop operador2 exp2 .)
    SEMICOLON       reduce using rule 83 (exp2 -> LESSEQUAL saveop operador2 exp2 .)
    RIGHTP          reduce using rule 83 (exp2 -> LESSEQUAL saveop operador2 exp2 .)
    COMMA           reduce using rule 83 (exp2 -> LESSEQUAL saveop operador2 exp2 .)
    RIGHTSB         reduce using rule 83 (exp2 -> LESSEQUAL saveop operador2 exp2 .)


state 245

    (91) exp4 -> DIVISION saveop operador4 exp4 .

    SUM             reduce using rule 91 (exp4 -> DIVISION saveop operador4 exp4 .)
    LESS            reduce using rule 91 (exp4 -> DIVISION saveop operador4 exp4 .)
    EQUALS          reduce using rule 91 (exp4 -> DIVISION saveop operador4 exp4 .)
    NOTEQUAL        reduce using rule 91 (exp4 -> DIVISION saveop operador4 exp4 .)
    GREATEREQUAL    reduce using rule 91 (exp4 -> DIVISION saveop operador4 exp4 .)
    GREATERTHAN     reduce using rule 91 (exp4 -> DIVISION saveop operador4 exp4 .)
    LESSTHAN        reduce using rule 91 (exp4 -> DIVISION saveop operador4 exp4 .)
    LESSEQUAL       reduce using rule 91 (exp4 -> DIVISION saveop operador4 exp4 .)
    AND             reduce using rule 91 (exp4 -> DIVISION saveop operador4 exp4 .)
    OR              reduce using rule 91 (exp4 -> DIVISION saveop operador4 exp4 .)
    SEMICOLON       reduce using rule 91 (exp4 -> DIVISION saveop operador4 exp4 .)
    RIGHTP          reduce using rule 91 (exp4 -> DIVISION saveop operador4 exp4 .)
    COMMA           reduce using rule 91 (exp4 -> DIVISION saveop operador4 exp4 .)
    RIGHTSB         reduce using rule 91 (exp4 -> DIVISION saveop operador4 exp4 .)


state 246

    (90) exp4 -> TIMES saveop operador4 exp4 .

    SUM             reduce using rule 90 (exp4 -> TIMES saveop operador4 exp4 .)
    LESS            reduce using rule 90 (exp4 -> TIMES saveop operador4 exp4 .)
    EQUALS          reduce using rule 90 (exp4 -> TIMES saveop operador4 exp4 .)
    NOTEQUAL        reduce using rule 90 (exp4 -> TIMES saveop operador4 exp4 .)
    GREATEREQUAL    reduce using rule 90 (exp4 -> TIMES saveop operador4 exp4 .)
    GREATERTHAN     reduce using rule 90 (exp4 -> TIMES saveop operador4 exp4 .)
    LESSTHAN        reduce using rule 90 (exp4 -> TIMES saveop operador4 exp4 .)
    LESSEQUAL       reduce using rule 90 (exp4 -> TIMES saveop operador4 exp4 .)
    AND             reduce using rule 90 (exp4 -> TIMES saveop operador4 exp4 .)
    OR              reduce using rule 90 (exp4 -> TIMES saveop operador4 exp4 .)
    SEMICOLON       reduce using rule 90 (exp4 -> TIMES saveop operador4 exp4 .)
    RIGHTP          reduce using rule 90 (exp4 -> TIMES saveop operador4 exp4 .)
    COMMA           reduce using rule 90 (exp4 -> TIMES saveop operador4 exp4 .)
    RIGHTSB         reduce using rule 90 (exp4 -> TIMES saveop operador4 exp4 .)


state 247

    (108) dibujaCuadrado -> DRAW_SQUARE LEFTP exp COMMA exp COMMA . exp COMMA exp COMMA color RIGHTP SEMICOLON
    (70) exp -> . llamada
    (71) exp -> . expresion
    (49) llamada -> . ID llamafun LEFTP args RIGHTP
    (72) expresion -> . operador1 exp1
    (76) operador1 -> . operador2 exp2
    (84) operador2 -> . operador3 exp3
    (88) operador3 -> . operador4 exp4
    (93) operador4 -> . ID idarray
    (96) operador4 -> . constante
    (97) operador4 -> . LEFTP expresion RIGHTP
    (98) constante -> . INT_CTE
    (99) constante -> . FLOAT_CTE
    (100) constante -> . CHAR_CTE
    (101) constante -> . STRING_CTE
    (102) constante -> . TRUE
    (103) constante -> . FALSE

    ID              shift and go to state 104
    LEFTP           shift and go to state 99
    INT_CTE         shift and go to state 105
    FLOAT_CTE       shift and go to state 107
    CHAR_CTE        shift and go to state 101
    STRING_CTE      shift and go to state 93
    TRUE            shift and go to state 97
    FALSE           shift and go to state 103

    expresion                      shift and go to state 106
    constante                      shift and go to state 102
    llamada                        shift and go to state 100
    exp                            shift and go to state 260
    operador1                      shift and go to state 94
    operador3                      shift and go to state 95
    operador2                      shift and go to state 96
    operador4                      shift and go to state 98

state 248

    (110) dibujaCuadrilatero -> DRAW_QUADRITERAL LEFTP exp COMMA exp COMMA . exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON
    (70) exp -> . llamada
    (71) exp -> . expresion
    (49) llamada -> . ID llamafun LEFTP args RIGHTP
    (72) expresion -> . operador1 exp1
    (76) operador1 -> . operador2 exp2
    (84) operador2 -> . operador3 exp3
    (88) operador3 -> . operador4 exp4
    (93) operador4 -> . ID idarray
    (96) operador4 -> . constante
    (97) operador4 -> . LEFTP expresion RIGHTP
    (98) constante -> . INT_CTE
    (99) constante -> . FLOAT_CTE
    (100) constante -> . CHAR_CTE
    (101) constante -> . STRING_CTE
    (102) constante -> . TRUE
    (103) constante -> . FALSE

    ID              shift and go to state 104
    LEFTP           shift and go to state 99
    INT_CTE         shift and go to state 105
    FLOAT_CTE       shift and go to state 107
    CHAR_CTE        shift and go to state 101
    STRING_CTE      shift and go to state 93
    TRUE            shift and go to state 97
    FALSE           shift and go to state 103

    expresion                      shift and go to state 106
    constante                      shift and go to state 102
    llamada                        shift and go to state 100
    exp                            shift and go to state 261
    operador1                      shift and go to state 94
    operador3                      shift and go to state 95
    operador2                      shift and go to state 96
    operador4                      shift and go to state 98

state 249

    (60) ciclo -> WHILE salto_ciclo LEFTP exp ciclo1 RIGHTP . LEFTB bloque ciclo2 RIGHTB

    LEFTB           shift and go to state 262


state 250

    (107) dibujaTriangulo -> DRAW_TRIANGLE LEFTP exp COMMA exp COMMA . exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON
    (70) exp -> . llamada
    (71) exp -> . expresion
    (49) llamada -> . ID llamafun LEFTP args RIGHTP
    (72) expresion -> . operador1 exp1
    (76) operador1 -> . operador2 exp2
    (84) operador2 -> . operador3 exp3
    (88) operador3 -> . operador4 exp4
    (93) operador4 -> . ID idarray
    (96) operador4 -> . constante
    (97) operador4 -> . LEFTP expresion RIGHTP
    (98) constante -> . INT_CTE
    (99) constante -> . FLOAT_CTE
    (100) constante -> . CHAR_CTE
    (101) constante -> . STRING_CTE
    (102) constante -> . TRUE
    (103) constante -> . FALSE

    ID              shift and go to state 104
    LEFTP           shift and go to state 99
    INT_CTE         shift and go to state 105
    FLOAT_CTE       shift and go to state 107
    CHAR_CTE        shift and go to state 101
    STRING_CTE      shift and go to state 93
    TRUE            shift and go to state 97
    FALSE           shift and go to state 103

    expresion                      shift and go to state 106
    constante                      shift and go to state 102
    llamada                        shift and go to state 100
    exp                            shift and go to state 263
    operador1                      shift and go to state 94
    operador3                      shift and go to state 95
    operador2                      shift and go to state 96
    operador4                      shift and go to state 98

state 251

    (105) dibujaLinea -> DRAW_LINE LEFTP exp COMMA exp COMMA . exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON
    (70) exp -> . llamada
    (71) exp -> . expresion
    (49) llamada -> . ID llamafun LEFTP args RIGHTP
    (72) expresion -> . operador1 exp1
    (76) operador1 -> . operador2 exp2
    (84) operador2 -> . operador3 exp3
    (88) operador3 -> . operador4 exp4
    (93) operador4 -> . ID idarray
    (96) operador4 -> . constante
    (97) operador4 -> . LEFTP expresion RIGHTP
    (98) constante -> . INT_CTE
    (99) constante -> . FLOAT_CTE
    (100) constante -> . CHAR_CTE
    (101) constante -> . STRING_CTE
    (102) constante -> . TRUE
    (103) constante -> . FALSE

    ID              shift and go to state 104
    LEFTP           shift and go to state 99
    INT_CTE         shift and go to state 105
    FLOAT_CTE       shift and go to state 107
    CHAR_CTE        shift and go to state 101
    STRING_CTE      shift and go to state 93
    TRUE            shift and go to state 97
    FALSE           shift and go to state 103

    expresion                      shift and go to state 106
    constante                      shift and go to state 102
    llamada                        shift and go to state 100
    exp                            shift and go to state 264
    operador1                      shift and go to state 94
    operador3                      shift and go to state 95
    operador2                      shift and go to state 96
    operador4                      shift and go to state 98

state 252

    (109) dibujaRectangulo -> DRAW_RECTANGLE LEFTP exp COMMA exp COMMA . exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON
    (70) exp -> . llamada
    (71) exp -> . expresion
    (49) llamada -> . ID llamafun LEFTP args RIGHTP
    (72) expresion -> . operador1 exp1
    (76) operador1 -> . operador2 exp2
    (84) operador2 -> . operador3 exp3
    (88) operador3 -> . operador4 exp4
    (93) operador4 -> . ID idarray
    (96) operador4 -> . constante
    (97) operador4 -> . LEFTP expresion RIGHTP
    (98) constante -> . INT_CTE
    (99) constante -> . FLOAT_CTE
    (100) constante -> . CHAR_CTE
    (101) constante -> . STRING_CTE
    (102) constante -> . TRUE
    (103) constante -> . FALSE

    ID              shift and go to state 104
    LEFTP           shift and go to state 99
    INT_CTE         shift and go to state 105
    FLOAT_CTE       shift and go to state 107
    CHAR_CTE        shift and go to state 101
    STRING_CTE      shift and go to state 93
    TRUE            shift and go to state 97
    FALSE           shift and go to state 103

    expresion                      shift and go to state 106
    constante                      shift and go to state 102
    llamada                        shift and go to state 100
    exp                            shift and go to state 265
    operador1                      shift and go to state 94
    operador3                      shift and go to state 95
    operador2                      shift and go to state 96
    operador4                      shift and go to state 98

state 253

    (47) lectura -> ID ASSIGN READ LEFTP RIGHTP SEMICOLON .

    IF              reduce using rule 47 (lectura -> ID ASSIGN READ LEFTP RIGHTP SEMICOLON .)
    WHILE           reduce using rule 47 (lectura -> ID ASSIGN READ LEFTP RIGHTP SEMICOLON .)
    RETURN          reduce using rule 47 (lectura -> ID ASSIGN READ LEFTP RIGHTP SEMICOLON .)
    ID              reduce using rule 47 (lectura -> ID ASSIGN READ LEFTP RIGHTP SEMICOLON .)
    PRINT           reduce using rule 47 (lectura -> ID ASSIGN READ LEFTP RIGHTP SEMICOLON .)
    DRAW_DOT        reduce using rule 47 (lectura -> ID ASSIGN READ LEFTP RIGHTP SEMICOLON .)
    DRAW_LINE       reduce using rule 47 (lectura -> ID ASSIGN READ LEFTP RIGHTP SEMICOLON .)
    DRAW_CIRCLE     reduce using rule 47 (lectura -> ID ASSIGN READ LEFTP RIGHTP SEMICOLON .)
    DRAW_TRIANGLE   reduce using rule 47 (lectura -> ID ASSIGN READ LEFTP RIGHTP SEMICOLON .)
    DRAW_SQUARE     reduce using rule 47 (lectura -> ID ASSIGN READ LEFTP RIGHTP SEMICOLON .)
    DRAW_RECTANGLE  reduce using rule 47 (lectura -> ID ASSIGN READ LEFTP RIGHTP SEMICOLON .)
    DRAW_QUADRITERAL reduce using rule 47 (lectura -> ID ASSIGN READ LEFTP RIGHTP SEMICOLON .)
    RIGHTB          reduce using rule 47 (lectura -> ID ASSIGN READ LEFTP RIGHTP SEMICOLON .)


state 254

    (53) listargs -> COMMA . args
    (51) args -> . exp param listargs
    (52) args -> . empty
    (70) exp -> . llamada
    (71) exp -> . expresion
    (124) empty -> .
    (49) llamada -> . ID llamafun LEFTP args RIGHTP
    (72) expresion -> . operador1 exp1
    (76) operador1 -> . operador2 exp2
    (84) operador2 -> . operador3 exp3
    (88) operador3 -> . operador4 exp4
    (93) operador4 -> . ID idarray
    (96) operador4 -> . constante
    (97) operador4 -> . LEFTP expresion RIGHTP
    (98) constante -> . INT_CTE
    (99) constante -> . FLOAT_CTE
    (100) constante -> . CHAR_CTE
    (101) constante -> . STRING_CTE
    (102) constante -> . TRUE
    (103) constante -> . FALSE

    RIGHTP          reduce using rule 124 (empty -> .)
    ID              shift and go to state 104
    LEFTP           shift and go to state 99
    INT_CTE         shift and go to state 105
    FLOAT_CTE       shift and go to state 107
    CHAR_CTE        shift and go to state 101
    STRING_CTE      shift and go to state 93
    TRUE            shift and go to state 97
    FALSE           shift and go to state 103

    expresion                      shift and go to state 106
    constante                      shift and go to state 102
    args                           shift and go to state 266
    llamada                        shift and go to state 100
    exp                            shift and go to state 201
    operador1                      shift and go to state 94
    operador3                      shift and go to state 95
    operador2                      shift and go to state 96
    operador4                      shift and go to state 98
    empty                          shift and go to state 199

state 255

    (54) listargs -> empty .

    RIGHTP          reduce using rule 54 (listargs -> empty .)


state 256

    (51) args -> exp param listargs .

    RIGHTP          reduce using rule 51 (args -> exp param listargs .)


state 257

    (64) condicion -> IF LEFTP condicion1 RIGHTP LEFTB bloque . RIGHTB else

    RIGHTB          shift and go to state 267


state 258

    (104) dibujaPunto -> DRAW_DOT LEFTP exp COMMA exp COMMA . color RIGHTP SEMICOLON
    (111) color -> . RED
    (112) color -> . BLUE
    (113) color -> . YELLOW
    (114) color -> . PURPLE
    (115) color -> . GREEN
    (116) color -> . BLACK
    (117) color -> . CYAN
    (118) color -> . WHITE
    (119) color -> . FG
    (120) color -> . AW4
    (121) color -> . MB
    (122) color -> . SNOW
    (123) color -> . LY

    RED             shift and go to state 280
    BLUE            shift and go to state 268
    YELLOW          shift and go to state 276
    PURPLE          shift and go to state 275
    GREEN           shift and go to state 272
    BLACK           shift and go to state 278
    CYAN            shift and go to state 277
    WHITE           shift and go to state 279
    FG              shift and go to state 273
    AW4             shift and go to state 269
    MB              shift and go to state 270
    SNOW            shift and go to state 274
    LY              shift and go to state 281

    color                          shift and go to state 271

state 259

    (106) dibujaCirculo -> DRAW_CIRCLE LEFTP exp COMMA exp COMMA . exp COMMA exp COMMA color RIGHTP SEMICOLON
    (70) exp -> . llamada
    (71) exp -> . expresion
    (49) llamada -> . ID llamafun LEFTP args RIGHTP
    (72) expresion -> . operador1 exp1
    (76) operador1 -> . operador2 exp2
    (84) operador2 -> . operador3 exp3
    (88) operador3 -> . operador4 exp4
    (93) operador4 -> . ID idarray
    (96) operador4 -> . constante
    (97) operador4 -> . LEFTP expresion RIGHTP
    (98) constante -> . INT_CTE
    (99) constante -> . FLOAT_CTE
    (100) constante -> . CHAR_CTE
    (101) constante -> . STRING_CTE
    (102) constante -> . TRUE
    (103) constante -> . FALSE

    ID              shift and go to state 104
    LEFTP           shift and go to state 99
    INT_CTE         shift and go to state 105
    FLOAT_CTE       shift and go to state 107
    CHAR_CTE        shift and go to state 101
    STRING_CTE      shift and go to state 93
    TRUE            shift and go to state 97
    FALSE           shift and go to state 103

    expresion                      shift and go to state 106
    constante                      shift and go to state 102
    llamada                        shift and go to state 100
    exp                            shift and go to state 282
    operador1                      shift and go to state 94
    operador3                      shift and go to state 95
    operador2                      shift and go to state 96
    operador4                      shift and go to state 98

state 260

    (108) dibujaCuadrado -> DRAW_SQUARE LEFTP exp COMMA exp COMMA exp . COMMA exp COMMA color RIGHTP SEMICOLON

    COMMA           shift and go to state 283


state 261

    (110) dibujaCuadrilatero -> DRAW_QUADRITERAL LEFTP exp COMMA exp COMMA exp . COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON

    COMMA           shift and go to state 284


state 262

    (60) ciclo -> WHILE salto_ciclo LEFTP exp ciclo1 RIGHTP LEFTB . bloque ciclo2 RIGHTB
    (25) bloque -> . estatuto bloque
    (26) bloque -> . empty
    (32) estatuto -> . condicion
    (33) estatuto -> . ciclo
    (34) estatuto -> . return
    (35) estatuto -> . lectura
    (36) estatuto -> . escritura
    (37) estatuto -> . llamada SEMICOLON
    (38) estatuto -> . asignacion
    (39) estatuto -> . dibujaPunto
    (40) estatuto -> . dibujaLinea
    (41) estatuto -> . dibujaCirculo
    (42) estatuto -> . dibujaTriangulo
    (43) estatuto -> . dibujaCuadrado
    (44) estatuto -> . dibujaRectangulo
    (45) estatuto -> . dibujaCuadrilatero
    (124) empty -> .
    (64) condicion -> . IF LEFTP condicion1 RIGHTP LEFTB bloque RIGHTB else
    (60) ciclo -> . WHILE salto_ciclo LEFTP exp ciclo1 RIGHTP LEFTB bloque ciclo2 RIGHTB
    (46) return -> . RETURN exp SEMICOLON
    (47) lectura -> . ID ASSIGN READ LEFTP RIGHTP SEMICOLON
    (48) escritura -> . PRINT LEFTP exp RIGHTP SEMICOLON
    (49) llamada -> . ID llamafun LEFTP args RIGHTP
    (56) asignacion -> . ID asigarray
    (104) dibujaPunto -> . DRAW_DOT LEFTP exp COMMA exp COMMA color RIGHTP SEMICOLON
    (105) dibujaLinea -> . DRAW_LINE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON
    (106) dibujaCirculo -> . DRAW_CIRCLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON
    (107) dibujaTriangulo -> . DRAW_TRIANGLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON
    (108) dibujaCuadrado -> . DRAW_SQUARE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON
    (109) dibujaRectangulo -> . DRAW_RECTANGLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON
    (110) dibujaCuadrilatero -> . DRAW_QUADRITERAL LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON

    RIGHTB          reduce using rule 124 (empty -> .)
    IF              shift and go to state 87
    WHILE           shift and go to state 68
    RETURN          shift and go to state 63
    ID              shift and go to state 86
    PRINT           shift and go to state 67
    DRAW_DOT        shift and go to state 89
    DRAW_LINE       shift and go to state 83
    DRAW_CIRCLE     shift and go to state 90
    DRAW_TRIANGLE   shift and go to state 69
    DRAW_SQUARE     shift and go to state 65
    DRAW_RECTANGLE  shift and go to state 84
    DRAW_QUADRITERAL shift and go to state 66

    dibujaTriangulo                shift and go to state 64
    dibujaCuadrado                 shift and go to state 70
    bloque                         shift and go to state 285
    dibujaCuadrilatero             shift and go to state 72
    ciclo                          shift and go to state 73
    estatuto                       shift and go to state 74
    llamada                        shift and go to state 75
    condicion                      shift and go to state 76
    dibujaLinea                    shift and go to state 77
    lectura                        shift and go to state 78
    empty                          shift and go to state 79
    dibujaCirculo                  shift and go to state 80
    dibujaRectangulo               shift and go to state 81
    return                         shift and go to state 82
    dibujaPunto                    shift and go to state 85
    asignacion                     shift and go to state 88
    escritura                      shift and go to state 91

state 263

    (107) dibujaTriangulo -> DRAW_TRIANGLE LEFTP exp COMMA exp COMMA exp . COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON

    COMMA           shift and go to state 286


state 264

    (105) dibujaLinea -> DRAW_LINE LEFTP exp COMMA exp COMMA exp . COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON

    COMMA           shift and go to state 287


state 265

    (109) dibujaRectangulo -> DRAW_RECTANGLE LEFTP exp COMMA exp COMMA exp . COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON

    COMMA           shift and go to state 288


state 266

    (53) listargs -> COMMA args .

    RIGHTP          reduce using rule 53 (listargs -> COMMA args .)


state 267

    (64) condicion -> IF LEFTP condicion1 RIGHTP LEFTB bloque RIGHTB . else
    (65) else -> . ELSE condicion3 LEFTB bloque condicion4 RIGHTB
    (66) else -> . empty
    (124) empty -> .

    ELSE            shift and go to state 290
    IF              reduce using rule 124 (empty -> .)
    WHILE           reduce using rule 124 (empty -> .)
    RETURN          reduce using rule 124 (empty -> .)
    ID              reduce using rule 124 (empty -> .)
    PRINT           reduce using rule 124 (empty -> .)
    DRAW_DOT        reduce using rule 124 (empty -> .)
    DRAW_LINE       reduce using rule 124 (empty -> .)
    DRAW_CIRCLE     reduce using rule 124 (empty -> .)
    DRAW_TRIANGLE   reduce using rule 124 (empty -> .)
    DRAW_SQUARE     reduce using rule 124 (empty -> .)
    DRAW_RECTANGLE  reduce using rule 124 (empty -> .)
    DRAW_QUADRITERAL reduce using rule 124 (empty -> .)
    RIGHTB          reduce using rule 124 (empty -> .)

    else                           shift and go to state 289
    empty                          shift and go to state 291

state 268

    (112) color -> BLUE .

    RIGHTP          reduce using rule 112 (color -> BLUE .)


state 269

    (120) color -> AW4 .

    RIGHTP          reduce using rule 120 (color -> AW4 .)


state 270

    (121) color -> MB .

    RIGHTP          reduce using rule 121 (color -> MB .)


state 271

    (104) dibujaPunto -> DRAW_DOT LEFTP exp COMMA exp COMMA color . RIGHTP SEMICOLON

    RIGHTP          shift and go to state 292


state 272

    (115) color -> GREEN .

    RIGHTP          reduce using rule 115 (color -> GREEN .)


state 273

    (119) color -> FG .

    RIGHTP          reduce using rule 119 (color -> FG .)


state 274

    (122) color -> SNOW .

    RIGHTP          reduce using rule 122 (color -> SNOW .)


state 275

    (114) color -> PURPLE .

    RIGHTP          reduce using rule 114 (color -> PURPLE .)


state 276

    (113) color -> YELLOW .

    RIGHTP          reduce using rule 113 (color -> YELLOW .)


state 277

    (117) color -> CYAN .

    RIGHTP          reduce using rule 117 (color -> CYAN .)


state 278

    (116) color -> BLACK .

    RIGHTP          reduce using rule 116 (color -> BLACK .)


state 279

    (118) color -> WHITE .

    RIGHTP          reduce using rule 118 (color -> WHITE .)


state 280

    (111) color -> RED .

    RIGHTP          reduce using rule 111 (color -> RED .)


state 281

    (123) color -> LY .

    RIGHTP          reduce using rule 123 (color -> LY .)


state 282

    (106) dibujaCirculo -> DRAW_CIRCLE LEFTP exp COMMA exp COMMA exp . COMMA exp COMMA color RIGHTP SEMICOLON

    COMMA           shift and go to state 293


state 283

    (108) dibujaCuadrado -> DRAW_SQUARE LEFTP exp COMMA exp COMMA exp COMMA . exp COMMA color RIGHTP SEMICOLON
    (70) exp -> . llamada
    (71) exp -> . expresion
    (49) llamada -> . ID llamafun LEFTP args RIGHTP
    (72) expresion -> . operador1 exp1
    (76) operador1 -> . operador2 exp2
    (84) operador2 -> . operador3 exp3
    (88) operador3 -> . operador4 exp4
    (93) operador4 -> . ID idarray
    (96) operador4 -> . constante
    (97) operador4 -> . LEFTP expresion RIGHTP
    (98) constante -> . INT_CTE
    (99) constante -> . FLOAT_CTE
    (100) constante -> . CHAR_CTE
    (101) constante -> . STRING_CTE
    (102) constante -> . TRUE
    (103) constante -> . FALSE

    ID              shift and go to state 104
    LEFTP           shift and go to state 99
    INT_CTE         shift and go to state 105
    FLOAT_CTE       shift and go to state 107
    CHAR_CTE        shift and go to state 101
    STRING_CTE      shift and go to state 93
    TRUE            shift and go to state 97
    FALSE           shift and go to state 103

    expresion                      shift and go to state 106
    constante                      shift and go to state 102
    llamada                        shift and go to state 100
    exp                            shift and go to state 294
    operador1                      shift and go to state 94
    operador3                      shift and go to state 95
    operador2                      shift and go to state 96
    operador4                      shift and go to state 98

state 284

    (110) dibujaCuadrilatero -> DRAW_QUADRITERAL LEFTP exp COMMA exp COMMA exp COMMA . exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON
    (70) exp -> . llamada
    (71) exp -> . expresion
    (49) llamada -> . ID llamafun LEFTP args RIGHTP
    (72) expresion -> . operador1 exp1
    (76) operador1 -> . operador2 exp2
    (84) operador2 -> . operador3 exp3
    (88) operador3 -> . operador4 exp4
    (93) operador4 -> . ID idarray
    (96) operador4 -> . constante
    (97) operador4 -> . LEFTP expresion RIGHTP
    (98) constante -> . INT_CTE
    (99) constante -> . FLOAT_CTE
    (100) constante -> . CHAR_CTE
    (101) constante -> . STRING_CTE
    (102) constante -> . TRUE
    (103) constante -> . FALSE

    ID              shift and go to state 104
    LEFTP           shift and go to state 99
    INT_CTE         shift and go to state 105
    FLOAT_CTE       shift and go to state 107
    CHAR_CTE        shift and go to state 101
    STRING_CTE      shift and go to state 93
    TRUE            shift and go to state 97
    FALSE           shift and go to state 103

    expresion                      shift and go to state 106
    constante                      shift and go to state 102
    llamada                        shift and go to state 100
    exp                            shift and go to state 295
    operador1                      shift and go to state 94
    operador3                      shift and go to state 95
    operador2                      shift and go to state 96
    operador4                      shift and go to state 98

state 285

    (60) ciclo -> WHILE salto_ciclo LEFTP exp ciclo1 RIGHTP LEFTB bloque . ciclo2 RIGHTB
    (63) ciclo2 -> . empty
    (124) empty -> .

    RIGHTB          reduce using rule 124 (empty -> .)

    ciclo2                         shift and go to state 296
    empty                          shift and go to state 297

state 286

    (107) dibujaTriangulo -> DRAW_TRIANGLE LEFTP exp COMMA exp COMMA exp COMMA . exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON
    (70) exp -> . llamada
    (71) exp -> . expresion
    (49) llamada -> . ID llamafun LEFTP args RIGHTP
    (72) expresion -> . operador1 exp1
    (76) operador1 -> . operador2 exp2
    (84) operador2 -> . operador3 exp3
    (88) operador3 -> . operador4 exp4
    (93) operador4 -> . ID idarray
    (96) operador4 -> . constante
    (97) operador4 -> . LEFTP expresion RIGHTP
    (98) constante -> . INT_CTE
    (99) constante -> . FLOAT_CTE
    (100) constante -> . CHAR_CTE
    (101) constante -> . STRING_CTE
    (102) constante -> . TRUE
    (103) constante -> . FALSE

    ID              shift and go to state 104
    LEFTP           shift and go to state 99
    INT_CTE         shift and go to state 105
    FLOAT_CTE       shift and go to state 107
    CHAR_CTE        shift and go to state 101
    STRING_CTE      shift and go to state 93
    TRUE            shift and go to state 97
    FALSE           shift and go to state 103

    expresion                      shift and go to state 106
    constante                      shift and go to state 102
    llamada                        shift and go to state 100
    exp                            shift and go to state 298
    operador1                      shift and go to state 94
    operador3                      shift and go to state 95
    operador2                      shift and go to state 96
    operador4                      shift and go to state 98

state 287

    (105) dibujaLinea -> DRAW_LINE LEFTP exp COMMA exp COMMA exp COMMA . exp COMMA exp COMMA color RIGHTP SEMICOLON
    (70) exp -> . llamada
    (71) exp -> . expresion
    (49) llamada -> . ID llamafun LEFTP args RIGHTP
    (72) expresion -> . operador1 exp1
    (76) operador1 -> . operador2 exp2
    (84) operador2 -> . operador3 exp3
    (88) operador3 -> . operador4 exp4
    (93) operador4 -> . ID idarray
    (96) operador4 -> . constante
    (97) operador4 -> . LEFTP expresion RIGHTP
    (98) constante -> . INT_CTE
    (99) constante -> . FLOAT_CTE
    (100) constante -> . CHAR_CTE
    (101) constante -> . STRING_CTE
    (102) constante -> . TRUE
    (103) constante -> . FALSE

    ID              shift and go to state 104
    LEFTP           shift and go to state 99
    INT_CTE         shift and go to state 105
    FLOAT_CTE       shift and go to state 107
    CHAR_CTE        shift and go to state 101
    STRING_CTE      shift and go to state 93
    TRUE            shift and go to state 97
    FALSE           shift and go to state 103

    expresion                      shift and go to state 106
    constante                      shift and go to state 102
    llamada                        shift and go to state 100
    exp                            shift and go to state 299
    operador1                      shift and go to state 94
    operador3                      shift and go to state 95
    operador2                      shift and go to state 96
    operador4                      shift and go to state 98

state 288

    (109) dibujaRectangulo -> DRAW_RECTANGLE LEFTP exp COMMA exp COMMA exp COMMA . exp COMMA exp COMMA color RIGHTP SEMICOLON
    (70) exp -> . llamada
    (71) exp -> . expresion
    (49) llamada -> . ID llamafun LEFTP args RIGHTP
    (72) expresion -> . operador1 exp1
    (76) operador1 -> . operador2 exp2
    (84) operador2 -> . operador3 exp3
    (88) operador3 -> . operador4 exp4
    (93) operador4 -> . ID idarray
    (96) operador4 -> . constante
    (97) operador4 -> . LEFTP expresion RIGHTP
    (98) constante -> . INT_CTE
    (99) constante -> . FLOAT_CTE
    (100) constante -> . CHAR_CTE
    (101) constante -> . STRING_CTE
    (102) constante -> . TRUE
    (103) constante -> . FALSE

    ID              shift and go to state 104
    LEFTP           shift and go to state 99
    INT_CTE         shift and go to state 105
    FLOAT_CTE       shift and go to state 107
    CHAR_CTE        shift and go to state 101
    STRING_CTE      shift and go to state 93
    TRUE            shift and go to state 97
    FALSE           shift and go to state 103

    expresion                      shift and go to state 106
    constante                      shift and go to state 102
    llamada                        shift and go to state 100
    exp                            shift and go to state 300
    operador1                      shift and go to state 94
    operador3                      shift and go to state 95
    operador2                      shift and go to state 96
    operador4                      shift and go to state 98

state 289

    (64) condicion -> IF LEFTP condicion1 RIGHTP LEFTB bloque RIGHTB else .

    IF              reduce using rule 64 (condicion -> IF LEFTP condicion1 RIGHTP LEFTB bloque RIGHTB else .)
    WHILE           reduce using rule 64 (condicion -> IF LEFTP condicion1 RIGHTP LEFTB bloque RIGHTB else .)
    RETURN          reduce using rule 64 (condicion -> IF LEFTP condicion1 RIGHTP LEFTB bloque RIGHTB else .)
    ID              reduce using rule 64 (condicion -> IF LEFTP condicion1 RIGHTP LEFTB bloque RIGHTB else .)
    PRINT           reduce using rule 64 (condicion -> IF LEFTP condicion1 RIGHTP LEFTB bloque RIGHTB else .)
    DRAW_DOT        reduce using rule 64 (condicion -> IF LEFTP condicion1 RIGHTP LEFTB bloque RIGHTB else .)
    DRAW_LINE       reduce using rule 64 (condicion -> IF LEFTP condicion1 RIGHTP LEFTB bloque RIGHTB else .)
    DRAW_CIRCLE     reduce using rule 64 (condicion -> IF LEFTP condicion1 RIGHTP LEFTB bloque RIGHTB else .)
    DRAW_TRIANGLE   reduce using rule 64 (condicion -> IF LEFTP condicion1 RIGHTP LEFTB bloque RIGHTB else .)
    DRAW_SQUARE     reduce using rule 64 (condicion -> IF LEFTP condicion1 RIGHTP LEFTB bloque RIGHTB else .)
    DRAW_RECTANGLE  reduce using rule 64 (condicion -> IF LEFTP condicion1 RIGHTP LEFTB bloque RIGHTB else .)
    DRAW_QUADRITERAL reduce using rule 64 (condicion -> IF LEFTP condicion1 RIGHTP LEFTB bloque RIGHTB else .)
    RIGHTB          reduce using rule 64 (condicion -> IF LEFTP condicion1 RIGHTP LEFTB bloque RIGHTB else .)


state 290

    (65) else -> ELSE . condicion3 LEFTB bloque condicion4 RIGHTB
    (68) condicion3 -> . empty
    (124) empty -> .

    LEFTB           reduce using rule 124 (empty -> .)

    empty                          shift and go to state 302
    condicion3                     shift and go to state 301

state 291

    (66) else -> empty .

    IF              reduce using rule 66 (else -> empty .)
    WHILE           reduce using rule 66 (else -> empty .)
    RETURN          reduce using rule 66 (else -> empty .)
    ID              reduce using rule 66 (else -> empty .)
    PRINT           reduce using rule 66 (else -> empty .)
    DRAW_DOT        reduce using rule 66 (else -> empty .)
    DRAW_LINE       reduce using rule 66 (else -> empty .)
    DRAW_CIRCLE     reduce using rule 66 (else -> empty .)
    DRAW_TRIANGLE   reduce using rule 66 (else -> empty .)
    DRAW_SQUARE     reduce using rule 66 (else -> empty .)
    DRAW_RECTANGLE  reduce using rule 66 (else -> empty .)
    DRAW_QUADRITERAL reduce using rule 66 (else -> empty .)
    RIGHTB          reduce using rule 66 (else -> empty .)


state 292

    (104) dibujaPunto -> DRAW_DOT LEFTP exp COMMA exp COMMA color RIGHTP . SEMICOLON

    SEMICOLON       shift and go to state 303


state 293

    (106) dibujaCirculo -> DRAW_CIRCLE LEFTP exp COMMA exp COMMA exp COMMA . exp COMMA color RIGHTP SEMICOLON
    (70) exp -> . llamada
    (71) exp -> . expresion
    (49) llamada -> . ID llamafun LEFTP args RIGHTP
    (72) expresion -> . operador1 exp1
    (76) operador1 -> . operador2 exp2
    (84) operador2 -> . operador3 exp3
    (88) operador3 -> . operador4 exp4
    (93) operador4 -> . ID idarray
    (96) operador4 -> . constante
    (97) operador4 -> . LEFTP expresion RIGHTP
    (98) constante -> . INT_CTE
    (99) constante -> . FLOAT_CTE
    (100) constante -> . CHAR_CTE
    (101) constante -> . STRING_CTE
    (102) constante -> . TRUE
    (103) constante -> . FALSE

    ID              shift and go to state 104
    LEFTP           shift and go to state 99
    INT_CTE         shift and go to state 105
    FLOAT_CTE       shift and go to state 107
    CHAR_CTE        shift and go to state 101
    STRING_CTE      shift and go to state 93
    TRUE            shift and go to state 97
    FALSE           shift and go to state 103

    expresion                      shift and go to state 106
    constante                      shift and go to state 102
    llamada                        shift and go to state 100
    exp                            shift and go to state 304
    operador1                      shift and go to state 94
    operador3                      shift and go to state 95
    operador2                      shift and go to state 96
    operador4                      shift and go to state 98

state 294

    (108) dibujaCuadrado -> DRAW_SQUARE LEFTP exp COMMA exp COMMA exp COMMA exp . COMMA color RIGHTP SEMICOLON

    COMMA           shift and go to state 305


state 295

    (110) dibujaCuadrilatero -> DRAW_QUADRITERAL LEFTP exp COMMA exp COMMA exp COMMA exp . COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON

    COMMA           shift and go to state 306


state 296

    (60) ciclo -> WHILE salto_ciclo LEFTP exp ciclo1 RIGHTP LEFTB bloque ciclo2 . RIGHTB

    RIGHTB          shift and go to state 307


state 297

    (63) ciclo2 -> empty .

    RIGHTB          reduce using rule 63 (ciclo2 -> empty .)


state 298

    (107) dibujaTriangulo -> DRAW_TRIANGLE LEFTP exp COMMA exp COMMA exp COMMA exp . COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON

    COMMA           shift and go to state 308


state 299

    (105) dibujaLinea -> DRAW_LINE LEFTP exp COMMA exp COMMA exp COMMA exp . COMMA exp COMMA color RIGHTP SEMICOLON

    COMMA           shift and go to state 309


state 300

    (109) dibujaRectangulo -> DRAW_RECTANGLE LEFTP exp COMMA exp COMMA exp COMMA exp . COMMA exp COMMA color RIGHTP SEMICOLON

    COMMA           shift and go to state 310


state 301

    (65) else -> ELSE condicion3 . LEFTB bloque condicion4 RIGHTB

    LEFTB           shift and go to state 311


state 302

    (68) condicion3 -> empty .

    LEFTB           reduce using rule 68 (condicion3 -> empty .)


state 303

    (104) dibujaPunto -> DRAW_DOT LEFTP exp COMMA exp COMMA color RIGHTP SEMICOLON .

    IF              reduce using rule 104 (dibujaPunto -> DRAW_DOT LEFTP exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    WHILE           reduce using rule 104 (dibujaPunto -> DRAW_DOT LEFTP exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    RETURN          reduce using rule 104 (dibujaPunto -> DRAW_DOT LEFTP exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    ID              reduce using rule 104 (dibujaPunto -> DRAW_DOT LEFTP exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    PRINT           reduce using rule 104 (dibujaPunto -> DRAW_DOT LEFTP exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    DRAW_DOT        reduce using rule 104 (dibujaPunto -> DRAW_DOT LEFTP exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    DRAW_LINE       reduce using rule 104 (dibujaPunto -> DRAW_DOT LEFTP exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    DRAW_CIRCLE     reduce using rule 104 (dibujaPunto -> DRAW_DOT LEFTP exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    DRAW_TRIANGLE   reduce using rule 104 (dibujaPunto -> DRAW_DOT LEFTP exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    DRAW_SQUARE     reduce using rule 104 (dibujaPunto -> DRAW_DOT LEFTP exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    DRAW_RECTANGLE  reduce using rule 104 (dibujaPunto -> DRAW_DOT LEFTP exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    DRAW_QUADRITERAL reduce using rule 104 (dibujaPunto -> DRAW_DOT LEFTP exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    RIGHTB          reduce using rule 104 (dibujaPunto -> DRAW_DOT LEFTP exp COMMA exp COMMA color RIGHTP SEMICOLON .)


state 304

    (106) dibujaCirculo -> DRAW_CIRCLE LEFTP exp COMMA exp COMMA exp COMMA exp . COMMA color RIGHTP SEMICOLON

    COMMA           shift and go to state 312


state 305

    (108) dibujaCuadrado -> DRAW_SQUARE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA . color RIGHTP SEMICOLON
    (111) color -> . RED
    (112) color -> . BLUE
    (113) color -> . YELLOW
    (114) color -> . PURPLE
    (115) color -> . GREEN
    (116) color -> . BLACK
    (117) color -> . CYAN
    (118) color -> . WHITE
    (119) color -> . FG
    (120) color -> . AW4
    (121) color -> . MB
    (122) color -> . SNOW
    (123) color -> . LY

    RED             shift and go to state 280
    BLUE            shift and go to state 268
    YELLOW          shift and go to state 276
    PURPLE          shift and go to state 275
    GREEN           shift and go to state 272
    BLACK           shift and go to state 278
    CYAN            shift and go to state 277
    WHITE           shift and go to state 279
    FG              shift and go to state 273
    AW4             shift and go to state 269
    MB              shift and go to state 270
    SNOW            shift and go to state 274
    LY              shift and go to state 281

    color                          shift and go to state 313

state 306

    (110) dibujaCuadrilatero -> DRAW_QUADRITERAL LEFTP exp COMMA exp COMMA exp COMMA exp COMMA . exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON
    (70) exp -> . llamada
    (71) exp -> . expresion
    (49) llamada -> . ID llamafun LEFTP args RIGHTP
    (72) expresion -> . operador1 exp1
    (76) operador1 -> . operador2 exp2
    (84) operador2 -> . operador3 exp3
    (88) operador3 -> . operador4 exp4
    (93) operador4 -> . ID idarray
    (96) operador4 -> . constante
    (97) operador4 -> . LEFTP expresion RIGHTP
    (98) constante -> . INT_CTE
    (99) constante -> . FLOAT_CTE
    (100) constante -> . CHAR_CTE
    (101) constante -> . STRING_CTE
    (102) constante -> . TRUE
    (103) constante -> . FALSE

    ID              shift and go to state 104
    LEFTP           shift and go to state 99
    INT_CTE         shift and go to state 105
    FLOAT_CTE       shift and go to state 107
    CHAR_CTE        shift and go to state 101
    STRING_CTE      shift and go to state 93
    TRUE            shift and go to state 97
    FALSE           shift and go to state 103

    expresion                      shift and go to state 106
    constante                      shift and go to state 102
    llamada                        shift and go to state 100
    exp                            shift and go to state 314
    operador1                      shift and go to state 94
    operador3                      shift and go to state 95
    operador2                      shift and go to state 96
    operador4                      shift and go to state 98

state 307

    (60) ciclo -> WHILE salto_ciclo LEFTP exp ciclo1 RIGHTP LEFTB bloque ciclo2 RIGHTB .

    IF              reduce using rule 60 (ciclo -> WHILE salto_ciclo LEFTP exp ciclo1 RIGHTP LEFTB bloque ciclo2 RIGHTB .)
    WHILE           reduce using rule 60 (ciclo -> WHILE salto_ciclo LEFTP exp ciclo1 RIGHTP LEFTB bloque ciclo2 RIGHTB .)
    RETURN          reduce using rule 60 (ciclo -> WHILE salto_ciclo LEFTP exp ciclo1 RIGHTP LEFTB bloque ciclo2 RIGHTB .)
    ID              reduce using rule 60 (ciclo -> WHILE salto_ciclo LEFTP exp ciclo1 RIGHTP LEFTB bloque ciclo2 RIGHTB .)
    PRINT           reduce using rule 60 (ciclo -> WHILE salto_ciclo LEFTP exp ciclo1 RIGHTP LEFTB bloque ciclo2 RIGHTB .)
    DRAW_DOT        reduce using rule 60 (ciclo -> WHILE salto_ciclo LEFTP exp ciclo1 RIGHTP LEFTB bloque ciclo2 RIGHTB .)
    DRAW_LINE       reduce using rule 60 (ciclo -> WHILE salto_ciclo LEFTP exp ciclo1 RIGHTP LEFTB bloque ciclo2 RIGHTB .)
    DRAW_CIRCLE     reduce using rule 60 (ciclo -> WHILE salto_ciclo LEFTP exp ciclo1 RIGHTP LEFTB bloque ciclo2 RIGHTB .)
    DRAW_TRIANGLE   reduce using rule 60 (ciclo -> WHILE salto_ciclo LEFTP exp ciclo1 RIGHTP LEFTB bloque ciclo2 RIGHTB .)
    DRAW_SQUARE     reduce using rule 60 (ciclo -> WHILE salto_ciclo LEFTP exp ciclo1 RIGHTP LEFTB bloque ciclo2 RIGHTB .)
    DRAW_RECTANGLE  reduce using rule 60 (ciclo -> WHILE salto_ciclo LEFTP exp ciclo1 RIGHTP LEFTB bloque ciclo2 RIGHTB .)
    DRAW_QUADRITERAL reduce using rule 60 (ciclo -> WHILE salto_ciclo LEFTP exp ciclo1 RIGHTP LEFTB bloque ciclo2 RIGHTB .)
    RIGHTB          reduce using rule 60 (ciclo -> WHILE salto_ciclo LEFTP exp ciclo1 RIGHTP LEFTB bloque ciclo2 RIGHTB .)


state 308

    (107) dibujaTriangulo -> DRAW_TRIANGLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA . exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON
    (70) exp -> . llamada
    (71) exp -> . expresion
    (49) llamada -> . ID llamafun LEFTP args RIGHTP
    (72) expresion -> . operador1 exp1
    (76) operador1 -> . operador2 exp2
    (84) operador2 -> . operador3 exp3
    (88) operador3 -> . operador4 exp4
    (93) operador4 -> . ID idarray
    (96) operador4 -> . constante
    (97) operador4 -> . LEFTP expresion RIGHTP
    (98) constante -> . INT_CTE
    (99) constante -> . FLOAT_CTE
    (100) constante -> . CHAR_CTE
    (101) constante -> . STRING_CTE
    (102) constante -> . TRUE
    (103) constante -> . FALSE

    ID              shift and go to state 104
    LEFTP           shift and go to state 99
    INT_CTE         shift and go to state 105
    FLOAT_CTE       shift and go to state 107
    CHAR_CTE        shift and go to state 101
    STRING_CTE      shift and go to state 93
    TRUE            shift and go to state 97
    FALSE           shift and go to state 103

    expresion                      shift and go to state 106
    constante                      shift and go to state 102
    llamada                        shift and go to state 100
    exp                            shift and go to state 315
    operador1                      shift and go to state 94
    operador3                      shift and go to state 95
    operador2                      shift and go to state 96
    operador4                      shift and go to state 98

state 309

    (105) dibujaLinea -> DRAW_LINE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA . exp COMMA color RIGHTP SEMICOLON
    (70) exp -> . llamada
    (71) exp -> . expresion
    (49) llamada -> . ID llamafun LEFTP args RIGHTP
    (72) expresion -> . operador1 exp1
    (76) operador1 -> . operador2 exp2
    (84) operador2 -> . operador3 exp3
    (88) operador3 -> . operador4 exp4
    (93) operador4 -> . ID idarray
    (96) operador4 -> . constante
    (97) operador4 -> . LEFTP expresion RIGHTP
    (98) constante -> . INT_CTE
    (99) constante -> . FLOAT_CTE
    (100) constante -> . CHAR_CTE
    (101) constante -> . STRING_CTE
    (102) constante -> . TRUE
    (103) constante -> . FALSE

    ID              shift and go to state 104
    LEFTP           shift and go to state 99
    INT_CTE         shift and go to state 105
    FLOAT_CTE       shift and go to state 107
    CHAR_CTE        shift and go to state 101
    STRING_CTE      shift and go to state 93
    TRUE            shift and go to state 97
    FALSE           shift and go to state 103

    expresion                      shift and go to state 106
    constante                      shift and go to state 102
    llamada                        shift and go to state 100
    exp                            shift and go to state 316
    operador1                      shift and go to state 94
    operador3                      shift and go to state 95
    operador2                      shift and go to state 96
    operador4                      shift and go to state 98

state 310

    (109) dibujaRectangulo -> DRAW_RECTANGLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA . exp COMMA color RIGHTP SEMICOLON
    (70) exp -> . llamada
    (71) exp -> . expresion
    (49) llamada -> . ID llamafun LEFTP args RIGHTP
    (72) expresion -> . operador1 exp1
    (76) operador1 -> . operador2 exp2
    (84) operador2 -> . operador3 exp3
    (88) operador3 -> . operador4 exp4
    (93) operador4 -> . ID idarray
    (96) operador4 -> . constante
    (97) operador4 -> . LEFTP expresion RIGHTP
    (98) constante -> . INT_CTE
    (99) constante -> . FLOAT_CTE
    (100) constante -> . CHAR_CTE
    (101) constante -> . STRING_CTE
    (102) constante -> . TRUE
    (103) constante -> . FALSE

    ID              shift and go to state 104
    LEFTP           shift and go to state 99
    INT_CTE         shift and go to state 105
    FLOAT_CTE       shift and go to state 107
    CHAR_CTE        shift and go to state 101
    STRING_CTE      shift and go to state 93
    TRUE            shift and go to state 97
    FALSE           shift and go to state 103

    expresion                      shift and go to state 106
    constante                      shift and go to state 102
    llamada                        shift and go to state 100
    exp                            shift and go to state 317
    operador1                      shift and go to state 94
    operador3                      shift and go to state 95
    operador2                      shift and go to state 96
    operador4                      shift and go to state 98

state 311

    (65) else -> ELSE condicion3 LEFTB . bloque condicion4 RIGHTB
    (25) bloque -> . estatuto bloque
    (26) bloque -> . empty
    (32) estatuto -> . condicion
    (33) estatuto -> . ciclo
    (34) estatuto -> . return
    (35) estatuto -> . lectura
    (36) estatuto -> . escritura
    (37) estatuto -> . llamada SEMICOLON
    (38) estatuto -> . asignacion
    (39) estatuto -> . dibujaPunto
    (40) estatuto -> . dibujaLinea
    (41) estatuto -> . dibujaCirculo
    (42) estatuto -> . dibujaTriangulo
    (43) estatuto -> . dibujaCuadrado
    (44) estatuto -> . dibujaRectangulo
    (45) estatuto -> . dibujaCuadrilatero
    (124) empty -> .
    (64) condicion -> . IF LEFTP condicion1 RIGHTP LEFTB bloque RIGHTB else
    (60) ciclo -> . WHILE salto_ciclo LEFTP exp ciclo1 RIGHTP LEFTB bloque ciclo2 RIGHTB
    (46) return -> . RETURN exp SEMICOLON
    (47) lectura -> . ID ASSIGN READ LEFTP RIGHTP SEMICOLON
    (48) escritura -> . PRINT LEFTP exp RIGHTP SEMICOLON
    (49) llamada -> . ID llamafun LEFTP args RIGHTP
    (56) asignacion -> . ID asigarray
    (104) dibujaPunto -> . DRAW_DOT LEFTP exp COMMA exp COMMA color RIGHTP SEMICOLON
    (105) dibujaLinea -> . DRAW_LINE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON
    (106) dibujaCirculo -> . DRAW_CIRCLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON
    (107) dibujaTriangulo -> . DRAW_TRIANGLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON
    (108) dibujaCuadrado -> . DRAW_SQUARE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON
    (109) dibujaRectangulo -> . DRAW_RECTANGLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON
    (110) dibujaCuadrilatero -> . DRAW_QUADRITERAL LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON

    RIGHTB          reduce using rule 124 (empty -> .)
    IF              shift and go to state 87
    WHILE           shift and go to state 68
    RETURN          shift and go to state 63
    ID              shift and go to state 86
    PRINT           shift and go to state 67
    DRAW_DOT        shift and go to state 89
    DRAW_LINE       shift and go to state 83
    DRAW_CIRCLE     shift and go to state 90
    DRAW_TRIANGLE   shift and go to state 69
    DRAW_SQUARE     shift and go to state 65
    DRAW_RECTANGLE  shift and go to state 84
    DRAW_QUADRITERAL shift and go to state 66

    dibujaTriangulo                shift and go to state 64
    dibujaCuadrado                 shift and go to state 70
    bloque                         shift and go to state 318
    dibujaCuadrilatero             shift and go to state 72
    ciclo                          shift and go to state 73
    estatuto                       shift and go to state 74
    llamada                        shift and go to state 75
    condicion                      shift and go to state 76
    dibujaLinea                    shift and go to state 77
    lectura                        shift and go to state 78
    empty                          shift and go to state 79
    dibujaCirculo                  shift and go to state 80
    dibujaRectangulo               shift and go to state 81
    return                         shift and go to state 82
    dibujaPunto                    shift and go to state 85
    asignacion                     shift and go to state 88
    escritura                      shift and go to state 91

state 312

    (106) dibujaCirculo -> DRAW_CIRCLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA . color RIGHTP SEMICOLON
    (111) color -> . RED
    (112) color -> . BLUE
    (113) color -> . YELLOW
    (114) color -> . PURPLE
    (115) color -> . GREEN
    (116) color -> . BLACK
    (117) color -> . CYAN
    (118) color -> . WHITE
    (119) color -> . FG
    (120) color -> . AW4
    (121) color -> . MB
    (122) color -> . SNOW
    (123) color -> . LY

    RED             shift and go to state 280
    BLUE            shift and go to state 268
    YELLOW          shift and go to state 276
    PURPLE          shift and go to state 275
    GREEN           shift and go to state 272
    BLACK           shift and go to state 278
    CYAN            shift and go to state 277
    WHITE           shift and go to state 279
    FG              shift and go to state 273
    AW4             shift and go to state 269
    MB              shift and go to state 270
    SNOW            shift and go to state 274
    LY              shift and go to state 281

    color                          shift and go to state 319

state 313

    (108) dibujaCuadrado -> DRAW_SQUARE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA color . RIGHTP SEMICOLON

    RIGHTP          shift and go to state 320


state 314

    (110) dibujaCuadrilatero -> DRAW_QUADRITERAL LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp . COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON

    COMMA           shift and go to state 321


state 315

    (107) dibujaTriangulo -> DRAW_TRIANGLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp . COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON

    COMMA           shift and go to state 322


state 316

    (105) dibujaLinea -> DRAW_LINE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp . COMMA color RIGHTP SEMICOLON

    COMMA           shift and go to state 323


state 317

    (109) dibujaRectangulo -> DRAW_RECTANGLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp . COMMA color RIGHTP SEMICOLON

    COMMA           shift and go to state 324


state 318

    (65) else -> ELSE condicion3 LEFTB bloque . condicion4 RIGHTB
    (69) condicion4 -> . empty
    (124) empty -> .

    RIGHTB          reduce using rule 124 (empty -> .)

    condicion4                     shift and go to state 325
    empty                          shift and go to state 326

state 319

    (106) dibujaCirculo -> DRAW_CIRCLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA color . RIGHTP SEMICOLON

    RIGHTP          shift and go to state 327


state 320

    (108) dibujaCuadrado -> DRAW_SQUARE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP . SEMICOLON

    SEMICOLON       shift and go to state 328


state 321

    (110) dibujaCuadrilatero -> DRAW_QUADRITERAL LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA . exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON
    (70) exp -> . llamada
    (71) exp -> . expresion
    (49) llamada -> . ID llamafun LEFTP args RIGHTP
    (72) expresion -> . operador1 exp1
    (76) operador1 -> . operador2 exp2
    (84) operador2 -> . operador3 exp3
    (88) operador3 -> . operador4 exp4
    (93) operador4 -> . ID idarray
    (96) operador4 -> . constante
    (97) operador4 -> . LEFTP expresion RIGHTP
    (98) constante -> . INT_CTE
    (99) constante -> . FLOAT_CTE
    (100) constante -> . CHAR_CTE
    (101) constante -> . STRING_CTE
    (102) constante -> . TRUE
    (103) constante -> . FALSE

    ID              shift and go to state 104
    LEFTP           shift and go to state 99
    INT_CTE         shift and go to state 105
    FLOAT_CTE       shift and go to state 107
    CHAR_CTE        shift and go to state 101
    STRING_CTE      shift and go to state 93
    TRUE            shift and go to state 97
    FALSE           shift and go to state 103

    expresion                      shift and go to state 106
    constante                      shift and go to state 102
    llamada                        shift and go to state 100
    exp                            shift and go to state 329
    operador1                      shift and go to state 94
    operador3                      shift and go to state 95
    operador2                      shift and go to state 96
    operador4                      shift and go to state 98

state 322

    (107) dibujaTriangulo -> DRAW_TRIANGLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA . exp COMMA exp COMMA color RIGHTP SEMICOLON
    (70) exp -> . llamada
    (71) exp -> . expresion
    (49) llamada -> . ID llamafun LEFTP args RIGHTP
    (72) expresion -> . operador1 exp1
    (76) operador1 -> . operador2 exp2
    (84) operador2 -> . operador3 exp3
    (88) operador3 -> . operador4 exp4
    (93) operador4 -> . ID idarray
    (96) operador4 -> . constante
    (97) operador4 -> . LEFTP expresion RIGHTP
    (98) constante -> . INT_CTE
    (99) constante -> . FLOAT_CTE
    (100) constante -> . CHAR_CTE
    (101) constante -> . STRING_CTE
    (102) constante -> . TRUE
    (103) constante -> . FALSE

    ID              shift and go to state 104
    LEFTP           shift and go to state 99
    INT_CTE         shift and go to state 105
    FLOAT_CTE       shift and go to state 107
    CHAR_CTE        shift and go to state 101
    STRING_CTE      shift and go to state 93
    TRUE            shift and go to state 97
    FALSE           shift and go to state 103

    expresion                      shift and go to state 106
    constante                      shift and go to state 102
    llamada                        shift and go to state 100
    exp                            shift and go to state 330
    operador1                      shift and go to state 94
    operador3                      shift and go to state 95
    operador2                      shift and go to state 96
    operador4                      shift and go to state 98

state 323

    (105) dibujaLinea -> DRAW_LINE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA . color RIGHTP SEMICOLON
    (111) color -> . RED
    (112) color -> . BLUE
    (113) color -> . YELLOW
    (114) color -> . PURPLE
    (115) color -> . GREEN
    (116) color -> . BLACK
    (117) color -> . CYAN
    (118) color -> . WHITE
    (119) color -> . FG
    (120) color -> . AW4
    (121) color -> . MB
    (122) color -> . SNOW
    (123) color -> . LY

    RED             shift and go to state 280
    BLUE            shift and go to state 268
    YELLOW          shift and go to state 276
    PURPLE          shift and go to state 275
    GREEN           shift and go to state 272
    BLACK           shift and go to state 278
    CYAN            shift and go to state 277
    WHITE           shift and go to state 279
    FG              shift and go to state 273
    AW4             shift and go to state 269
    MB              shift and go to state 270
    SNOW            shift and go to state 274
    LY              shift and go to state 281

    color                          shift and go to state 331

state 324

    (109) dibujaRectangulo -> DRAW_RECTANGLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA . color RIGHTP SEMICOLON
    (111) color -> . RED
    (112) color -> . BLUE
    (113) color -> . YELLOW
    (114) color -> . PURPLE
    (115) color -> . GREEN
    (116) color -> . BLACK
    (117) color -> . CYAN
    (118) color -> . WHITE
    (119) color -> . FG
    (120) color -> . AW4
    (121) color -> . MB
    (122) color -> . SNOW
    (123) color -> . LY

    RED             shift and go to state 280
    BLUE            shift and go to state 268
    YELLOW          shift and go to state 276
    PURPLE          shift and go to state 275
    GREEN           shift and go to state 272
    BLACK           shift and go to state 278
    CYAN            shift and go to state 277
    WHITE           shift and go to state 279
    FG              shift and go to state 273
    AW4             shift and go to state 269
    MB              shift and go to state 270
    SNOW            shift and go to state 274
    LY              shift and go to state 281

    color                          shift and go to state 332

state 325

    (65) else -> ELSE condicion3 LEFTB bloque condicion4 . RIGHTB

    RIGHTB          shift and go to state 333


state 326

    (69) condicion4 -> empty .

    RIGHTB          reduce using rule 69 (condicion4 -> empty .)


state 327

    (106) dibujaCirculo -> DRAW_CIRCLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP . SEMICOLON

    SEMICOLON       shift and go to state 334


state 328

    (108) dibujaCuadrado -> DRAW_SQUARE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .

    IF              reduce using rule 108 (dibujaCuadrado -> DRAW_SQUARE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    WHILE           reduce using rule 108 (dibujaCuadrado -> DRAW_SQUARE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    RETURN          reduce using rule 108 (dibujaCuadrado -> DRAW_SQUARE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    ID              reduce using rule 108 (dibujaCuadrado -> DRAW_SQUARE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    PRINT           reduce using rule 108 (dibujaCuadrado -> DRAW_SQUARE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    DRAW_DOT        reduce using rule 108 (dibujaCuadrado -> DRAW_SQUARE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    DRAW_LINE       reduce using rule 108 (dibujaCuadrado -> DRAW_SQUARE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    DRAW_CIRCLE     reduce using rule 108 (dibujaCuadrado -> DRAW_SQUARE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    DRAW_TRIANGLE   reduce using rule 108 (dibujaCuadrado -> DRAW_SQUARE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    DRAW_SQUARE     reduce using rule 108 (dibujaCuadrado -> DRAW_SQUARE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    DRAW_RECTANGLE  reduce using rule 108 (dibujaCuadrado -> DRAW_SQUARE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    DRAW_QUADRITERAL reduce using rule 108 (dibujaCuadrado -> DRAW_SQUARE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    RIGHTB          reduce using rule 108 (dibujaCuadrado -> DRAW_SQUARE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)


state 329

    (110) dibujaCuadrilatero -> DRAW_QUADRITERAL LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp . COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON

    COMMA           shift and go to state 335


state 330

    (107) dibujaTriangulo -> DRAW_TRIANGLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp . COMMA exp COMMA color RIGHTP SEMICOLON

    COMMA           shift and go to state 336


state 331

    (105) dibujaLinea -> DRAW_LINE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color . RIGHTP SEMICOLON

    RIGHTP          shift and go to state 337


state 332

    (109) dibujaRectangulo -> DRAW_RECTANGLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color . RIGHTP SEMICOLON

    RIGHTP          shift and go to state 338


state 333

    (65) else -> ELSE condicion3 LEFTB bloque condicion4 RIGHTB .

    IF              reduce using rule 65 (else -> ELSE condicion3 LEFTB bloque condicion4 RIGHTB .)
    WHILE           reduce using rule 65 (else -> ELSE condicion3 LEFTB bloque condicion4 RIGHTB .)
    RETURN          reduce using rule 65 (else -> ELSE condicion3 LEFTB bloque condicion4 RIGHTB .)
    ID              reduce using rule 65 (else -> ELSE condicion3 LEFTB bloque condicion4 RIGHTB .)
    PRINT           reduce using rule 65 (else -> ELSE condicion3 LEFTB bloque condicion4 RIGHTB .)
    DRAW_DOT        reduce using rule 65 (else -> ELSE condicion3 LEFTB bloque condicion4 RIGHTB .)
    DRAW_LINE       reduce using rule 65 (else -> ELSE condicion3 LEFTB bloque condicion4 RIGHTB .)
    DRAW_CIRCLE     reduce using rule 65 (else -> ELSE condicion3 LEFTB bloque condicion4 RIGHTB .)
    DRAW_TRIANGLE   reduce using rule 65 (else -> ELSE condicion3 LEFTB bloque condicion4 RIGHTB .)
    DRAW_SQUARE     reduce using rule 65 (else -> ELSE condicion3 LEFTB bloque condicion4 RIGHTB .)
    DRAW_RECTANGLE  reduce using rule 65 (else -> ELSE condicion3 LEFTB bloque condicion4 RIGHTB .)
    DRAW_QUADRITERAL reduce using rule 65 (else -> ELSE condicion3 LEFTB bloque condicion4 RIGHTB .)
    RIGHTB          reduce using rule 65 (else -> ELSE condicion3 LEFTB bloque condicion4 RIGHTB .)


state 334

    (106) dibujaCirculo -> DRAW_CIRCLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .

    IF              reduce using rule 106 (dibujaCirculo -> DRAW_CIRCLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    WHILE           reduce using rule 106 (dibujaCirculo -> DRAW_CIRCLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    RETURN          reduce using rule 106 (dibujaCirculo -> DRAW_CIRCLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    ID              reduce using rule 106 (dibujaCirculo -> DRAW_CIRCLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    PRINT           reduce using rule 106 (dibujaCirculo -> DRAW_CIRCLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    DRAW_DOT        reduce using rule 106 (dibujaCirculo -> DRAW_CIRCLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    DRAW_LINE       reduce using rule 106 (dibujaCirculo -> DRAW_CIRCLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    DRAW_CIRCLE     reduce using rule 106 (dibujaCirculo -> DRAW_CIRCLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    DRAW_TRIANGLE   reduce using rule 106 (dibujaCirculo -> DRAW_CIRCLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    DRAW_SQUARE     reduce using rule 106 (dibujaCirculo -> DRAW_CIRCLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    DRAW_RECTANGLE  reduce using rule 106 (dibujaCirculo -> DRAW_CIRCLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    DRAW_QUADRITERAL reduce using rule 106 (dibujaCirculo -> DRAW_CIRCLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    RIGHTB          reduce using rule 106 (dibujaCirculo -> DRAW_CIRCLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)


state 335

    (110) dibujaCuadrilatero -> DRAW_QUADRITERAL LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA . exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON
    (70) exp -> . llamada
    (71) exp -> . expresion
    (49) llamada -> . ID llamafun LEFTP args RIGHTP
    (72) expresion -> . operador1 exp1
    (76) operador1 -> . operador2 exp2
    (84) operador2 -> . operador3 exp3
    (88) operador3 -> . operador4 exp4
    (93) operador4 -> . ID idarray
    (96) operador4 -> . constante
    (97) operador4 -> . LEFTP expresion RIGHTP
    (98) constante -> . INT_CTE
    (99) constante -> . FLOAT_CTE
    (100) constante -> . CHAR_CTE
    (101) constante -> . STRING_CTE
    (102) constante -> . TRUE
    (103) constante -> . FALSE

    ID              shift and go to state 104
    LEFTP           shift and go to state 99
    INT_CTE         shift and go to state 105
    FLOAT_CTE       shift and go to state 107
    CHAR_CTE        shift and go to state 101
    STRING_CTE      shift and go to state 93
    TRUE            shift and go to state 97
    FALSE           shift and go to state 103

    expresion                      shift and go to state 106
    constante                      shift and go to state 102
    llamada                        shift and go to state 100
    exp                            shift and go to state 339
    operador1                      shift and go to state 94
    operador3                      shift and go to state 95
    operador2                      shift and go to state 96
    operador4                      shift and go to state 98

state 336

    (107) dibujaTriangulo -> DRAW_TRIANGLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA . exp COMMA color RIGHTP SEMICOLON
    (70) exp -> . llamada
    (71) exp -> . expresion
    (49) llamada -> . ID llamafun LEFTP args RIGHTP
    (72) expresion -> . operador1 exp1
    (76) operador1 -> . operador2 exp2
    (84) operador2 -> . operador3 exp3
    (88) operador3 -> . operador4 exp4
    (93) operador4 -> . ID idarray
    (96) operador4 -> . constante
    (97) operador4 -> . LEFTP expresion RIGHTP
    (98) constante -> . INT_CTE
    (99) constante -> . FLOAT_CTE
    (100) constante -> . CHAR_CTE
    (101) constante -> . STRING_CTE
    (102) constante -> . TRUE
    (103) constante -> . FALSE

    ID              shift and go to state 104
    LEFTP           shift and go to state 99
    INT_CTE         shift and go to state 105
    FLOAT_CTE       shift and go to state 107
    CHAR_CTE        shift and go to state 101
    STRING_CTE      shift and go to state 93
    TRUE            shift and go to state 97
    FALSE           shift and go to state 103

    expresion                      shift and go to state 106
    constante                      shift and go to state 102
    llamada                        shift and go to state 100
    exp                            shift and go to state 340
    operador1                      shift and go to state 94
    operador3                      shift and go to state 95
    operador2                      shift and go to state 96
    operador4                      shift and go to state 98

state 337

    (105) dibujaLinea -> DRAW_LINE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP . SEMICOLON

    SEMICOLON       shift and go to state 341


state 338

    (109) dibujaRectangulo -> DRAW_RECTANGLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP . SEMICOLON

    SEMICOLON       shift and go to state 342


state 339

    (110) dibujaCuadrilatero -> DRAW_QUADRITERAL LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp . COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON

    COMMA           shift and go to state 343


state 340

    (107) dibujaTriangulo -> DRAW_TRIANGLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp . COMMA color RIGHTP SEMICOLON

    COMMA           shift and go to state 344


state 341

    (105) dibujaLinea -> DRAW_LINE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .

    IF              reduce using rule 105 (dibujaLinea -> DRAW_LINE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    WHILE           reduce using rule 105 (dibujaLinea -> DRAW_LINE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    RETURN          reduce using rule 105 (dibujaLinea -> DRAW_LINE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    ID              reduce using rule 105 (dibujaLinea -> DRAW_LINE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    PRINT           reduce using rule 105 (dibujaLinea -> DRAW_LINE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    DRAW_DOT        reduce using rule 105 (dibujaLinea -> DRAW_LINE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    DRAW_LINE       reduce using rule 105 (dibujaLinea -> DRAW_LINE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    DRAW_CIRCLE     reduce using rule 105 (dibujaLinea -> DRAW_LINE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    DRAW_TRIANGLE   reduce using rule 105 (dibujaLinea -> DRAW_LINE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    DRAW_SQUARE     reduce using rule 105 (dibujaLinea -> DRAW_LINE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    DRAW_RECTANGLE  reduce using rule 105 (dibujaLinea -> DRAW_LINE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    DRAW_QUADRITERAL reduce using rule 105 (dibujaLinea -> DRAW_LINE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    RIGHTB          reduce using rule 105 (dibujaLinea -> DRAW_LINE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)


state 342

    (109) dibujaRectangulo -> DRAW_RECTANGLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .

    IF              reduce using rule 109 (dibujaRectangulo -> DRAW_RECTANGLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    WHILE           reduce using rule 109 (dibujaRectangulo -> DRAW_RECTANGLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    RETURN          reduce using rule 109 (dibujaRectangulo -> DRAW_RECTANGLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    ID              reduce using rule 109 (dibujaRectangulo -> DRAW_RECTANGLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    PRINT           reduce using rule 109 (dibujaRectangulo -> DRAW_RECTANGLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    DRAW_DOT        reduce using rule 109 (dibujaRectangulo -> DRAW_RECTANGLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    DRAW_LINE       reduce using rule 109 (dibujaRectangulo -> DRAW_RECTANGLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    DRAW_CIRCLE     reduce using rule 109 (dibujaRectangulo -> DRAW_RECTANGLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    DRAW_TRIANGLE   reduce using rule 109 (dibujaRectangulo -> DRAW_RECTANGLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    DRAW_SQUARE     reduce using rule 109 (dibujaRectangulo -> DRAW_RECTANGLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    DRAW_RECTANGLE  reduce using rule 109 (dibujaRectangulo -> DRAW_RECTANGLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    DRAW_QUADRITERAL reduce using rule 109 (dibujaRectangulo -> DRAW_RECTANGLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    RIGHTB          reduce using rule 109 (dibujaRectangulo -> DRAW_RECTANGLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)


state 343

    (110) dibujaCuadrilatero -> DRAW_QUADRITERAL LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA . exp COMMA exp COMMA color RIGHTP SEMICOLON
    (70) exp -> . llamada
    (71) exp -> . expresion
    (49) llamada -> . ID llamafun LEFTP args RIGHTP
    (72) expresion -> . operador1 exp1
    (76) operador1 -> . operador2 exp2
    (84) operador2 -> . operador3 exp3
    (88) operador3 -> . operador4 exp4
    (93) operador4 -> . ID idarray
    (96) operador4 -> . constante
    (97) operador4 -> . LEFTP expresion RIGHTP
    (98) constante -> . INT_CTE
    (99) constante -> . FLOAT_CTE
    (100) constante -> . CHAR_CTE
    (101) constante -> . STRING_CTE
    (102) constante -> . TRUE
    (103) constante -> . FALSE

    ID              shift and go to state 104
    LEFTP           shift and go to state 99
    INT_CTE         shift and go to state 105
    FLOAT_CTE       shift and go to state 107
    CHAR_CTE        shift and go to state 101
    STRING_CTE      shift and go to state 93
    TRUE            shift and go to state 97
    FALSE           shift and go to state 103

    expresion                      shift and go to state 106
    constante                      shift and go to state 102
    llamada                        shift and go to state 100
    exp                            shift and go to state 345
    operador1                      shift and go to state 94
    operador3                      shift and go to state 95
    operador2                      shift and go to state 96
    operador4                      shift and go to state 98

state 344

    (107) dibujaTriangulo -> DRAW_TRIANGLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA . color RIGHTP SEMICOLON
    (111) color -> . RED
    (112) color -> . BLUE
    (113) color -> . YELLOW
    (114) color -> . PURPLE
    (115) color -> . GREEN
    (116) color -> . BLACK
    (117) color -> . CYAN
    (118) color -> . WHITE
    (119) color -> . FG
    (120) color -> . AW4
    (121) color -> . MB
    (122) color -> . SNOW
    (123) color -> . LY

    RED             shift and go to state 280
    BLUE            shift and go to state 268
    YELLOW          shift and go to state 276
    PURPLE          shift and go to state 275
    GREEN           shift and go to state 272
    BLACK           shift and go to state 278
    CYAN            shift and go to state 277
    WHITE           shift and go to state 279
    FG              shift and go to state 273
    AW4             shift and go to state 269
    MB              shift and go to state 270
    SNOW            shift and go to state 274
    LY              shift and go to state 281

    color                          shift and go to state 346

state 345

    (110) dibujaCuadrilatero -> DRAW_QUADRITERAL LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp . COMMA exp COMMA color RIGHTP SEMICOLON

    COMMA           shift and go to state 347


state 346

    (107) dibujaTriangulo -> DRAW_TRIANGLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color . RIGHTP SEMICOLON

    RIGHTP          shift and go to state 348


state 347

    (110) dibujaCuadrilatero -> DRAW_QUADRITERAL LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA . exp COMMA color RIGHTP SEMICOLON
    (70) exp -> . llamada
    (71) exp -> . expresion
    (49) llamada -> . ID llamafun LEFTP args RIGHTP
    (72) expresion -> . operador1 exp1
    (76) operador1 -> . operador2 exp2
    (84) operador2 -> . operador3 exp3
    (88) operador3 -> . operador4 exp4
    (93) operador4 -> . ID idarray
    (96) operador4 -> . constante
    (97) operador4 -> . LEFTP expresion RIGHTP
    (98) constante -> . INT_CTE
    (99) constante -> . FLOAT_CTE
    (100) constante -> . CHAR_CTE
    (101) constante -> . STRING_CTE
    (102) constante -> . TRUE
    (103) constante -> . FALSE

    ID              shift and go to state 104
    LEFTP           shift and go to state 99
    INT_CTE         shift and go to state 105
    FLOAT_CTE       shift and go to state 107
    CHAR_CTE        shift and go to state 101
    STRING_CTE      shift and go to state 93
    TRUE            shift and go to state 97
    FALSE           shift and go to state 103

    expresion                      shift and go to state 106
    constante                      shift and go to state 102
    llamada                        shift and go to state 100
    exp                            shift and go to state 349
    operador1                      shift and go to state 94
    operador3                      shift and go to state 95
    operador2                      shift and go to state 96
    operador4                      shift and go to state 98

state 348

    (107) dibujaTriangulo -> DRAW_TRIANGLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP . SEMICOLON

    SEMICOLON       shift and go to state 350


state 349

    (110) dibujaCuadrilatero -> DRAW_QUADRITERAL LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp . COMMA color RIGHTP SEMICOLON

    COMMA           shift and go to state 351


state 350

    (107) dibujaTriangulo -> DRAW_TRIANGLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .

    IF              reduce using rule 107 (dibujaTriangulo -> DRAW_TRIANGLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    WHILE           reduce using rule 107 (dibujaTriangulo -> DRAW_TRIANGLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    RETURN          reduce using rule 107 (dibujaTriangulo -> DRAW_TRIANGLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    ID              reduce using rule 107 (dibujaTriangulo -> DRAW_TRIANGLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    PRINT           reduce using rule 107 (dibujaTriangulo -> DRAW_TRIANGLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    DRAW_DOT        reduce using rule 107 (dibujaTriangulo -> DRAW_TRIANGLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    DRAW_LINE       reduce using rule 107 (dibujaTriangulo -> DRAW_TRIANGLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    DRAW_CIRCLE     reduce using rule 107 (dibujaTriangulo -> DRAW_TRIANGLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    DRAW_TRIANGLE   reduce using rule 107 (dibujaTriangulo -> DRAW_TRIANGLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    DRAW_SQUARE     reduce using rule 107 (dibujaTriangulo -> DRAW_TRIANGLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    DRAW_RECTANGLE  reduce using rule 107 (dibujaTriangulo -> DRAW_TRIANGLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    DRAW_QUADRITERAL reduce using rule 107 (dibujaTriangulo -> DRAW_TRIANGLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    RIGHTB          reduce using rule 107 (dibujaTriangulo -> DRAW_TRIANGLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)


state 351

    (110) dibujaCuadrilatero -> DRAW_QUADRITERAL LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA . color RIGHTP SEMICOLON
    (111) color -> . RED
    (112) color -> . BLUE
    (113) color -> . YELLOW
    (114) color -> . PURPLE
    (115) color -> . GREEN
    (116) color -> . BLACK
    (117) color -> . CYAN
    (118) color -> . WHITE
    (119) color -> . FG
    (120) color -> . AW4
    (121) color -> . MB
    (122) color -> . SNOW
    (123) color -> . LY

    RED             shift and go to state 280
    BLUE            shift and go to state 268
    YELLOW          shift and go to state 276
    PURPLE          shift and go to state 275
    GREEN           shift and go to state 272
    BLACK           shift and go to state 278
    CYAN            shift and go to state 277
    WHITE           shift and go to state 279
    FG              shift and go to state 273
    AW4             shift and go to state 269
    MB              shift and go to state 270
    SNOW            shift and go to state 274
    LY              shift and go to state 281

    color                          shift and go to state 352

state 352

    (110) dibujaCuadrilatero -> DRAW_QUADRITERAL LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color . RIGHTP SEMICOLON

    RIGHTP          shift and go to state 353


state 353

    (110) dibujaCuadrilatero -> DRAW_QUADRITERAL LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP . SEMICOLON

    SEMICOLON       shift and go to state 354


state 354

    (110) dibujaCuadrilatero -> DRAW_QUADRITERAL LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .

    IF              reduce using rule 110 (dibujaCuadrilatero -> DRAW_QUADRITERAL LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    WHILE           reduce using rule 110 (dibujaCuadrilatero -> DRAW_QUADRITERAL LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    RETURN          reduce using rule 110 (dibujaCuadrilatero -> DRAW_QUADRITERAL LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    ID              reduce using rule 110 (dibujaCuadrilatero -> DRAW_QUADRITERAL LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    PRINT           reduce using rule 110 (dibujaCuadrilatero -> DRAW_QUADRITERAL LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    DRAW_DOT        reduce using rule 110 (dibujaCuadrilatero -> DRAW_QUADRITERAL LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    DRAW_LINE       reduce using rule 110 (dibujaCuadrilatero -> DRAW_QUADRITERAL LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    DRAW_CIRCLE     reduce using rule 110 (dibujaCuadrilatero -> DRAW_QUADRITERAL LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    DRAW_TRIANGLE   reduce using rule 110 (dibujaCuadrilatero -> DRAW_QUADRITERAL LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    DRAW_SQUARE     reduce using rule 110 (dibujaCuadrilatero -> DRAW_QUADRITERAL LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    DRAW_RECTANGLE  reduce using rule 110 (dibujaCuadrilatero -> DRAW_QUADRITERAL LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    DRAW_QUADRITERAL reduce using rule 110 (dibujaCuadrilatero -> DRAW_QUADRITERAL LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    RIGHTB          reduce using rule 110 (dibujaCuadrilatero -> DRAW_QUADRITERAL LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)

