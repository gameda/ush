Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAM ID COLON globales metodos goto_main
Rule 2     goto_main -> VOID MAIN scopemain LEFTP RIGHTP LEFTB declara_var bloque RIGHTB
Rule 3     scopemain -> empty
Rule 4     globales -> declara_var
Rule 5     declara_var -> empty
Rule 6     declara_var -> variables
Rule 7     variables -> VAR tipo var lista_variables SEMICOLON declara_var
Rule 8     lista_variables -> COMMA var lista_variables
Rule 9     lista_variables -> empty
Rule 10    var -> ID
Rule 11    var -> ID LEFTSB INT_CTE RIGHTSB
Rule 12    metodos -> metodo metodos
Rule 13    metodos -> empty
Rule 14    metodo -> METHOD tipo_metodo ID inicio_method LEFTP params RIGHTP LEFTB method_vars bloque RIGHTB end_method
Rule 15    inicio_method -> empty
Rule 16    end_method -> empty
Rule 17    tipo_metodo -> VOID
Rule 18    tipo_metodo -> tipo
Rule 19    params -> empty
Rule 20    params -> parametro paraux
Rule 21    paraux -> empty
Rule 22    paraux -> COMMA parametro paraux
Rule 23    parametro -> tipo ID
Rule 24    method_vars -> declara_var
Rule 25    bloque -> estatuto bloque
Rule 26    bloque -> empty
Rule 27    tipo -> INT
Rule 28    tipo -> CHAR
Rule 29    tipo -> BOOLEAN
Rule 30    tipo -> FLOAT
Rule 31    tipo -> STRING
Rule 32    estatuto -> condicion
Rule 33    estatuto -> ciclo
Rule 34    estatuto -> return
Rule 35    estatuto -> lectura
Rule 36    estatuto -> escritura
Rule 37    estatuto -> llamada SEMICOLON
Rule 38    estatuto -> asignacion
Rule 39    estatuto -> dibujaPunto
Rule 40    estatuto -> dibujaLinea
Rule 41    estatuto -> dibujaCirculo
Rule 42    estatuto -> dibujaTriangulo
Rule 43    estatuto -> dibujaCuadrado
Rule 44    estatuto -> dibujaRectangulo
Rule 45    estatuto -> dibujaCuadrilatero
Rule 46    return -> RETURN exp SEMICOLON
Rule 47    lectura -> ID ASSIGN READ LEFTP RIGHTP SEMICOLON
Rule 48    escritura -> PRINT LEFTP exp RIGHTP SEMICOLON
Rule 49    llamada -> ID llamafun LEFTP args RIGHTP
Rule 50    llamafun -> empty
Rule 51    args -> exp param listargs
Rule 52    args -> empty
Rule 53    listargs -> COMMA args
Rule 54    listargs -> empty
Rule 55    param -> empty
Rule 56    asignacion -> ID asign
Rule 57    asignacion -> ID LEFTSB exp RIGHTSB asign
Rule 58    asign -> ASSIGN exp SEMICOLON
Rule 59    ciclo -> WHILE salto_ciclo LEFTP exp ciclo1 RIGHTP LEFTB bloque ciclo2 RIGHTB
Rule 60    salto_ciclo -> empty
Rule 61    ciclo1 -> empty
Rule 62    ciclo2 -> empty
Rule 63    condicion -> IF LEFTP condicion1 RIGHTP LEFTB bloque RIGHTB condicion3 else
Rule 64    else -> ELSE LEFTB bloque condicion4 RIGHTB
Rule 65    else -> empty
Rule 66    condicion1 -> exp
Rule 67    condicion3 -> empty
Rule 68    condicion4 -> empty
Rule 69    exp -> llamada
Rule 70    exp -> expresion
Rule 71    expresion -> operador1 exp1
Rule 72    exp1 -> empty
Rule 73    exp1 -> AND saveop operador1 exp1
Rule 74    exp1 -> OR saveop operador1 exp1
Rule 75    operador1 -> operador2 exp2
Rule 76    exp2 -> empty
Rule 77    exp2 -> EQUALS saveop operador2 exp2
Rule 78    exp2 -> NOTEQUAL saveop operador2 exp2
Rule 79    exp2 -> GREATEREQUAL saveop operador2 exp2
Rule 80    exp2 -> GREATERTHAN saveop operador2 exp2
Rule 81    exp2 -> LESSTHAN saveop operador2 exp2
Rule 82    exp2 -> LESSEQUAL saveop operador2 exp2
Rule 83    operador2 -> operador3 exp3
Rule 84    exp3 -> empty
Rule 85    exp3 -> SUM saveop operador3 exp3
Rule 86    exp3 -> LESS saveop operador3 exp3
Rule 87    operador3 -> operador4 exp4
Rule 88    exp4 -> empty
Rule 89    exp4 -> TIMES saveop operador4 exp4
Rule 90    exp4 -> DIVISION saveop operador4 exp4
Rule 91    saveop -> empty
Rule 92    operador4 -> ID
Rule 93    operador4 -> constante
Rule 94    operador4 -> LEFTP expresion RIGHTP
Rule 95    constante -> INT_CTE
Rule 96    constante -> FLOAT_CTE
Rule 97    constante -> CHAR_CTE
Rule 98    constante -> STRING_CTE
Rule 99    constante -> TRUE
Rule 100   constante -> FALSE
Rule 101   dibujaPunto -> DRAW_DOT LEFTP exp COMMA exp COMMA color RIGHTP SEMICOLON
Rule 102   dibujaLinea -> DRAW_LINE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON
Rule 103   dibujaCirculo -> DRAW_CIRCLE LEFTP exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON
Rule 104   dibujaTriangulo -> DRAW_TRIANGLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON
Rule 105   dibujaCuadrado -> DRAW_SQUARE LEFTP exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON
Rule 106   dibujaRectangulo -> DRAW_RECTANGLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON
Rule 107   dibujaCuadrilatero -> DRAW_QUADRITERAL LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON
Rule 108   color -> RED
Rule 109   color -> BLUE
Rule 110   color -> YELLOW
Rule 111   color -> PURPLE
Rule 112   color -> GREEN
Rule 113   color -> BLACK
Rule 114   color -> CYAN
Rule 115   color -> WHITE
Rule 116   empty -> <empty>

Terminals, with rules where they appear

AND                  : 73
ASSIGN               : 47 58
BLACK                : 113
BLUE                 : 109
BOOLEAN              : 29
CHAR                 : 28
CHAR_CTE             : 97
COLON                : 1
COMMA                : 8 22 53 101 101 102 102 102 102 103 103 103 104 104 104 104 104 104 105 105 105 106 106 106 106 107 107 107 107 107 107 107 107
CYAN                 : 114
DIVISION             : 90
DRAW_CIRCLE          : 103
DRAW_DOT             : 101
DRAW_LINE            : 102
DRAW_QUADRITERAL     : 107
DRAW_RECTANGLE       : 106
DRAW_SQUARE          : 105
DRAW_TRIANGLE        : 104
ELSE                 : 64
EQUALS               : 77
FALSE                : 100
FLOAT                : 30
FLOAT_CTE            : 96
GREATEREQUAL         : 79
GREATERTHAN          : 80
GREEN                : 112
ID                   : 1 10 11 14 23 47 49 56 57 92
IF                   : 63
INT                  : 27
INT_CTE              : 11 95
LEFTB                : 2 14 59 63 64
LEFTP                : 2 14 47 48 49 59 63 94 101 102 103 104 105 106 107
LEFTSB               : 11 57
LESS                 : 86
LESSEQUAL            : 82
LESSTHAN             : 81
MAIN                 : 2
METHOD               : 14
NOTEQUAL             : 78
OR                   : 74
PRINT                : 48
PROGRAM              : 1
PURPLE               : 111
READ                 : 47
RED                  : 108
RETURN               : 46
RIGHTB               : 2 14 59 63 64
RIGHTP               : 2 14 47 48 49 59 63 94 101 102 103 104 105 106 107
RIGHTSB              : 11 57
SEMICOLON            : 7 37 46 47 48 58 101 102 103 104 105 106 107
STRING               : 31
STRING_CTE           : 98
SUM                  : 85
TIMES                : 89
TRUE                 : 99
VAR                  : 7
VOID                 : 2 17
WHILE                : 59
WHITE                : 115
YELLOW               : 110
error                : 

Nonterminals, with rules where they appear

args                 : 49 53
asign                : 56 57
asignacion           : 38
bloque               : 2 14 25 59 63 64
ciclo                : 33
ciclo1               : 59
ciclo2               : 59
color                : 101 102 103 104 105 106 107
condicion            : 32
condicion1           : 63
condicion3           : 63
condicion4           : 64
constante            : 93
declara_var          : 2 4 7 24
dibujaCirculo        : 41
dibujaCuadrado       : 43
dibujaCuadrilatero   : 45
dibujaLinea          : 40
dibujaPunto          : 39
dibujaRectangulo     : 44
dibujaTriangulo      : 42
else                 : 63
empty                : 3 5 9 13 15 16 19 21 26 50 52 54 55 60 61 62 65 67 68 72 76 84 88 91
end_method           : 14
escritura            : 36
estatuto             : 25
exp                  : 46 48 51 57 58 59 66 101 101 102 102 102 102 103 103 103 104 104 104 104 104 104 105 105 105 106 106 106 106 107 107 107 107 107 107 107 107
exp1                 : 71 73 74
exp2                 : 75 77 78 79 80 81 82
exp3                 : 83 85 86
exp4                 : 87 89 90
expresion            : 70 94
globales             : 1
goto_main            : 1
inicio_method        : 14
lectura              : 35
lista_variables      : 7 8
listargs             : 51
llamada              : 37 69
llamafun             : 49
method_vars          : 14
metodo               : 12
metodos              : 1 12
operador1            : 71 73 74
operador2            : 75 77 78 79 80 81 82
operador3            : 83 85 86
operador4            : 87 89 90
param                : 51
parametro            : 20 22
params               : 14
paraux               : 20 22
programa             : 0
return               : 34
salto_ciclo          : 59
saveop               : 73 74 77 78 79 80 81 82 85 86 89 90
scopemain            : 2
tipo                 : 7 18 23
tipo_metodo          : 14
var                  : 7 8
variables            : 6

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAM ID COLON globales metodos goto_main

    PROGRAM         shift and go to state 1

    programa                       shift and go to state 2

state 1

    (1) programa -> PROGRAM . ID COLON globales metodos goto_main

    ID              shift and go to state 3


state 2

    (0) S' -> programa .



state 3

    (1) programa -> PROGRAM ID . COLON globales metodos goto_main

    COLON           shift and go to state 4


state 4

    (1) programa -> PROGRAM ID COLON . globales metodos goto_main
    (4) globales -> . declara_var
    (5) declara_var -> . empty
    (6) declara_var -> . variables
    (116) empty -> .
    (7) variables -> . VAR tipo var lista_variables SEMICOLON declara_var

    METHOD          reduce using rule 116 (empty -> .)
    VOID            reduce using rule 116 (empty -> .)
    VAR             shift and go to state 8

    declara_var                    shift and go to state 5
    variables                      shift and go to state 6
    globales                       shift and go to state 7
    empty                          shift and go to state 9

state 5

    (4) globales -> declara_var .

    METHOD          reduce using rule 4 (globales -> declara_var .)
    VOID            reduce using rule 4 (globales -> declara_var .)


state 6

    (6) declara_var -> variables .

    METHOD          reduce using rule 6 (declara_var -> variables .)
    VOID            reduce using rule 6 (declara_var -> variables .)
    IF              reduce using rule 6 (declara_var -> variables .)
    WHILE           reduce using rule 6 (declara_var -> variables .)
    RETURN          reduce using rule 6 (declara_var -> variables .)
    ID              reduce using rule 6 (declara_var -> variables .)
    PRINT           reduce using rule 6 (declara_var -> variables .)
    DRAW_DOT        reduce using rule 6 (declara_var -> variables .)
    DRAW_LINE       reduce using rule 6 (declara_var -> variables .)
    DRAW_CIRCLE     reduce using rule 6 (declara_var -> variables .)
    DRAW_TRIANGLE   reduce using rule 6 (declara_var -> variables .)
    DRAW_SQUARE     reduce using rule 6 (declara_var -> variables .)
    DRAW_RECTANGLE  reduce using rule 6 (declara_var -> variables .)
    DRAW_QUADRITERAL reduce using rule 6 (declara_var -> variables .)
    RIGHTB          reduce using rule 6 (declara_var -> variables .)


state 7

    (1) programa -> PROGRAM ID COLON globales . metodos goto_main
    (12) metodos -> . metodo metodos
    (13) metodos -> . empty
    (14) metodo -> . METHOD tipo_metodo ID inicio_method LEFTP params RIGHTP LEFTB method_vars bloque RIGHTB end_method
    (116) empty -> .

    METHOD          shift and go to state 11
    VOID            reduce using rule 116 (empty -> .)

    metodo                         shift and go to state 10
    metodos                        shift and go to state 12
    empty                          shift and go to state 13

state 8

    (7) variables -> VAR . tipo var lista_variables SEMICOLON declara_var
    (27) tipo -> . INT
    (28) tipo -> . CHAR
    (29) tipo -> . BOOLEAN
    (30) tipo -> . FLOAT
    (31) tipo -> . STRING

    INT             shift and go to state 15
    CHAR            shift and go to state 17
    BOOLEAN         shift and go to state 18
    FLOAT           shift and go to state 16
    STRING          shift and go to state 19

    tipo                           shift and go to state 14

state 9

    (5) declara_var -> empty .

    METHOD          reduce using rule 5 (declara_var -> empty .)
    VOID            reduce using rule 5 (declara_var -> empty .)
    IF              reduce using rule 5 (declara_var -> empty .)
    WHILE           reduce using rule 5 (declara_var -> empty .)
    RETURN          reduce using rule 5 (declara_var -> empty .)
    ID              reduce using rule 5 (declara_var -> empty .)
    PRINT           reduce using rule 5 (declara_var -> empty .)
    DRAW_DOT        reduce using rule 5 (declara_var -> empty .)
    DRAW_LINE       reduce using rule 5 (declara_var -> empty .)
    DRAW_CIRCLE     reduce using rule 5 (declara_var -> empty .)
    DRAW_TRIANGLE   reduce using rule 5 (declara_var -> empty .)
    DRAW_SQUARE     reduce using rule 5 (declara_var -> empty .)
    DRAW_RECTANGLE  reduce using rule 5 (declara_var -> empty .)
    DRAW_QUADRITERAL reduce using rule 5 (declara_var -> empty .)
    RIGHTB          reduce using rule 5 (declara_var -> empty .)


state 10

    (12) metodos -> metodo . metodos
    (12) metodos -> . metodo metodos
    (13) metodos -> . empty
    (14) metodo -> . METHOD tipo_metodo ID inicio_method LEFTP params RIGHTP LEFTB method_vars bloque RIGHTB end_method
    (116) empty -> .

    METHOD          shift and go to state 11
    VOID            reduce using rule 116 (empty -> .)

    metodo                         shift and go to state 10
    metodos                        shift and go to state 20
    empty                          shift and go to state 13

state 11

    (14) metodo -> METHOD . tipo_metodo ID inicio_method LEFTP params RIGHTP LEFTB method_vars bloque RIGHTB end_method
    (17) tipo_metodo -> . VOID
    (18) tipo_metodo -> . tipo
    (27) tipo -> . INT
    (28) tipo -> . CHAR
    (29) tipo -> . BOOLEAN
    (30) tipo -> . FLOAT
    (31) tipo -> . STRING

    VOID            shift and go to state 22
    INT             shift and go to state 15
    CHAR            shift and go to state 17
    BOOLEAN         shift and go to state 18
    FLOAT           shift and go to state 16
    STRING          shift and go to state 19

    tipo                           shift and go to state 21
    tipo_metodo                    shift and go to state 23

state 12

    (1) programa -> PROGRAM ID COLON globales metodos . goto_main
    (2) goto_main -> . VOID MAIN scopemain LEFTP RIGHTP LEFTB declara_var bloque RIGHTB

    VOID            shift and go to state 25

    goto_main                      shift and go to state 24

state 13

    (13) metodos -> empty .

    VOID            reduce using rule 13 (metodos -> empty .)


state 14

    (7) variables -> VAR tipo . var lista_variables SEMICOLON declara_var
    (10) var -> . ID
    (11) var -> . ID LEFTSB INT_CTE RIGHTSB

    ID              shift and go to state 27

    var                            shift and go to state 26

state 15

    (27) tipo -> INT .

    ID              reduce using rule 27 (tipo -> INT .)


state 16

    (30) tipo -> FLOAT .

    ID              reduce using rule 30 (tipo -> FLOAT .)


state 17

    (28) tipo -> CHAR .

    ID              reduce using rule 28 (tipo -> CHAR .)


state 18

    (29) tipo -> BOOLEAN .

    ID              reduce using rule 29 (tipo -> BOOLEAN .)


state 19

    (31) tipo -> STRING .

    ID              reduce using rule 31 (tipo -> STRING .)


state 20

    (12) metodos -> metodo metodos .

    VOID            reduce using rule 12 (metodos -> metodo metodos .)


state 21

    (18) tipo_metodo -> tipo .

    ID              reduce using rule 18 (tipo_metodo -> tipo .)


state 22

    (17) tipo_metodo -> VOID .

    ID              reduce using rule 17 (tipo_metodo -> VOID .)


state 23

    (14) metodo -> METHOD tipo_metodo . ID inicio_method LEFTP params RIGHTP LEFTB method_vars bloque RIGHTB end_method

    ID              shift and go to state 28


state 24

    (1) programa -> PROGRAM ID COLON globales metodos goto_main .

    $end            reduce using rule 1 (programa -> PROGRAM ID COLON globales metodos goto_main .)


state 25

    (2) goto_main -> VOID . MAIN scopemain LEFTP RIGHTP LEFTB declara_var bloque RIGHTB

    MAIN            shift and go to state 29


state 26

    (7) variables -> VAR tipo var . lista_variables SEMICOLON declara_var
    (8) lista_variables -> . COMMA var lista_variables
    (9) lista_variables -> . empty
    (116) empty -> .

    COMMA           shift and go to state 31
    SEMICOLON       reduce using rule 116 (empty -> .)

    lista_variables                shift and go to state 30
    empty                          shift and go to state 32

state 27

    (10) var -> ID .
    (11) var -> ID . LEFTSB INT_CTE RIGHTSB

    COMMA           reduce using rule 10 (var -> ID .)
    SEMICOLON       reduce using rule 10 (var -> ID .)
    LEFTSB          shift and go to state 33


state 28

    (14) metodo -> METHOD tipo_metodo ID . inicio_method LEFTP params RIGHTP LEFTB method_vars bloque RIGHTB end_method
    (15) inicio_method -> . empty
    (116) empty -> .

    LEFTP           reduce using rule 116 (empty -> .)

    inicio_method                  shift and go to state 34
    empty                          shift and go to state 35

state 29

    (2) goto_main -> VOID MAIN . scopemain LEFTP RIGHTP LEFTB declara_var bloque RIGHTB
    (3) scopemain -> . empty
    (116) empty -> .

    LEFTP           reduce using rule 116 (empty -> .)

    scopemain                      shift and go to state 36
    empty                          shift and go to state 37

state 30

    (7) variables -> VAR tipo var lista_variables . SEMICOLON declara_var

    SEMICOLON       shift and go to state 38


state 31

    (8) lista_variables -> COMMA . var lista_variables
    (10) var -> . ID
    (11) var -> . ID LEFTSB INT_CTE RIGHTSB

    ID              shift and go to state 27

    var                            shift and go to state 39

state 32

    (9) lista_variables -> empty .

    SEMICOLON       reduce using rule 9 (lista_variables -> empty .)


state 33

    (11) var -> ID LEFTSB . INT_CTE RIGHTSB

    INT_CTE         shift and go to state 40


state 34

    (14) metodo -> METHOD tipo_metodo ID inicio_method . LEFTP params RIGHTP LEFTB method_vars bloque RIGHTB end_method

    LEFTP           shift and go to state 41


state 35

    (15) inicio_method -> empty .

    LEFTP           reduce using rule 15 (inicio_method -> empty .)


state 36

    (2) goto_main -> VOID MAIN scopemain . LEFTP RIGHTP LEFTB declara_var bloque RIGHTB

    LEFTP           shift and go to state 42


state 37

    (3) scopemain -> empty .

    LEFTP           reduce using rule 3 (scopemain -> empty .)


state 38

    (7) variables -> VAR tipo var lista_variables SEMICOLON . declara_var
    (5) declara_var -> . empty
    (6) declara_var -> . variables
    (116) empty -> .
    (7) variables -> . VAR tipo var lista_variables SEMICOLON declara_var

    METHOD          reduce using rule 116 (empty -> .)
    VOID            reduce using rule 116 (empty -> .)
    IF              reduce using rule 116 (empty -> .)
    WHILE           reduce using rule 116 (empty -> .)
    RETURN          reduce using rule 116 (empty -> .)
    ID              reduce using rule 116 (empty -> .)
    PRINT           reduce using rule 116 (empty -> .)
    DRAW_DOT        reduce using rule 116 (empty -> .)
    DRAW_LINE       reduce using rule 116 (empty -> .)
    DRAW_CIRCLE     reduce using rule 116 (empty -> .)
    DRAW_TRIANGLE   reduce using rule 116 (empty -> .)
    DRAW_SQUARE     reduce using rule 116 (empty -> .)
    DRAW_RECTANGLE  reduce using rule 116 (empty -> .)
    DRAW_QUADRITERAL reduce using rule 116 (empty -> .)
    RIGHTB          reduce using rule 116 (empty -> .)
    VAR             shift and go to state 8

    declara_var                    shift and go to state 43
    variables                      shift and go to state 6
    empty                          shift and go to state 9

state 39

    (8) lista_variables -> COMMA var . lista_variables
    (8) lista_variables -> . COMMA var lista_variables
    (9) lista_variables -> . empty
    (116) empty -> .

    COMMA           shift and go to state 31
    SEMICOLON       reduce using rule 116 (empty -> .)

    lista_variables                shift and go to state 44
    empty                          shift and go to state 32

state 40

    (11) var -> ID LEFTSB INT_CTE . RIGHTSB

    RIGHTSB         shift and go to state 45


state 41

    (14) metodo -> METHOD tipo_metodo ID inicio_method LEFTP . params RIGHTP LEFTB method_vars bloque RIGHTB end_method
    (19) params -> . empty
    (20) params -> . parametro paraux
    (116) empty -> .
    (23) parametro -> . tipo ID
    (27) tipo -> . INT
    (28) tipo -> . CHAR
    (29) tipo -> . BOOLEAN
    (30) tipo -> . FLOAT
    (31) tipo -> . STRING

    RIGHTP          reduce using rule 116 (empty -> .)
    INT             shift and go to state 15
    CHAR            shift and go to state 17
    BOOLEAN         shift and go to state 18
    FLOAT           shift and go to state 16
    STRING          shift and go to state 19

    tipo                           shift and go to state 46
    parametro                      shift and go to state 47
    params                         shift and go to state 48
    empty                          shift and go to state 49

state 42

    (2) goto_main -> VOID MAIN scopemain LEFTP . RIGHTP LEFTB declara_var bloque RIGHTB

    RIGHTP          shift and go to state 50


state 43

    (7) variables -> VAR tipo var lista_variables SEMICOLON declara_var .

    IF              reduce using rule 7 (variables -> VAR tipo var lista_variables SEMICOLON declara_var .)
    WHILE           reduce using rule 7 (variables -> VAR tipo var lista_variables SEMICOLON declara_var .)
    RETURN          reduce using rule 7 (variables -> VAR tipo var lista_variables SEMICOLON declara_var .)
    ID              reduce using rule 7 (variables -> VAR tipo var lista_variables SEMICOLON declara_var .)
    PRINT           reduce using rule 7 (variables -> VAR tipo var lista_variables SEMICOLON declara_var .)
    DRAW_DOT        reduce using rule 7 (variables -> VAR tipo var lista_variables SEMICOLON declara_var .)
    DRAW_LINE       reduce using rule 7 (variables -> VAR tipo var lista_variables SEMICOLON declara_var .)
    DRAW_CIRCLE     reduce using rule 7 (variables -> VAR tipo var lista_variables SEMICOLON declara_var .)
    DRAW_TRIANGLE   reduce using rule 7 (variables -> VAR tipo var lista_variables SEMICOLON declara_var .)
    DRAW_SQUARE     reduce using rule 7 (variables -> VAR tipo var lista_variables SEMICOLON declara_var .)
    DRAW_RECTANGLE  reduce using rule 7 (variables -> VAR tipo var lista_variables SEMICOLON declara_var .)
    DRAW_QUADRITERAL reduce using rule 7 (variables -> VAR tipo var lista_variables SEMICOLON declara_var .)
    RIGHTB          reduce using rule 7 (variables -> VAR tipo var lista_variables SEMICOLON declara_var .)
    METHOD          reduce using rule 7 (variables -> VAR tipo var lista_variables SEMICOLON declara_var .)
    VOID            reduce using rule 7 (variables -> VAR tipo var lista_variables SEMICOLON declara_var .)


state 44

    (8) lista_variables -> COMMA var lista_variables .

    SEMICOLON       reduce using rule 8 (lista_variables -> COMMA var lista_variables .)


state 45

    (11) var -> ID LEFTSB INT_CTE RIGHTSB .

    COMMA           reduce using rule 11 (var -> ID LEFTSB INT_CTE RIGHTSB .)
    SEMICOLON       reduce using rule 11 (var -> ID LEFTSB INT_CTE RIGHTSB .)


state 46

    (23) parametro -> tipo . ID

    ID              shift and go to state 51


state 47

    (20) params -> parametro . paraux
    (21) paraux -> . empty
    (22) paraux -> . COMMA parametro paraux
    (116) empty -> .

    COMMA           shift and go to state 52
    RIGHTP          reduce using rule 116 (empty -> .)

    empty                          shift and go to state 53
    paraux                         shift and go to state 54

state 48

    (14) metodo -> METHOD tipo_metodo ID inicio_method LEFTP params . RIGHTP LEFTB method_vars bloque RIGHTB end_method

    RIGHTP          shift and go to state 55


state 49

    (19) params -> empty .

    RIGHTP          reduce using rule 19 (params -> empty .)


state 50

    (2) goto_main -> VOID MAIN scopemain LEFTP RIGHTP . LEFTB declara_var bloque RIGHTB

    LEFTB           shift and go to state 56


state 51

    (23) parametro -> tipo ID .

    COMMA           reduce using rule 23 (parametro -> tipo ID .)
    RIGHTP          reduce using rule 23 (parametro -> tipo ID .)


state 52

    (22) paraux -> COMMA . parametro paraux
    (23) parametro -> . tipo ID
    (27) tipo -> . INT
    (28) tipo -> . CHAR
    (29) tipo -> . BOOLEAN
    (30) tipo -> . FLOAT
    (31) tipo -> . STRING

    INT             shift and go to state 15
    CHAR            shift and go to state 17
    BOOLEAN         shift and go to state 18
    FLOAT           shift and go to state 16
    STRING          shift and go to state 19

    parametro                      shift and go to state 57
    tipo                           shift and go to state 46

state 53

    (21) paraux -> empty .

    RIGHTP          reduce using rule 21 (paraux -> empty .)


state 54

    (20) params -> parametro paraux .

    RIGHTP          reduce using rule 20 (params -> parametro paraux .)


state 55

    (14) metodo -> METHOD tipo_metodo ID inicio_method LEFTP params RIGHTP . LEFTB method_vars bloque RIGHTB end_method

    LEFTB           shift and go to state 58


state 56

    (2) goto_main -> VOID MAIN scopemain LEFTP RIGHTP LEFTB . declara_var bloque RIGHTB
    (5) declara_var -> . empty
    (6) declara_var -> . variables
    (116) empty -> .
    (7) variables -> . VAR tipo var lista_variables SEMICOLON declara_var

    IF              reduce using rule 116 (empty -> .)
    WHILE           reduce using rule 116 (empty -> .)
    RETURN          reduce using rule 116 (empty -> .)
    ID              reduce using rule 116 (empty -> .)
    PRINT           reduce using rule 116 (empty -> .)
    DRAW_DOT        reduce using rule 116 (empty -> .)
    DRAW_LINE       reduce using rule 116 (empty -> .)
    DRAW_CIRCLE     reduce using rule 116 (empty -> .)
    DRAW_TRIANGLE   reduce using rule 116 (empty -> .)
    DRAW_SQUARE     reduce using rule 116 (empty -> .)
    DRAW_RECTANGLE  reduce using rule 116 (empty -> .)
    DRAW_QUADRITERAL reduce using rule 116 (empty -> .)
    RIGHTB          reduce using rule 116 (empty -> .)
    VAR             shift and go to state 8

    declara_var                    shift and go to state 59
    variables                      shift and go to state 6
    empty                          shift and go to state 9

state 57

    (22) paraux -> COMMA parametro . paraux
    (21) paraux -> . empty
    (22) paraux -> . COMMA parametro paraux
    (116) empty -> .

    COMMA           shift and go to state 52
    RIGHTP          reduce using rule 116 (empty -> .)

    empty                          shift and go to state 53
    paraux                         shift and go to state 60

state 58

    (14) metodo -> METHOD tipo_metodo ID inicio_method LEFTP params RIGHTP LEFTB . method_vars bloque RIGHTB end_method
    (24) method_vars -> . declara_var
    (5) declara_var -> . empty
    (6) declara_var -> . variables
    (116) empty -> .
    (7) variables -> . VAR tipo var lista_variables SEMICOLON declara_var

    IF              reduce using rule 116 (empty -> .)
    WHILE           reduce using rule 116 (empty -> .)
    RETURN          reduce using rule 116 (empty -> .)
    ID              reduce using rule 116 (empty -> .)
    PRINT           reduce using rule 116 (empty -> .)
    DRAW_DOT        reduce using rule 116 (empty -> .)
    DRAW_LINE       reduce using rule 116 (empty -> .)
    DRAW_CIRCLE     reduce using rule 116 (empty -> .)
    DRAW_TRIANGLE   reduce using rule 116 (empty -> .)
    DRAW_SQUARE     reduce using rule 116 (empty -> .)
    DRAW_RECTANGLE  reduce using rule 116 (empty -> .)
    DRAW_QUADRITERAL reduce using rule 116 (empty -> .)
    RIGHTB          reduce using rule 116 (empty -> .)
    VAR             shift and go to state 8

    declara_var                    shift and go to state 61
    variables                      shift and go to state 6
    empty                          shift and go to state 9
    method_vars                    shift and go to state 62

state 59

    (2) goto_main -> VOID MAIN scopemain LEFTP RIGHTP LEFTB declara_var . bloque RIGHTB
    (25) bloque -> . estatuto bloque
    (26) bloque -> . empty
    (32) estatuto -> . condicion
    (33) estatuto -> . ciclo
    (34) estatuto -> . return
    (35) estatuto -> . lectura
    (36) estatuto -> . escritura
    (37) estatuto -> . llamada SEMICOLON
    (38) estatuto -> . asignacion
    (39) estatuto -> . dibujaPunto
    (40) estatuto -> . dibujaLinea
    (41) estatuto -> . dibujaCirculo
    (42) estatuto -> . dibujaTriangulo
    (43) estatuto -> . dibujaCuadrado
    (44) estatuto -> . dibujaRectangulo
    (45) estatuto -> . dibujaCuadrilatero
    (116) empty -> .
    (63) condicion -> . IF LEFTP condicion1 RIGHTP LEFTB bloque RIGHTB condicion3 else
    (59) ciclo -> . WHILE salto_ciclo LEFTP exp ciclo1 RIGHTP LEFTB bloque ciclo2 RIGHTB
    (46) return -> . RETURN exp SEMICOLON
    (47) lectura -> . ID ASSIGN READ LEFTP RIGHTP SEMICOLON
    (48) escritura -> . PRINT LEFTP exp RIGHTP SEMICOLON
    (49) llamada -> . ID llamafun LEFTP args RIGHTP
    (56) asignacion -> . ID asign
    (57) asignacion -> . ID LEFTSB exp RIGHTSB asign
    (101) dibujaPunto -> . DRAW_DOT LEFTP exp COMMA exp COMMA color RIGHTP SEMICOLON
    (102) dibujaLinea -> . DRAW_LINE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON
    (103) dibujaCirculo -> . DRAW_CIRCLE LEFTP exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON
    (104) dibujaTriangulo -> . DRAW_TRIANGLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON
    (105) dibujaCuadrado -> . DRAW_SQUARE LEFTP exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON
    (106) dibujaRectangulo -> . DRAW_RECTANGLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON
    (107) dibujaCuadrilatero -> . DRAW_QUADRITERAL LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON

    RIGHTB          reduce using rule 116 (empty -> .)
    IF              shift and go to state 87
    WHILE           shift and go to state 68
    RETURN          shift and go to state 63
    ID              shift and go to state 86
    PRINT           shift and go to state 67
    DRAW_DOT        shift and go to state 89
    DRAW_LINE       shift and go to state 83
    DRAW_CIRCLE     shift and go to state 90
    DRAW_TRIANGLE   shift and go to state 69
    DRAW_SQUARE     shift and go to state 65
    DRAW_RECTANGLE  shift and go to state 84
    DRAW_QUADRITERAL shift and go to state 66

    dibujaTriangulo                shift and go to state 64
    dibujaCuadrado                 shift and go to state 70
    bloque                         shift and go to state 71
    dibujaCuadrilatero             shift and go to state 72
    ciclo                          shift and go to state 73
    estatuto                       shift and go to state 74
    llamada                        shift and go to state 75
    condicion                      shift and go to state 76
    dibujaLinea                    shift and go to state 77
    lectura                        shift and go to state 78
    empty                          shift and go to state 79
    dibujaCirculo                  shift and go to state 80
    dibujaRectangulo               shift and go to state 81
    return                         shift and go to state 82
    dibujaPunto                    shift and go to state 85
    asignacion                     shift and go to state 88
    escritura                      shift and go to state 91

state 60

    (22) paraux -> COMMA parametro paraux .

    RIGHTP          reduce using rule 22 (paraux -> COMMA parametro paraux .)


state 61

    (24) method_vars -> declara_var .

    IF              reduce using rule 24 (method_vars -> declara_var .)
    WHILE           reduce using rule 24 (method_vars -> declara_var .)
    RETURN          reduce using rule 24 (method_vars -> declara_var .)
    ID              reduce using rule 24 (method_vars -> declara_var .)
    PRINT           reduce using rule 24 (method_vars -> declara_var .)
    DRAW_DOT        reduce using rule 24 (method_vars -> declara_var .)
    DRAW_LINE       reduce using rule 24 (method_vars -> declara_var .)
    DRAW_CIRCLE     reduce using rule 24 (method_vars -> declara_var .)
    DRAW_TRIANGLE   reduce using rule 24 (method_vars -> declara_var .)
    DRAW_SQUARE     reduce using rule 24 (method_vars -> declara_var .)
    DRAW_RECTANGLE  reduce using rule 24 (method_vars -> declara_var .)
    DRAW_QUADRITERAL reduce using rule 24 (method_vars -> declara_var .)
    RIGHTB          reduce using rule 24 (method_vars -> declara_var .)


state 62

    (14) metodo -> METHOD tipo_metodo ID inicio_method LEFTP params RIGHTP LEFTB method_vars . bloque RIGHTB end_method
    (25) bloque -> . estatuto bloque
    (26) bloque -> . empty
    (32) estatuto -> . condicion
    (33) estatuto -> . ciclo
    (34) estatuto -> . return
    (35) estatuto -> . lectura
    (36) estatuto -> . escritura
    (37) estatuto -> . llamada SEMICOLON
    (38) estatuto -> . asignacion
    (39) estatuto -> . dibujaPunto
    (40) estatuto -> . dibujaLinea
    (41) estatuto -> . dibujaCirculo
    (42) estatuto -> . dibujaTriangulo
    (43) estatuto -> . dibujaCuadrado
    (44) estatuto -> . dibujaRectangulo
    (45) estatuto -> . dibujaCuadrilatero
    (116) empty -> .
    (63) condicion -> . IF LEFTP condicion1 RIGHTP LEFTB bloque RIGHTB condicion3 else
    (59) ciclo -> . WHILE salto_ciclo LEFTP exp ciclo1 RIGHTP LEFTB bloque ciclo2 RIGHTB
    (46) return -> . RETURN exp SEMICOLON
    (47) lectura -> . ID ASSIGN READ LEFTP RIGHTP SEMICOLON
    (48) escritura -> . PRINT LEFTP exp RIGHTP SEMICOLON
    (49) llamada -> . ID llamafun LEFTP args RIGHTP
    (56) asignacion -> . ID asign
    (57) asignacion -> . ID LEFTSB exp RIGHTSB asign
    (101) dibujaPunto -> . DRAW_DOT LEFTP exp COMMA exp COMMA color RIGHTP SEMICOLON
    (102) dibujaLinea -> . DRAW_LINE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON
    (103) dibujaCirculo -> . DRAW_CIRCLE LEFTP exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON
    (104) dibujaTriangulo -> . DRAW_TRIANGLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON
    (105) dibujaCuadrado -> . DRAW_SQUARE LEFTP exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON
    (106) dibujaRectangulo -> . DRAW_RECTANGLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON
    (107) dibujaCuadrilatero -> . DRAW_QUADRITERAL LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON

    RIGHTB          reduce using rule 116 (empty -> .)
    IF              shift and go to state 87
    WHILE           shift and go to state 68
    RETURN          shift and go to state 63
    ID              shift and go to state 86
    PRINT           shift and go to state 67
    DRAW_DOT        shift and go to state 89
    DRAW_LINE       shift and go to state 83
    DRAW_CIRCLE     shift and go to state 90
    DRAW_TRIANGLE   shift and go to state 69
    DRAW_SQUARE     shift and go to state 65
    DRAW_RECTANGLE  shift and go to state 84
    DRAW_QUADRITERAL shift and go to state 66

    dibujaTriangulo                shift and go to state 64
    dibujaCuadrado                 shift and go to state 70
    bloque                         shift and go to state 92
    dibujaCuadrilatero             shift and go to state 72
    ciclo                          shift and go to state 73
    estatuto                       shift and go to state 74
    llamada                        shift and go to state 75
    condicion                      shift and go to state 76
    dibujaLinea                    shift and go to state 77
    lectura                        shift and go to state 78
    empty                          shift and go to state 79
    dibujaCirculo                  shift and go to state 80
    dibujaRectangulo               shift and go to state 81
    return                         shift and go to state 82
    dibujaPunto                    shift and go to state 85
    asignacion                     shift and go to state 88
    escritura                      shift and go to state 91

state 63

    (46) return -> RETURN . exp SEMICOLON
    (69) exp -> . llamada
    (70) exp -> . expresion
    (49) llamada -> . ID llamafun LEFTP args RIGHTP
    (71) expresion -> . operador1 exp1
    (75) operador1 -> . operador2 exp2
    (83) operador2 -> . operador3 exp3
    (87) operador3 -> . operador4 exp4
    (92) operador4 -> . ID
    (93) operador4 -> . constante
    (94) operador4 -> . LEFTP expresion RIGHTP
    (95) constante -> . INT_CTE
    (96) constante -> . FLOAT_CTE
    (97) constante -> . CHAR_CTE
    (98) constante -> . STRING_CTE
    (99) constante -> . TRUE
    (100) constante -> . FALSE

    ID              shift and go to state 104
    LEFTP           shift and go to state 99
    INT_CTE         shift and go to state 105
    FLOAT_CTE       shift and go to state 107
    CHAR_CTE        shift and go to state 101
    STRING_CTE      shift and go to state 93
    TRUE            shift and go to state 97
    FALSE           shift and go to state 103

    expresion                      shift and go to state 106
    constante                      shift and go to state 102
    llamada                        shift and go to state 100
    exp                            shift and go to state 108
    operador1                      shift and go to state 94
    operador3                      shift and go to state 95
    operador2                      shift and go to state 96
    operador4                      shift and go to state 98

state 64

    (42) estatuto -> dibujaTriangulo .

    IF              reduce using rule 42 (estatuto -> dibujaTriangulo .)
    WHILE           reduce using rule 42 (estatuto -> dibujaTriangulo .)
    RETURN          reduce using rule 42 (estatuto -> dibujaTriangulo .)
    ID              reduce using rule 42 (estatuto -> dibujaTriangulo .)
    PRINT           reduce using rule 42 (estatuto -> dibujaTriangulo .)
    DRAW_DOT        reduce using rule 42 (estatuto -> dibujaTriangulo .)
    DRAW_LINE       reduce using rule 42 (estatuto -> dibujaTriangulo .)
    DRAW_CIRCLE     reduce using rule 42 (estatuto -> dibujaTriangulo .)
    DRAW_TRIANGLE   reduce using rule 42 (estatuto -> dibujaTriangulo .)
    DRAW_SQUARE     reduce using rule 42 (estatuto -> dibujaTriangulo .)
    DRAW_RECTANGLE  reduce using rule 42 (estatuto -> dibujaTriangulo .)
    DRAW_QUADRITERAL reduce using rule 42 (estatuto -> dibujaTriangulo .)
    RIGHTB          reduce using rule 42 (estatuto -> dibujaTriangulo .)


state 65

    (105) dibujaCuadrado -> DRAW_SQUARE . LEFTP exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON

    LEFTP           shift and go to state 109


state 66

    (107) dibujaCuadrilatero -> DRAW_QUADRITERAL . LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON

    LEFTP           shift and go to state 110


state 67

    (48) escritura -> PRINT . LEFTP exp RIGHTP SEMICOLON

    LEFTP           shift and go to state 111


state 68

    (59) ciclo -> WHILE . salto_ciclo LEFTP exp ciclo1 RIGHTP LEFTB bloque ciclo2 RIGHTB
    (60) salto_ciclo -> . empty
    (116) empty -> .

    LEFTP           reduce using rule 116 (empty -> .)

    salto_ciclo                    shift and go to state 112
    empty                          shift and go to state 113

state 69

    (104) dibujaTriangulo -> DRAW_TRIANGLE . LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON

    LEFTP           shift and go to state 114


state 70

    (43) estatuto -> dibujaCuadrado .

    IF              reduce using rule 43 (estatuto -> dibujaCuadrado .)
    WHILE           reduce using rule 43 (estatuto -> dibujaCuadrado .)
    RETURN          reduce using rule 43 (estatuto -> dibujaCuadrado .)
    ID              reduce using rule 43 (estatuto -> dibujaCuadrado .)
    PRINT           reduce using rule 43 (estatuto -> dibujaCuadrado .)
    DRAW_DOT        reduce using rule 43 (estatuto -> dibujaCuadrado .)
    DRAW_LINE       reduce using rule 43 (estatuto -> dibujaCuadrado .)
    DRAW_CIRCLE     reduce using rule 43 (estatuto -> dibujaCuadrado .)
    DRAW_TRIANGLE   reduce using rule 43 (estatuto -> dibujaCuadrado .)
    DRAW_SQUARE     reduce using rule 43 (estatuto -> dibujaCuadrado .)
    DRAW_RECTANGLE  reduce using rule 43 (estatuto -> dibujaCuadrado .)
    DRAW_QUADRITERAL reduce using rule 43 (estatuto -> dibujaCuadrado .)
    RIGHTB          reduce using rule 43 (estatuto -> dibujaCuadrado .)


state 71

    (2) goto_main -> VOID MAIN scopemain LEFTP RIGHTP LEFTB declara_var bloque . RIGHTB

    RIGHTB          shift and go to state 115


state 72

    (45) estatuto -> dibujaCuadrilatero .

    IF              reduce using rule 45 (estatuto -> dibujaCuadrilatero .)
    WHILE           reduce using rule 45 (estatuto -> dibujaCuadrilatero .)
    RETURN          reduce using rule 45 (estatuto -> dibujaCuadrilatero .)
    ID              reduce using rule 45 (estatuto -> dibujaCuadrilatero .)
    PRINT           reduce using rule 45 (estatuto -> dibujaCuadrilatero .)
    DRAW_DOT        reduce using rule 45 (estatuto -> dibujaCuadrilatero .)
    DRAW_LINE       reduce using rule 45 (estatuto -> dibujaCuadrilatero .)
    DRAW_CIRCLE     reduce using rule 45 (estatuto -> dibujaCuadrilatero .)
    DRAW_TRIANGLE   reduce using rule 45 (estatuto -> dibujaCuadrilatero .)
    DRAW_SQUARE     reduce using rule 45 (estatuto -> dibujaCuadrilatero .)
    DRAW_RECTANGLE  reduce using rule 45 (estatuto -> dibujaCuadrilatero .)
    DRAW_QUADRITERAL reduce using rule 45 (estatuto -> dibujaCuadrilatero .)
    RIGHTB          reduce using rule 45 (estatuto -> dibujaCuadrilatero .)


state 73

    (33) estatuto -> ciclo .

    IF              reduce using rule 33 (estatuto -> ciclo .)
    WHILE           reduce using rule 33 (estatuto -> ciclo .)
    RETURN          reduce using rule 33 (estatuto -> ciclo .)
    ID              reduce using rule 33 (estatuto -> ciclo .)
    PRINT           reduce using rule 33 (estatuto -> ciclo .)
    DRAW_DOT        reduce using rule 33 (estatuto -> ciclo .)
    DRAW_LINE       reduce using rule 33 (estatuto -> ciclo .)
    DRAW_CIRCLE     reduce using rule 33 (estatuto -> ciclo .)
    DRAW_TRIANGLE   reduce using rule 33 (estatuto -> ciclo .)
    DRAW_SQUARE     reduce using rule 33 (estatuto -> ciclo .)
    DRAW_RECTANGLE  reduce using rule 33 (estatuto -> ciclo .)
    DRAW_QUADRITERAL reduce using rule 33 (estatuto -> ciclo .)
    RIGHTB          reduce using rule 33 (estatuto -> ciclo .)


state 74

    (25) bloque -> estatuto . bloque
    (25) bloque -> . estatuto bloque
    (26) bloque -> . empty
    (32) estatuto -> . condicion
    (33) estatuto -> . ciclo
    (34) estatuto -> . return
    (35) estatuto -> . lectura
    (36) estatuto -> . escritura
    (37) estatuto -> . llamada SEMICOLON
    (38) estatuto -> . asignacion
    (39) estatuto -> . dibujaPunto
    (40) estatuto -> . dibujaLinea
    (41) estatuto -> . dibujaCirculo
    (42) estatuto -> . dibujaTriangulo
    (43) estatuto -> . dibujaCuadrado
    (44) estatuto -> . dibujaRectangulo
    (45) estatuto -> . dibujaCuadrilatero
    (116) empty -> .
    (63) condicion -> . IF LEFTP condicion1 RIGHTP LEFTB bloque RIGHTB condicion3 else
    (59) ciclo -> . WHILE salto_ciclo LEFTP exp ciclo1 RIGHTP LEFTB bloque ciclo2 RIGHTB
    (46) return -> . RETURN exp SEMICOLON
    (47) lectura -> . ID ASSIGN READ LEFTP RIGHTP SEMICOLON
    (48) escritura -> . PRINT LEFTP exp RIGHTP SEMICOLON
    (49) llamada -> . ID llamafun LEFTP args RIGHTP
    (56) asignacion -> . ID asign
    (57) asignacion -> . ID LEFTSB exp RIGHTSB asign
    (101) dibujaPunto -> . DRAW_DOT LEFTP exp COMMA exp COMMA color RIGHTP SEMICOLON
    (102) dibujaLinea -> . DRAW_LINE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON
    (103) dibujaCirculo -> . DRAW_CIRCLE LEFTP exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON
    (104) dibujaTriangulo -> . DRAW_TRIANGLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON
    (105) dibujaCuadrado -> . DRAW_SQUARE LEFTP exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON
    (106) dibujaRectangulo -> . DRAW_RECTANGLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON
    (107) dibujaCuadrilatero -> . DRAW_QUADRITERAL LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON

    RIGHTB          reduce using rule 116 (empty -> .)
    IF              shift and go to state 87
    WHILE           shift and go to state 68
    RETURN          shift and go to state 63
    ID              shift and go to state 86
    PRINT           shift and go to state 67
    DRAW_DOT        shift and go to state 89
    DRAW_LINE       shift and go to state 83
    DRAW_CIRCLE     shift and go to state 90
    DRAW_TRIANGLE   shift and go to state 69
    DRAW_SQUARE     shift and go to state 65
    DRAW_RECTANGLE  shift and go to state 84
    DRAW_QUADRITERAL shift and go to state 66

    dibujaTriangulo                shift and go to state 64
    dibujaCuadrado                 shift and go to state 70
    bloque                         shift and go to state 116
    dibujaCuadrilatero             shift and go to state 72
    ciclo                          shift and go to state 73
    estatuto                       shift and go to state 74
    llamada                        shift and go to state 75
    condicion                      shift and go to state 76
    dibujaLinea                    shift and go to state 77
    lectura                        shift and go to state 78
    empty                          shift and go to state 79
    dibujaCirculo                  shift and go to state 80
    dibujaRectangulo               shift and go to state 81
    return                         shift and go to state 82
    dibujaPunto                    shift and go to state 85
    asignacion                     shift and go to state 88
    escritura                      shift and go to state 91

state 75

    (37) estatuto -> llamada . SEMICOLON

    SEMICOLON       shift and go to state 117


state 76

    (32) estatuto -> condicion .

    IF              reduce using rule 32 (estatuto -> condicion .)
    WHILE           reduce using rule 32 (estatuto -> condicion .)
    RETURN          reduce using rule 32 (estatuto -> condicion .)
    ID              reduce using rule 32 (estatuto -> condicion .)
    PRINT           reduce using rule 32 (estatuto -> condicion .)
    DRAW_DOT        reduce using rule 32 (estatuto -> condicion .)
    DRAW_LINE       reduce using rule 32 (estatuto -> condicion .)
    DRAW_CIRCLE     reduce using rule 32 (estatuto -> condicion .)
    DRAW_TRIANGLE   reduce using rule 32 (estatuto -> condicion .)
    DRAW_SQUARE     reduce using rule 32 (estatuto -> condicion .)
    DRAW_RECTANGLE  reduce using rule 32 (estatuto -> condicion .)
    DRAW_QUADRITERAL reduce using rule 32 (estatuto -> condicion .)
    RIGHTB          reduce using rule 32 (estatuto -> condicion .)


state 77

    (40) estatuto -> dibujaLinea .

    IF              reduce using rule 40 (estatuto -> dibujaLinea .)
    WHILE           reduce using rule 40 (estatuto -> dibujaLinea .)
    RETURN          reduce using rule 40 (estatuto -> dibujaLinea .)
    ID              reduce using rule 40 (estatuto -> dibujaLinea .)
    PRINT           reduce using rule 40 (estatuto -> dibujaLinea .)
    DRAW_DOT        reduce using rule 40 (estatuto -> dibujaLinea .)
    DRAW_LINE       reduce using rule 40 (estatuto -> dibujaLinea .)
    DRAW_CIRCLE     reduce using rule 40 (estatuto -> dibujaLinea .)
    DRAW_TRIANGLE   reduce using rule 40 (estatuto -> dibujaLinea .)
    DRAW_SQUARE     reduce using rule 40 (estatuto -> dibujaLinea .)
    DRAW_RECTANGLE  reduce using rule 40 (estatuto -> dibujaLinea .)
    DRAW_QUADRITERAL reduce using rule 40 (estatuto -> dibujaLinea .)
    RIGHTB          reduce using rule 40 (estatuto -> dibujaLinea .)


state 78

    (35) estatuto -> lectura .

    IF              reduce using rule 35 (estatuto -> lectura .)
    WHILE           reduce using rule 35 (estatuto -> lectura .)
    RETURN          reduce using rule 35 (estatuto -> lectura .)
    ID              reduce using rule 35 (estatuto -> lectura .)
    PRINT           reduce using rule 35 (estatuto -> lectura .)
    DRAW_DOT        reduce using rule 35 (estatuto -> lectura .)
    DRAW_LINE       reduce using rule 35 (estatuto -> lectura .)
    DRAW_CIRCLE     reduce using rule 35 (estatuto -> lectura .)
    DRAW_TRIANGLE   reduce using rule 35 (estatuto -> lectura .)
    DRAW_SQUARE     reduce using rule 35 (estatuto -> lectura .)
    DRAW_RECTANGLE  reduce using rule 35 (estatuto -> lectura .)
    DRAW_QUADRITERAL reduce using rule 35 (estatuto -> lectura .)
    RIGHTB          reduce using rule 35 (estatuto -> lectura .)


state 79

    (26) bloque -> empty .

    RIGHTB          reduce using rule 26 (bloque -> empty .)


state 80

    (41) estatuto -> dibujaCirculo .

    IF              reduce using rule 41 (estatuto -> dibujaCirculo .)
    WHILE           reduce using rule 41 (estatuto -> dibujaCirculo .)
    RETURN          reduce using rule 41 (estatuto -> dibujaCirculo .)
    ID              reduce using rule 41 (estatuto -> dibujaCirculo .)
    PRINT           reduce using rule 41 (estatuto -> dibujaCirculo .)
    DRAW_DOT        reduce using rule 41 (estatuto -> dibujaCirculo .)
    DRAW_LINE       reduce using rule 41 (estatuto -> dibujaCirculo .)
    DRAW_CIRCLE     reduce using rule 41 (estatuto -> dibujaCirculo .)
    DRAW_TRIANGLE   reduce using rule 41 (estatuto -> dibujaCirculo .)
    DRAW_SQUARE     reduce using rule 41 (estatuto -> dibujaCirculo .)
    DRAW_RECTANGLE  reduce using rule 41 (estatuto -> dibujaCirculo .)
    DRAW_QUADRITERAL reduce using rule 41 (estatuto -> dibujaCirculo .)
    RIGHTB          reduce using rule 41 (estatuto -> dibujaCirculo .)


state 81

    (44) estatuto -> dibujaRectangulo .

    IF              reduce using rule 44 (estatuto -> dibujaRectangulo .)
    WHILE           reduce using rule 44 (estatuto -> dibujaRectangulo .)
    RETURN          reduce using rule 44 (estatuto -> dibujaRectangulo .)
    ID              reduce using rule 44 (estatuto -> dibujaRectangulo .)
    PRINT           reduce using rule 44 (estatuto -> dibujaRectangulo .)
    DRAW_DOT        reduce using rule 44 (estatuto -> dibujaRectangulo .)
    DRAW_LINE       reduce using rule 44 (estatuto -> dibujaRectangulo .)
    DRAW_CIRCLE     reduce using rule 44 (estatuto -> dibujaRectangulo .)
    DRAW_TRIANGLE   reduce using rule 44 (estatuto -> dibujaRectangulo .)
    DRAW_SQUARE     reduce using rule 44 (estatuto -> dibujaRectangulo .)
    DRAW_RECTANGLE  reduce using rule 44 (estatuto -> dibujaRectangulo .)
    DRAW_QUADRITERAL reduce using rule 44 (estatuto -> dibujaRectangulo .)
    RIGHTB          reduce using rule 44 (estatuto -> dibujaRectangulo .)


state 82

    (34) estatuto -> return .

    IF              reduce using rule 34 (estatuto -> return .)
    WHILE           reduce using rule 34 (estatuto -> return .)
    RETURN          reduce using rule 34 (estatuto -> return .)
    ID              reduce using rule 34 (estatuto -> return .)
    PRINT           reduce using rule 34 (estatuto -> return .)
    DRAW_DOT        reduce using rule 34 (estatuto -> return .)
    DRAW_LINE       reduce using rule 34 (estatuto -> return .)
    DRAW_CIRCLE     reduce using rule 34 (estatuto -> return .)
    DRAW_TRIANGLE   reduce using rule 34 (estatuto -> return .)
    DRAW_SQUARE     reduce using rule 34 (estatuto -> return .)
    DRAW_RECTANGLE  reduce using rule 34 (estatuto -> return .)
    DRAW_QUADRITERAL reduce using rule 34 (estatuto -> return .)
    RIGHTB          reduce using rule 34 (estatuto -> return .)


state 83

    (102) dibujaLinea -> DRAW_LINE . LEFTP exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON

    LEFTP           shift and go to state 118


state 84

    (106) dibujaRectangulo -> DRAW_RECTANGLE . LEFTP exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON

    LEFTP           shift and go to state 119


state 85

    (39) estatuto -> dibujaPunto .

    IF              reduce using rule 39 (estatuto -> dibujaPunto .)
    WHILE           reduce using rule 39 (estatuto -> dibujaPunto .)
    RETURN          reduce using rule 39 (estatuto -> dibujaPunto .)
    ID              reduce using rule 39 (estatuto -> dibujaPunto .)
    PRINT           reduce using rule 39 (estatuto -> dibujaPunto .)
    DRAW_DOT        reduce using rule 39 (estatuto -> dibujaPunto .)
    DRAW_LINE       reduce using rule 39 (estatuto -> dibujaPunto .)
    DRAW_CIRCLE     reduce using rule 39 (estatuto -> dibujaPunto .)
    DRAW_TRIANGLE   reduce using rule 39 (estatuto -> dibujaPunto .)
    DRAW_SQUARE     reduce using rule 39 (estatuto -> dibujaPunto .)
    DRAW_RECTANGLE  reduce using rule 39 (estatuto -> dibujaPunto .)
    DRAW_QUADRITERAL reduce using rule 39 (estatuto -> dibujaPunto .)
    RIGHTB          reduce using rule 39 (estatuto -> dibujaPunto .)


state 86

    (47) lectura -> ID . ASSIGN READ LEFTP RIGHTP SEMICOLON
    (49) llamada -> ID . llamafun LEFTP args RIGHTP
    (56) asignacion -> ID . asign
    (57) asignacion -> ID . LEFTSB exp RIGHTSB asign
    (50) llamafun -> . empty
    (58) asign -> . ASSIGN exp SEMICOLON
    (116) empty -> .

    ASSIGN          shift and go to state 121
    LEFTSB          shift and go to state 120
    LEFTP           reduce using rule 116 (empty -> .)

    empty                          shift and go to state 122
    llamafun                       shift and go to state 124
    asign                          shift and go to state 123

state 87

    (63) condicion -> IF . LEFTP condicion1 RIGHTP LEFTB bloque RIGHTB condicion3 else

    LEFTP           shift and go to state 125


state 88

    (38) estatuto -> asignacion .

    IF              reduce using rule 38 (estatuto -> asignacion .)
    WHILE           reduce using rule 38 (estatuto -> asignacion .)
    RETURN          reduce using rule 38 (estatuto -> asignacion .)
    ID              reduce using rule 38 (estatuto -> asignacion .)
    PRINT           reduce using rule 38 (estatuto -> asignacion .)
    DRAW_DOT        reduce using rule 38 (estatuto -> asignacion .)
    DRAW_LINE       reduce using rule 38 (estatuto -> asignacion .)
    DRAW_CIRCLE     reduce using rule 38 (estatuto -> asignacion .)
    DRAW_TRIANGLE   reduce using rule 38 (estatuto -> asignacion .)
    DRAW_SQUARE     reduce using rule 38 (estatuto -> asignacion .)
    DRAW_RECTANGLE  reduce using rule 38 (estatuto -> asignacion .)
    DRAW_QUADRITERAL reduce using rule 38 (estatuto -> asignacion .)
    RIGHTB          reduce using rule 38 (estatuto -> asignacion .)


state 89

    (101) dibujaPunto -> DRAW_DOT . LEFTP exp COMMA exp COMMA color RIGHTP SEMICOLON

    LEFTP           shift and go to state 126


state 90

    (103) dibujaCirculo -> DRAW_CIRCLE . LEFTP exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON

    LEFTP           shift and go to state 127


state 91

    (36) estatuto -> escritura .

    IF              reduce using rule 36 (estatuto -> escritura .)
    WHILE           reduce using rule 36 (estatuto -> escritura .)
    RETURN          reduce using rule 36 (estatuto -> escritura .)
    ID              reduce using rule 36 (estatuto -> escritura .)
    PRINT           reduce using rule 36 (estatuto -> escritura .)
    DRAW_DOT        reduce using rule 36 (estatuto -> escritura .)
    DRAW_LINE       reduce using rule 36 (estatuto -> escritura .)
    DRAW_CIRCLE     reduce using rule 36 (estatuto -> escritura .)
    DRAW_TRIANGLE   reduce using rule 36 (estatuto -> escritura .)
    DRAW_SQUARE     reduce using rule 36 (estatuto -> escritura .)
    DRAW_RECTANGLE  reduce using rule 36 (estatuto -> escritura .)
    DRAW_QUADRITERAL reduce using rule 36 (estatuto -> escritura .)
    RIGHTB          reduce using rule 36 (estatuto -> escritura .)


state 92

    (14) metodo -> METHOD tipo_metodo ID inicio_method LEFTP params RIGHTP LEFTB method_vars bloque . RIGHTB end_method

    RIGHTB          shift and go to state 128


state 93

    (98) constante -> STRING_CTE .

    TIMES           reduce using rule 98 (constante -> STRING_CTE .)
    DIVISION        reduce using rule 98 (constante -> STRING_CTE .)
    SUM             reduce using rule 98 (constante -> STRING_CTE .)
    LESS            reduce using rule 98 (constante -> STRING_CTE .)
    EQUALS          reduce using rule 98 (constante -> STRING_CTE .)
    NOTEQUAL        reduce using rule 98 (constante -> STRING_CTE .)
    GREATEREQUAL    reduce using rule 98 (constante -> STRING_CTE .)
    GREATERTHAN     reduce using rule 98 (constante -> STRING_CTE .)
    LESSTHAN        reduce using rule 98 (constante -> STRING_CTE .)
    LESSEQUAL       reduce using rule 98 (constante -> STRING_CTE .)
    AND             reduce using rule 98 (constante -> STRING_CTE .)
    OR              reduce using rule 98 (constante -> STRING_CTE .)
    SEMICOLON       reduce using rule 98 (constante -> STRING_CTE .)
    RIGHTP          reduce using rule 98 (constante -> STRING_CTE .)
    COMMA           reduce using rule 98 (constante -> STRING_CTE .)
    RIGHTSB         reduce using rule 98 (constante -> STRING_CTE .)


state 94

    (71) expresion -> operador1 . exp1
    (72) exp1 -> . empty
    (73) exp1 -> . AND saveop operador1 exp1
    (74) exp1 -> . OR saveop operador1 exp1
    (116) empty -> .

    AND             shift and go to state 129
    OR              shift and go to state 131
    SEMICOLON       reduce using rule 116 (empty -> .)
    RIGHTP          reduce using rule 116 (empty -> .)
    COMMA           reduce using rule 116 (empty -> .)
    RIGHTSB         reduce using rule 116 (empty -> .)

    exp1                           shift and go to state 130
    empty                          shift and go to state 132

state 95

    (83) operador2 -> operador3 . exp3
    (84) exp3 -> . empty
    (85) exp3 -> . SUM saveop operador3 exp3
    (86) exp3 -> . LESS saveop operador3 exp3
    (116) empty -> .

    SUM             shift and go to state 135
    LESS            shift and go to state 133
    EQUALS          reduce using rule 116 (empty -> .)
    NOTEQUAL        reduce using rule 116 (empty -> .)
    GREATEREQUAL    reduce using rule 116 (empty -> .)
    GREATERTHAN     reduce using rule 116 (empty -> .)
    LESSTHAN        reduce using rule 116 (empty -> .)
    LESSEQUAL       reduce using rule 116 (empty -> .)
    AND             reduce using rule 116 (empty -> .)
    OR              reduce using rule 116 (empty -> .)
    SEMICOLON       reduce using rule 116 (empty -> .)
    RIGHTP          reduce using rule 116 (empty -> .)
    COMMA           reduce using rule 116 (empty -> .)
    RIGHTSB         reduce using rule 116 (empty -> .)

    exp3                           shift and go to state 134
    empty                          shift and go to state 136

state 96

    (75) operador1 -> operador2 . exp2
    (76) exp2 -> . empty
    (77) exp2 -> . EQUALS saveop operador2 exp2
    (78) exp2 -> . NOTEQUAL saveop operador2 exp2
    (79) exp2 -> . GREATEREQUAL saveop operador2 exp2
    (80) exp2 -> . GREATERTHAN saveop operador2 exp2
    (81) exp2 -> . LESSTHAN saveop operador2 exp2
    (82) exp2 -> . LESSEQUAL saveop operador2 exp2
    (116) empty -> .

    EQUALS          shift and go to state 140
    NOTEQUAL        shift and go to state 137
    GREATEREQUAL    shift and go to state 138
    GREATERTHAN     shift and go to state 142
    LESSTHAN        shift and go to state 141
    LESSEQUAL       shift and go to state 143
    AND             reduce using rule 116 (empty -> .)
    OR              reduce using rule 116 (empty -> .)
    SEMICOLON       reduce using rule 116 (empty -> .)
    RIGHTP          reduce using rule 116 (empty -> .)
    COMMA           reduce using rule 116 (empty -> .)
    RIGHTSB         reduce using rule 116 (empty -> .)

    exp2                           shift and go to state 139
    empty                          shift and go to state 144

state 97

    (99) constante -> TRUE .

    TIMES           reduce using rule 99 (constante -> TRUE .)
    DIVISION        reduce using rule 99 (constante -> TRUE .)
    SUM             reduce using rule 99 (constante -> TRUE .)
    LESS            reduce using rule 99 (constante -> TRUE .)
    EQUALS          reduce using rule 99 (constante -> TRUE .)
    NOTEQUAL        reduce using rule 99 (constante -> TRUE .)
    GREATEREQUAL    reduce using rule 99 (constante -> TRUE .)
    GREATERTHAN     reduce using rule 99 (constante -> TRUE .)
    LESSTHAN        reduce using rule 99 (constante -> TRUE .)
    LESSEQUAL       reduce using rule 99 (constante -> TRUE .)
    AND             reduce using rule 99 (constante -> TRUE .)
    OR              reduce using rule 99 (constante -> TRUE .)
    SEMICOLON       reduce using rule 99 (constante -> TRUE .)
    RIGHTP          reduce using rule 99 (constante -> TRUE .)
    COMMA           reduce using rule 99 (constante -> TRUE .)
    RIGHTSB         reduce using rule 99 (constante -> TRUE .)


state 98

    (87) operador3 -> operador4 . exp4
    (88) exp4 -> . empty
    (89) exp4 -> . TIMES saveop operador4 exp4
    (90) exp4 -> . DIVISION saveop operador4 exp4
    (116) empty -> .

    TIMES           shift and go to state 146
    DIVISION        shift and go to state 145
    SUM             reduce using rule 116 (empty -> .)
    LESS            reduce using rule 116 (empty -> .)
    EQUALS          reduce using rule 116 (empty -> .)
    NOTEQUAL        reduce using rule 116 (empty -> .)
    GREATEREQUAL    reduce using rule 116 (empty -> .)
    GREATERTHAN     reduce using rule 116 (empty -> .)
    LESSTHAN        reduce using rule 116 (empty -> .)
    LESSEQUAL       reduce using rule 116 (empty -> .)
    AND             reduce using rule 116 (empty -> .)
    OR              reduce using rule 116 (empty -> .)
    SEMICOLON       reduce using rule 116 (empty -> .)
    RIGHTP          reduce using rule 116 (empty -> .)
    COMMA           reduce using rule 116 (empty -> .)
    RIGHTSB         reduce using rule 116 (empty -> .)

    empty                          shift and go to state 148
    exp4                           shift and go to state 147

state 99

    (94) operador4 -> LEFTP . expresion RIGHTP
    (71) expresion -> . operador1 exp1
    (75) operador1 -> . operador2 exp2
    (83) operador2 -> . operador3 exp3
    (87) operador3 -> . operador4 exp4
    (92) operador4 -> . ID
    (93) operador4 -> . constante
    (94) operador4 -> . LEFTP expresion RIGHTP
    (95) constante -> . INT_CTE
    (96) constante -> . FLOAT_CTE
    (97) constante -> . CHAR_CTE
    (98) constante -> . STRING_CTE
    (99) constante -> . TRUE
    (100) constante -> . FALSE

    ID              shift and go to state 150
    LEFTP           shift and go to state 99
    INT_CTE         shift and go to state 105
    FLOAT_CTE       shift and go to state 107
    CHAR_CTE        shift and go to state 101
    STRING_CTE      shift and go to state 93
    TRUE            shift and go to state 97
    FALSE           shift and go to state 103

    expresion                      shift and go to state 149
    constante                      shift and go to state 102
    operador1                      shift and go to state 94
    operador3                      shift and go to state 95
    operador2                      shift and go to state 96
    operador4                      shift and go to state 98

state 100

    (69) exp -> llamada .

    COMMA           reduce using rule 69 (exp -> llamada .)
    RIGHTP          reduce using rule 69 (exp -> llamada .)
    RIGHTSB         reduce using rule 69 (exp -> llamada .)
    SEMICOLON       reduce using rule 69 (exp -> llamada .)


state 101

    (97) constante -> CHAR_CTE .

    TIMES           reduce using rule 97 (constante -> CHAR_CTE .)
    DIVISION        reduce using rule 97 (constante -> CHAR_CTE .)
    SUM             reduce using rule 97 (constante -> CHAR_CTE .)
    LESS            reduce using rule 97 (constante -> CHAR_CTE .)
    EQUALS          reduce using rule 97 (constante -> CHAR_CTE .)
    NOTEQUAL        reduce using rule 97 (constante -> CHAR_CTE .)
    GREATEREQUAL    reduce using rule 97 (constante -> CHAR_CTE .)
    GREATERTHAN     reduce using rule 97 (constante -> CHAR_CTE .)
    LESSTHAN        reduce using rule 97 (constante -> CHAR_CTE .)
    LESSEQUAL       reduce using rule 97 (constante -> CHAR_CTE .)
    AND             reduce using rule 97 (constante -> CHAR_CTE .)
    OR              reduce using rule 97 (constante -> CHAR_CTE .)
    SEMICOLON       reduce using rule 97 (constante -> CHAR_CTE .)
    RIGHTP          reduce using rule 97 (constante -> CHAR_CTE .)
    COMMA           reduce using rule 97 (constante -> CHAR_CTE .)
    RIGHTSB         reduce using rule 97 (constante -> CHAR_CTE .)


state 102

    (93) operador4 -> constante .

    TIMES           reduce using rule 93 (operador4 -> constante .)
    DIVISION        reduce using rule 93 (operador4 -> constante .)
    SUM             reduce using rule 93 (operador4 -> constante .)
    LESS            reduce using rule 93 (operador4 -> constante .)
    EQUALS          reduce using rule 93 (operador4 -> constante .)
    NOTEQUAL        reduce using rule 93 (operador4 -> constante .)
    GREATEREQUAL    reduce using rule 93 (operador4 -> constante .)
    GREATERTHAN     reduce using rule 93 (operador4 -> constante .)
    LESSTHAN        reduce using rule 93 (operador4 -> constante .)
    LESSEQUAL       reduce using rule 93 (operador4 -> constante .)
    AND             reduce using rule 93 (operador4 -> constante .)
    OR              reduce using rule 93 (operador4 -> constante .)
    COMMA           reduce using rule 93 (operador4 -> constante .)
    RIGHTP          reduce using rule 93 (operador4 -> constante .)
    SEMICOLON       reduce using rule 93 (operador4 -> constante .)
    RIGHTSB         reduce using rule 93 (operador4 -> constante .)


state 103

    (100) constante -> FALSE .

    TIMES           reduce using rule 100 (constante -> FALSE .)
    DIVISION        reduce using rule 100 (constante -> FALSE .)
    SUM             reduce using rule 100 (constante -> FALSE .)
    LESS            reduce using rule 100 (constante -> FALSE .)
    EQUALS          reduce using rule 100 (constante -> FALSE .)
    NOTEQUAL        reduce using rule 100 (constante -> FALSE .)
    GREATEREQUAL    reduce using rule 100 (constante -> FALSE .)
    GREATERTHAN     reduce using rule 100 (constante -> FALSE .)
    LESSTHAN        reduce using rule 100 (constante -> FALSE .)
    LESSEQUAL       reduce using rule 100 (constante -> FALSE .)
    AND             reduce using rule 100 (constante -> FALSE .)
    OR              reduce using rule 100 (constante -> FALSE .)
    SEMICOLON       reduce using rule 100 (constante -> FALSE .)
    RIGHTP          reduce using rule 100 (constante -> FALSE .)
    COMMA           reduce using rule 100 (constante -> FALSE .)
    RIGHTSB         reduce using rule 100 (constante -> FALSE .)


state 104

    (49) llamada -> ID . llamafun LEFTP args RIGHTP
    (92) operador4 -> ID .
    (50) llamafun -> . empty
    (116) empty -> .

    TIMES           reduce using rule 92 (operador4 -> ID .)
    DIVISION        reduce using rule 92 (operador4 -> ID .)
    SUM             reduce using rule 92 (operador4 -> ID .)
    LESS            reduce using rule 92 (operador4 -> ID .)
    EQUALS          reduce using rule 92 (operador4 -> ID .)
    NOTEQUAL        reduce using rule 92 (operador4 -> ID .)
    GREATEREQUAL    reduce using rule 92 (operador4 -> ID .)
    GREATERTHAN     reduce using rule 92 (operador4 -> ID .)
    LESSTHAN        reduce using rule 92 (operador4 -> ID .)
    LESSEQUAL       reduce using rule 92 (operador4 -> ID .)
    AND             reduce using rule 92 (operador4 -> ID .)
    OR              reduce using rule 92 (operador4 -> ID .)
    COMMA           reduce using rule 92 (operador4 -> ID .)
    RIGHTP          reduce using rule 92 (operador4 -> ID .)
    SEMICOLON       reduce using rule 92 (operador4 -> ID .)
    RIGHTSB         reduce using rule 92 (operador4 -> ID .)
    LEFTP           reduce using rule 116 (empty -> .)

    empty                          shift and go to state 122
    llamafun                       shift and go to state 124

state 105

    (95) constante -> INT_CTE .

    TIMES           reduce using rule 95 (constante -> INT_CTE .)
    DIVISION        reduce using rule 95 (constante -> INT_CTE .)
    SUM             reduce using rule 95 (constante -> INT_CTE .)
    LESS            reduce using rule 95 (constante -> INT_CTE .)
    EQUALS          reduce using rule 95 (constante -> INT_CTE .)
    NOTEQUAL        reduce using rule 95 (constante -> INT_CTE .)
    GREATEREQUAL    reduce using rule 95 (constante -> INT_CTE .)
    GREATERTHAN     reduce using rule 95 (constante -> INT_CTE .)
    LESSTHAN        reduce using rule 95 (constante -> INT_CTE .)
    LESSEQUAL       reduce using rule 95 (constante -> INT_CTE .)
    AND             reduce using rule 95 (constante -> INT_CTE .)
    OR              reduce using rule 95 (constante -> INT_CTE .)
    SEMICOLON       reduce using rule 95 (constante -> INT_CTE .)
    RIGHTP          reduce using rule 95 (constante -> INT_CTE .)
    COMMA           reduce using rule 95 (constante -> INT_CTE .)
    RIGHTSB         reduce using rule 95 (constante -> INT_CTE .)


state 106

    (70) exp -> expresion .

    COMMA           reduce using rule 70 (exp -> expresion .)
    RIGHTP          reduce using rule 70 (exp -> expresion .)
    RIGHTSB         reduce using rule 70 (exp -> expresion .)
    SEMICOLON       reduce using rule 70 (exp -> expresion .)


state 107

    (96) constante -> FLOAT_CTE .

    TIMES           reduce using rule 96 (constante -> FLOAT_CTE .)
    DIVISION        reduce using rule 96 (constante -> FLOAT_CTE .)
    SUM             reduce using rule 96 (constante -> FLOAT_CTE .)
    LESS            reduce using rule 96 (constante -> FLOAT_CTE .)
    EQUALS          reduce using rule 96 (constante -> FLOAT_CTE .)
    NOTEQUAL        reduce using rule 96 (constante -> FLOAT_CTE .)
    GREATEREQUAL    reduce using rule 96 (constante -> FLOAT_CTE .)
    GREATERTHAN     reduce using rule 96 (constante -> FLOAT_CTE .)
    LESSTHAN        reduce using rule 96 (constante -> FLOAT_CTE .)
    LESSEQUAL       reduce using rule 96 (constante -> FLOAT_CTE .)
    AND             reduce using rule 96 (constante -> FLOAT_CTE .)
    OR              reduce using rule 96 (constante -> FLOAT_CTE .)
    SEMICOLON       reduce using rule 96 (constante -> FLOAT_CTE .)
    RIGHTP          reduce using rule 96 (constante -> FLOAT_CTE .)
    COMMA           reduce using rule 96 (constante -> FLOAT_CTE .)
    RIGHTSB         reduce using rule 96 (constante -> FLOAT_CTE .)


state 108

    (46) return -> RETURN exp . SEMICOLON

    SEMICOLON       shift and go to state 151


state 109

    (105) dibujaCuadrado -> DRAW_SQUARE LEFTP . exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON
    (69) exp -> . llamada
    (70) exp -> . expresion
    (49) llamada -> . ID llamafun LEFTP args RIGHTP
    (71) expresion -> . operador1 exp1
    (75) operador1 -> . operador2 exp2
    (83) operador2 -> . operador3 exp3
    (87) operador3 -> . operador4 exp4
    (92) operador4 -> . ID
    (93) operador4 -> . constante
    (94) operador4 -> . LEFTP expresion RIGHTP
    (95) constante -> . INT_CTE
    (96) constante -> . FLOAT_CTE
    (97) constante -> . CHAR_CTE
    (98) constante -> . STRING_CTE
    (99) constante -> . TRUE
    (100) constante -> . FALSE

    ID              shift and go to state 104
    LEFTP           shift and go to state 99
    INT_CTE         shift and go to state 105
    FLOAT_CTE       shift and go to state 107
    CHAR_CTE        shift and go to state 101
    STRING_CTE      shift and go to state 93
    TRUE            shift and go to state 97
    FALSE           shift and go to state 103

    expresion                      shift and go to state 106
    constante                      shift and go to state 102
    llamada                        shift and go to state 100
    exp                            shift and go to state 152
    operador1                      shift and go to state 94
    operador3                      shift and go to state 95
    operador2                      shift and go to state 96
    operador4                      shift and go to state 98

state 110

    (107) dibujaCuadrilatero -> DRAW_QUADRITERAL LEFTP . exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON
    (69) exp -> . llamada
    (70) exp -> . expresion
    (49) llamada -> . ID llamafun LEFTP args RIGHTP
    (71) expresion -> . operador1 exp1
    (75) operador1 -> . operador2 exp2
    (83) operador2 -> . operador3 exp3
    (87) operador3 -> . operador4 exp4
    (92) operador4 -> . ID
    (93) operador4 -> . constante
    (94) operador4 -> . LEFTP expresion RIGHTP
    (95) constante -> . INT_CTE
    (96) constante -> . FLOAT_CTE
    (97) constante -> . CHAR_CTE
    (98) constante -> . STRING_CTE
    (99) constante -> . TRUE
    (100) constante -> . FALSE

    ID              shift and go to state 104
    LEFTP           shift and go to state 99
    INT_CTE         shift and go to state 105
    FLOAT_CTE       shift and go to state 107
    CHAR_CTE        shift and go to state 101
    STRING_CTE      shift and go to state 93
    TRUE            shift and go to state 97
    FALSE           shift and go to state 103

    expresion                      shift and go to state 106
    constante                      shift and go to state 102
    llamada                        shift and go to state 100
    exp                            shift and go to state 153
    operador1                      shift and go to state 94
    operador3                      shift and go to state 95
    operador2                      shift and go to state 96
    operador4                      shift and go to state 98

state 111

    (48) escritura -> PRINT LEFTP . exp RIGHTP SEMICOLON
    (69) exp -> . llamada
    (70) exp -> . expresion
    (49) llamada -> . ID llamafun LEFTP args RIGHTP
    (71) expresion -> . operador1 exp1
    (75) operador1 -> . operador2 exp2
    (83) operador2 -> . operador3 exp3
    (87) operador3 -> . operador4 exp4
    (92) operador4 -> . ID
    (93) operador4 -> . constante
    (94) operador4 -> . LEFTP expresion RIGHTP
    (95) constante -> . INT_CTE
    (96) constante -> . FLOAT_CTE
    (97) constante -> . CHAR_CTE
    (98) constante -> . STRING_CTE
    (99) constante -> . TRUE
    (100) constante -> . FALSE

    ID              shift and go to state 104
    LEFTP           shift and go to state 99
    INT_CTE         shift and go to state 105
    FLOAT_CTE       shift and go to state 107
    CHAR_CTE        shift and go to state 101
    STRING_CTE      shift and go to state 93
    TRUE            shift and go to state 97
    FALSE           shift and go to state 103

    expresion                      shift and go to state 106
    constante                      shift and go to state 102
    llamada                        shift and go to state 100
    exp                            shift and go to state 154
    operador1                      shift and go to state 94
    operador3                      shift and go to state 95
    operador2                      shift and go to state 96
    operador4                      shift and go to state 98

state 112

    (59) ciclo -> WHILE salto_ciclo . LEFTP exp ciclo1 RIGHTP LEFTB bloque ciclo2 RIGHTB

    LEFTP           shift and go to state 155


state 113

    (60) salto_ciclo -> empty .

    LEFTP           reduce using rule 60 (salto_ciclo -> empty .)


state 114

    (104) dibujaTriangulo -> DRAW_TRIANGLE LEFTP . exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON
    (69) exp -> . llamada
    (70) exp -> . expresion
    (49) llamada -> . ID llamafun LEFTP args RIGHTP
    (71) expresion -> . operador1 exp1
    (75) operador1 -> . operador2 exp2
    (83) operador2 -> . operador3 exp3
    (87) operador3 -> . operador4 exp4
    (92) operador4 -> . ID
    (93) operador4 -> . constante
    (94) operador4 -> . LEFTP expresion RIGHTP
    (95) constante -> . INT_CTE
    (96) constante -> . FLOAT_CTE
    (97) constante -> . CHAR_CTE
    (98) constante -> . STRING_CTE
    (99) constante -> . TRUE
    (100) constante -> . FALSE

    ID              shift and go to state 104
    LEFTP           shift and go to state 99
    INT_CTE         shift and go to state 105
    FLOAT_CTE       shift and go to state 107
    CHAR_CTE        shift and go to state 101
    STRING_CTE      shift and go to state 93
    TRUE            shift and go to state 97
    FALSE           shift and go to state 103

    expresion                      shift and go to state 106
    constante                      shift and go to state 102
    llamada                        shift and go to state 100
    exp                            shift and go to state 156
    operador1                      shift and go to state 94
    operador3                      shift and go to state 95
    operador2                      shift and go to state 96
    operador4                      shift and go to state 98

state 115

    (2) goto_main -> VOID MAIN scopemain LEFTP RIGHTP LEFTB declara_var bloque RIGHTB .

    $end            reduce using rule 2 (goto_main -> VOID MAIN scopemain LEFTP RIGHTP LEFTB declara_var bloque RIGHTB .)


state 116

    (25) bloque -> estatuto bloque .

    RIGHTB          reduce using rule 25 (bloque -> estatuto bloque .)


state 117

    (37) estatuto -> llamada SEMICOLON .

    IF              reduce using rule 37 (estatuto -> llamada SEMICOLON .)
    WHILE           reduce using rule 37 (estatuto -> llamada SEMICOLON .)
    RETURN          reduce using rule 37 (estatuto -> llamada SEMICOLON .)
    ID              reduce using rule 37 (estatuto -> llamada SEMICOLON .)
    PRINT           reduce using rule 37 (estatuto -> llamada SEMICOLON .)
    DRAW_DOT        reduce using rule 37 (estatuto -> llamada SEMICOLON .)
    DRAW_LINE       reduce using rule 37 (estatuto -> llamada SEMICOLON .)
    DRAW_CIRCLE     reduce using rule 37 (estatuto -> llamada SEMICOLON .)
    DRAW_TRIANGLE   reduce using rule 37 (estatuto -> llamada SEMICOLON .)
    DRAW_SQUARE     reduce using rule 37 (estatuto -> llamada SEMICOLON .)
    DRAW_RECTANGLE  reduce using rule 37 (estatuto -> llamada SEMICOLON .)
    DRAW_QUADRITERAL reduce using rule 37 (estatuto -> llamada SEMICOLON .)
    RIGHTB          reduce using rule 37 (estatuto -> llamada SEMICOLON .)


state 118

    (102) dibujaLinea -> DRAW_LINE LEFTP . exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON
    (69) exp -> . llamada
    (70) exp -> . expresion
    (49) llamada -> . ID llamafun LEFTP args RIGHTP
    (71) expresion -> . operador1 exp1
    (75) operador1 -> . operador2 exp2
    (83) operador2 -> . operador3 exp3
    (87) operador3 -> . operador4 exp4
    (92) operador4 -> . ID
    (93) operador4 -> . constante
    (94) operador4 -> . LEFTP expresion RIGHTP
    (95) constante -> . INT_CTE
    (96) constante -> . FLOAT_CTE
    (97) constante -> . CHAR_CTE
    (98) constante -> . STRING_CTE
    (99) constante -> . TRUE
    (100) constante -> . FALSE

    ID              shift and go to state 104
    LEFTP           shift and go to state 99
    INT_CTE         shift and go to state 105
    FLOAT_CTE       shift and go to state 107
    CHAR_CTE        shift and go to state 101
    STRING_CTE      shift and go to state 93
    TRUE            shift and go to state 97
    FALSE           shift and go to state 103

    expresion                      shift and go to state 106
    constante                      shift and go to state 102
    llamada                        shift and go to state 100
    exp                            shift and go to state 157
    operador1                      shift and go to state 94
    operador3                      shift and go to state 95
    operador2                      shift and go to state 96
    operador4                      shift and go to state 98

state 119

    (106) dibujaRectangulo -> DRAW_RECTANGLE LEFTP . exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON
    (69) exp -> . llamada
    (70) exp -> . expresion
    (49) llamada -> . ID llamafun LEFTP args RIGHTP
    (71) expresion -> . operador1 exp1
    (75) operador1 -> . operador2 exp2
    (83) operador2 -> . operador3 exp3
    (87) operador3 -> . operador4 exp4
    (92) operador4 -> . ID
    (93) operador4 -> . constante
    (94) operador4 -> . LEFTP expresion RIGHTP
    (95) constante -> . INT_CTE
    (96) constante -> . FLOAT_CTE
    (97) constante -> . CHAR_CTE
    (98) constante -> . STRING_CTE
    (99) constante -> . TRUE
    (100) constante -> . FALSE

    ID              shift and go to state 104
    LEFTP           shift and go to state 99
    INT_CTE         shift and go to state 105
    FLOAT_CTE       shift and go to state 107
    CHAR_CTE        shift and go to state 101
    STRING_CTE      shift and go to state 93
    TRUE            shift and go to state 97
    FALSE           shift and go to state 103

    expresion                      shift and go to state 106
    constante                      shift and go to state 102
    llamada                        shift and go to state 100
    exp                            shift and go to state 158
    operador1                      shift and go to state 94
    operador3                      shift and go to state 95
    operador2                      shift and go to state 96
    operador4                      shift and go to state 98

state 120

    (57) asignacion -> ID LEFTSB . exp RIGHTSB asign
    (69) exp -> . llamada
    (70) exp -> . expresion
    (49) llamada -> . ID llamafun LEFTP args RIGHTP
    (71) expresion -> . operador1 exp1
    (75) operador1 -> . operador2 exp2
    (83) operador2 -> . operador3 exp3
    (87) operador3 -> . operador4 exp4
    (92) operador4 -> . ID
    (93) operador4 -> . constante
    (94) operador4 -> . LEFTP expresion RIGHTP
    (95) constante -> . INT_CTE
    (96) constante -> . FLOAT_CTE
    (97) constante -> . CHAR_CTE
    (98) constante -> . STRING_CTE
    (99) constante -> . TRUE
    (100) constante -> . FALSE

    ID              shift and go to state 104
    LEFTP           shift and go to state 99
    INT_CTE         shift and go to state 105
    FLOAT_CTE       shift and go to state 107
    CHAR_CTE        shift and go to state 101
    STRING_CTE      shift and go to state 93
    TRUE            shift and go to state 97
    FALSE           shift and go to state 103

    expresion                      shift and go to state 106
    constante                      shift and go to state 102
    llamada                        shift and go to state 100
    exp                            shift and go to state 159
    operador1                      shift and go to state 94
    operador3                      shift and go to state 95
    operador2                      shift and go to state 96
    operador4                      shift and go to state 98

state 121

    (47) lectura -> ID ASSIGN . READ LEFTP RIGHTP SEMICOLON
    (58) asign -> ASSIGN . exp SEMICOLON
    (69) exp -> . llamada
    (70) exp -> . expresion
    (49) llamada -> . ID llamafun LEFTP args RIGHTP
    (71) expresion -> . operador1 exp1
    (75) operador1 -> . operador2 exp2
    (83) operador2 -> . operador3 exp3
    (87) operador3 -> . operador4 exp4
    (92) operador4 -> . ID
    (93) operador4 -> . constante
    (94) operador4 -> . LEFTP expresion RIGHTP
    (95) constante -> . INT_CTE
    (96) constante -> . FLOAT_CTE
    (97) constante -> . CHAR_CTE
    (98) constante -> . STRING_CTE
    (99) constante -> . TRUE
    (100) constante -> . FALSE

    READ            shift and go to state 160
    ID              shift and go to state 104
    LEFTP           shift and go to state 99
    INT_CTE         shift and go to state 105
    FLOAT_CTE       shift and go to state 107
    CHAR_CTE        shift and go to state 101
    STRING_CTE      shift and go to state 93
    TRUE            shift and go to state 97
    FALSE           shift and go to state 103

    expresion                      shift and go to state 106
    constante                      shift and go to state 102
    llamada                        shift and go to state 100
    exp                            shift and go to state 161
    operador1                      shift and go to state 94
    operador3                      shift and go to state 95
    operador2                      shift and go to state 96
    operador4                      shift and go to state 98

state 122

    (50) llamafun -> empty .

    LEFTP           reduce using rule 50 (llamafun -> empty .)


state 123

    (56) asignacion -> ID asign .

    IF              reduce using rule 56 (asignacion -> ID asign .)
    WHILE           reduce using rule 56 (asignacion -> ID asign .)
    RETURN          reduce using rule 56 (asignacion -> ID asign .)
    ID              reduce using rule 56 (asignacion -> ID asign .)
    PRINT           reduce using rule 56 (asignacion -> ID asign .)
    DRAW_DOT        reduce using rule 56 (asignacion -> ID asign .)
    DRAW_LINE       reduce using rule 56 (asignacion -> ID asign .)
    DRAW_CIRCLE     reduce using rule 56 (asignacion -> ID asign .)
    DRAW_TRIANGLE   reduce using rule 56 (asignacion -> ID asign .)
    DRAW_SQUARE     reduce using rule 56 (asignacion -> ID asign .)
    DRAW_RECTANGLE  reduce using rule 56 (asignacion -> ID asign .)
    DRAW_QUADRITERAL reduce using rule 56 (asignacion -> ID asign .)
    RIGHTB          reduce using rule 56 (asignacion -> ID asign .)


state 124

    (49) llamada -> ID llamafun . LEFTP args RIGHTP

    LEFTP           shift and go to state 162


state 125

    (63) condicion -> IF LEFTP . condicion1 RIGHTP LEFTB bloque RIGHTB condicion3 else
    (66) condicion1 -> . exp
    (69) exp -> . llamada
    (70) exp -> . expresion
    (49) llamada -> . ID llamafun LEFTP args RIGHTP
    (71) expresion -> . operador1 exp1
    (75) operador1 -> . operador2 exp2
    (83) operador2 -> . operador3 exp3
    (87) operador3 -> . operador4 exp4
    (92) operador4 -> . ID
    (93) operador4 -> . constante
    (94) operador4 -> . LEFTP expresion RIGHTP
    (95) constante -> . INT_CTE
    (96) constante -> . FLOAT_CTE
    (97) constante -> . CHAR_CTE
    (98) constante -> . STRING_CTE
    (99) constante -> . TRUE
    (100) constante -> . FALSE

    ID              shift and go to state 104
    LEFTP           shift and go to state 99
    INT_CTE         shift and go to state 105
    FLOAT_CTE       shift and go to state 107
    CHAR_CTE        shift and go to state 101
    STRING_CTE      shift and go to state 93
    TRUE            shift and go to state 97
    FALSE           shift and go to state 103

    expresion                      shift and go to state 106
    constante                      shift and go to state 102
    llamada                        shift and go to state 100
    operador4                      shift and go to state 98
    condicion1                     shift and go to state 163
    exp                            shift and go to state 164
    operador1                      shift and go to state 94
    operador2                      shift and go to state 96
    operador3                      shift and go to state 95

state 126

    (101) dibujaPunto -> DRAW_DOT LEFTP . exp COMMA exp COMMA color RIGHTP SEMICOLON
    (69) exp -> . llamada
    (70) exp -> . expresion
    (49) llamada -> . ID llamafun LEFTP args RIGHTP
    (71) expresion -> . operador1 exp1
    (75) operador1 -> . operador2 exp2
    (83) operador2 -> . operador3 exp3
    (87) operador3 -> . operador4 exp4
    (92) operador4 -> . ID
    (93) operador4 -> . constante
    (94) operador4 -> . LEFTP expresion RIGHTP
    (95) constante -> . INT_CTE
    (96) constante -> . FLOAT_CTE
    (97) constante -> . CHAR_CTE
    (98) constante -> . STRING_CTE
    (99) constante -> . TRUE
    (100) constante -> . FALSE

    ID              shift and go to state 104
    LEFTP           shift and go to state 99
    INT_CTE         shift and go to state 105
    FLOAT_CTE       shift and go to state 107
    CHAR_CTE        shift and go to state 101
    STRING_CTE      shift and go to state 93
    TRUE            shift and go to state 97
    FALSE           shift and go to state 103

    expresion                      shift and go to state 106
    constante                      shift and go to state 102
    llamada                        shift and go to state 100
    exp                            shift and go to state 165
    operador1                      shift and go to state 94
    operador3                      shift and go to state 95
    operador2                      shift and go to state 96
    operador4                      shift and go to state 98

state 127

    (103) dibujaCirculo -> DRAW_CIRCLE LEFTP . exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON
    (69) exp -> . llamada
    (70) exp -> . expresion
    (49) llamada -> . ID llamafun LEFTP args RIGHTP
    (71) expresion -> . operador1 exp1
    (75) operador1 -> . operador2 exp2
    (83) operador2 -> . operador3 exp3
    (87) operador3 -> . operador4 exp4
    (92) operador4 -> . ID
    (93) operador4 -> . constante
    (94) operador4 -> . LEFTP expresion RIGHTP
    (95) constante -> . INT_CTE
    (96) constante -> . FLOAT_CTE
    (97) constante -> . CHAR_CTE
    (98) constante -> . STRING_CTE
    (99) constante -> . TRUE
    (100) constante -> . FALSE

    ID              shift and go to state 104
    LEFTP           shift and go to state 99
    INT_CTE         shift and go to state 105
    FLOAT_CTE       shift and go to state 107
    CHAR_CTE        shift and go to state 101
    STRING_CTE      shift and go to state 93
    TRUE            shift and go to state 97
    FALSE           shift and go to state 103

    expresion                      shift and go to state 106
    constante                      shift and go to state 102
    llamada                        shift and go to state 100
    exp                            shift and go to state 166
    operador1                      shift and go to state 94
    operador3                      shift and go to state 95
    operador2                      shift and go to state 96
    operador4                      shift and go to state 98

state 128

    (14) metodo -> METHOD tipo_metodo ID inicio_method LEFTP params RIGHTP LEFTB method_vars bloque RIGHTB . end_method
    (16) end_method -> . empty
    (116) empty -> .

    METHOD          reduce using rule 116 (empty -> .)
    VOID            reduce using rule 116 (empty -> .)

    end_method                     shift and go to state 167
    empty                          shift and go to state 168

state 129

    (73) exp1 -> AND . saveop operador1 exp1
    (91) saveop -> . empty
    (116) empty -> .

    ID              reduce using rule 116 (empty -> .)
    LEFTP           reduce using rule 116 (empty -> .)
    INT_CTE         reduce using rule 116 (empty -> .)
    FLOAT_CTE       reduce using rule 116 (empty -> .)
    CHAR_CTE        reduce using rule 116 (empty -> .)
    STRING_CTE      reduce using rule 116 (empty -> .)
    TRUE            reduce using rule 116 (empty -> .)
    FALSE           reduce using rule 116 (empty -> .)

    saveop                         shift and go to state 169
    empty                          shift and go to state 170

state 130

    (71) expresion -> operador1 exp1 .

    COMMA           reduce using rule 71 (expresion -> operador1 exp1 .)
    RIGHTP          reduce using rule 71 (expresion -> operador1 exp1 .)
    SEMICOLON       reduce using rule 71 (expresion -> operador1 exp1 .)
    RIGHTSB         reduce using rule 71 (expresion -> operador1 exp1 .)


state 131

    (74) exp1 -> OR . saveop operador1 exp1
    (91) saveop -> . empty
    (116) empty -> .

    ID              reduce using rule 116 (empty -> .)
    LEFTP           reduce using rule 116 (empty -> .)
    INT_CTE         reduce using rule 116 (empty -> .)
    FLOAT_CTE       reduce using rule 116 (empty -> .)
    CHAR_CTE        reduce using rule 116 (empty -> .)
    STRING_CTE      reduce using rule 116 (empty -> .)
    TRUE            reduce using rule 116 (empty -> .)
    FALSE           reduce using rule 116 (empty -> .)

    saveop                         shift and go to state 171
    empty                          shift and go to state 170

state 132

    (72) exp1 -> empty .

    SEMICOLON       reduce using rule 72 (exp1 -> empty .)
    RIGHTP          reduce using rule 72 (exp1 -> empty .)
    COMMA           reduce using rule 72 (exp1 -> empty .)
    RIGHTSB         reduce using rule 72 (exp1 -> empty .)


state 133

    (86) exp3 -> LESS . saveop operador3 exp3
    (91) saveop -> . empty
    (116) empty -> .

    ID              reduce using rule 116 (empty -> .)
    LEFTP           reduce using rule 116 (empty -> .)
    INT_CTE         reduce using rule 116 (empty -> .)
    FLOAT_CTE       reduce using rule 116 (empty -> .)
    CHAR_CTE        reduce using rule 116 (empty -> .)
    STRING_CTE      reduce using rule 116 (empty -> .)
    TRUE            reduce using rule 116 (empty -> .)
    FALSE           reduce using rule 116 (empty -> .)

    saveop                         shift and go to state 172
    empty                          shift and go to state 170

state 134

    (83) operador2 -> operador3 exp3 .

    EQUALS          reduce using rule 83 (operador2 -> operador3 exp3 .)
    NOTEQUAL        reduce using rule 83 (operador2 -> operador3 exp3 .)
    GREATEREQUAL    reduce using rule 83 (operador2 -> operador3 exp3 .)
    GREATERTHAN     reduce using rule 83 (operador2 -> operador3 exp3 .)
    LESSTHAN        reduce using rule 83 (operador2 -> operador3 exp3 .)
    LESSEQUAL       reduce using rule 83 (operador2 -> operador3 exp3 .)
    AND             reduce using rule 83 (operador2 -> operador3 exp3 .)
    OR              reduce using rule 83 (operador2 -> operador3 exp3 .)
    COMMA           reduce using rule 83 (operador2 -> operador3 exp3 .)
    SEMICOLON       reduce using rule 83 (operador2 -> operador3 exp3 .)
    RIGHTP          reduce using rule 83 (operador2 -> operador3 exp3 .)
    RIGHTSB         reduce using rule 83 (operador2 -> operador3 exp3 .)


state 135

    (85) exp3 -> SUM . saveop operador3 exp3
    (91) saveop -> . empty
    (116) empty -> .

    ID              reduce using rule 116 (empty -> .)
    LEFTP           reduce using rule 116 (empty -> .)
    INT_CTE         reduce using rule 116 (empty -> .)
    FLOAT_CTE       reduce using rule 116 (empty -> .)
    CHAR_CTE        reduce using rule 116 (empty -> .)
    STRING_CTE      reduce using rule 116 (empty -> .)
    TRUE            reduce using rule 116 (empty -> .)
    FALSE           reduce using rule 116 (empty -> .)

    saveop                         shift and go to state 173
    empty                          shift and go to state 170

state 136

    (84) exp3 -> empty .

    EQUALS          reduce using rule 84 (exp3 -> empty .)
    NOTEQUAL        reduce using rule 84 (exp3 -> empty .)
    GREATEREQUAL    reduce using rule 84 (exp3 -> empty .)
    GREATERTHAN     reduce using rule 84 (exp3 -> empty .)
    LESSTHAN        reduce using rule 84 (exp3 -> empty .)
    LESSEQUAL       reduce using rule 84 (exp3 -> empty .)
    AND             reduce using rule 84 (exp3 -> empty .)
    OR              reduce using rule 84 (exp3 -> empty .)
    SEMICOLON       reduce using rule 84 (exp3 -> empty .)
    RIGHTP          reduce using rule 84 (exp3 -> empty .)
    COMMA           reduce using rule 84 (exp3 -> empty .)
    RIGHTSB         reduce using rule 84 (exp3 -> empty .)


state 137

    (78) exp2 -> NOTEQUAL . saveop operador2 exp2
    (91) saveop -> . empty
    (116) empty -> .

    ID              reduce using rule 116 (empty -> .)
    LEFTP           reduce using rule 116 (empty -> .)
    INT_CTE         reduce using rule 116 (empty -> .)
    FLOAT_CTE       reduce using rule 116 (empty -> .)
    CHAR_CTE        reduce using rule 116 (empty -> .)
    STRING_CTE      reduce using rule 116 (empty -> .)
    TRUE            reduce using rule 116 (empty -> .)
    FALSE           reduce using rule 116 (empty -> .)

    saveop                         shift and go to state 174
    empty                          shift and go to state 170

state 138

    (79) exp2 -> GREATEREQUAL . saveop operador2 exp2
    (91) saveop -> . empty
    (116) empty -> .

    ID              reduce using rule 116 (empty -> .)
    LEFTP           reduce using rule 116 (empty -> .)
    INT_CTE         reduce using rule 116 (empty -> .)
    FLOAT_CTE       reduce using rule 116 (empty -> .)
    CHAR_CTE        reduce using rule 116 (empty -> .)
    STRING_CTE      reduce using rule 116 (empty -> .)
    TRUE            reduce using rule 116 (empty -> .)
    FALSE           reduce using rule 116 (empty -> .)

    saveop                         shift and go to state 175
    empty                          shift and go to state 170

state 139

    (75) operador1 -> operador2 exp2 .

    AND             reduce using rule 75 (operador1 -> operador2 exp2 .)
    OR              reduce using rule 75 (operador1 -> operador2 exp2 .)
    COMMA           reduce using rule 75 (operador1 -> operador2 exp2 .)
    SEMICOLON       reduce using rule 75 (operador1 -> operador2 exp2 .)
    RIGHTP          reduce using rule 75 (operador1 -> operador2 exp2 .)
    RIGHTSB         reduce using rule 75 (operador1 -> operador2 exp2 .)


state 140

    (77) exp2 -> EQUALS . saveop operador2 exp2
    (91) saveop -> . empty
    (116) empty -> .

    ID              reduce using rule 116 (empty -> .)
    LEFTP           reduce using rule 116 (empty -> .)
    INT_CTE         reduce using rule 116 (empty -> .)
    FLOAT_CTE       reduce using rule 116 (empty -> .)
    CHAR_CTE        reduce using rule 116 (empty -> .)
    STRING_CTE      reduce using rule 116 (empty -> .)
    TRUE            reduce using rule 116 (empty -> .)
    FALSE           reduce using rule 116 (empty -> .)

    saveop                         shift and go to state 176
    empty                          shift and go to state 170

state 141

    (81) exp2 -> LESSTHAN . saveop operador2 exp2
    (91) saveop -> . empty
    (116) empty -> .

    ID              reduce using rule 116 (empty -> .)
    LEFTP           reduce using rule 116 (empty -> .)
    INT_CTE         reduce using rule 116 (empty -> .)
    FLOAT_CTE       reduce using rule 116 (empty -> .)
    CHAR_CTE        reduce using rule 116 (empty -> .)
    STRING_CTE      reduce using rule 116 (empty -> .)
    TRUE            reduce using rule 116 (empty -> .)
    FALSE           reduce using rule 116 (empty -> .)

    saveop                         shift and go to state 177
    empty                          shift and go to state 170

state 142

    (80) exp2 -> GREATERTHAN . saveop operador2 exp2
    (91) saveop -> . empty
    (116) empty -> .

    ID              reduce using rule 116 (empty -> .)
    LEFTP           reduce using rule 116 (empty -> .)
    INT_CTE         reduce using rule 116 (empty -> .)
    FLOAT_CTE       reduce using rule 116 (empty -> .)
    CHAR_CTE        reduce using rule 116 (empty -> .)
    STRING_CTE      reduce using rule 116 (empty -> .)
    TRUE            reduce using rule 116 (empty -> .)
    FALSE           reduce using rule 116 (empty -> .)

    saveop                         shift and go to state 178
    empty                          shift and go to state 170

state 143

    (82) exp2 -> LESSEQUAL . saveop operador2 exp2
    (91) saveop -> . empty
    (116) empty -> .

    ID              reduce using rule 116 (empty -> .)
    LEFTP           reduce using rule 116 (empty -> .)
    INT_CTE         reduce using rule 116 (empty -> .)
    FLOAT_CTE       reduce using rule 116 (empty -> .)
    CHAR_CTE        reduce using rule 116 (empty -> .)
    STRING_CTE      reduce using rule 116 (empty -> .)
    TRUE            reduce using rule 116 (empty -> .)
    FALSE           reduce using rule 116 (empty -> .)

    saveop                         shift and go to state 179
    empty                          shift and go to state 170

state 144

    (76) exp2 -> empty .

    AND             reduce using rule 76 (exp2 -> empty .)
    OR              reduce using rule 76 (exp2 -> empty .)
    SEMICOLON       reduce using rule 76 (exp2 -> empty .)
    RIGHTP          reduce using rule 76 (exp2 -> empty .)
    COMMA           reduce using rule 76 (exp2 -> empty .)
    RIGHTSB         reduce using rule 76 (exp2 -> empty .)


state 145

    (90) exp4 -> DIVISION . saveop operador4 exp4
    (91) saveop -> . empty
    (116) empty -> .

    ID              reduce using rule 116 (empty -> .)
    LEFTP           reduce using rule 116 (empty -> .)
    INT_CTE         reduce using rule 116 (empty -> .)
    FLOAT_CTE       reduce using rule 116 (empty -> .)
    CHAR_CTE        reduce using rule 116 (empty -> .)
    STRING_CTE      reduce using rule 116 (empty -> .)
    TRUE            reduce using rule 116 (empty -> .)
    FALSE           reduce using rule 116 (empty -> .)

    saveop                         shift and go to state 180
    empty                          shift and go to state 170

state 146

    (89) exp4 -> TIMES . saveop operador4 exp4
    (91) saveop -> . empty
    (116) empty -> .

    ID              reduce using rule 116 (empty -> .)
    LEFTP           reduce using rule 116 (empty -> .)
    INT_CTE         reduce using rule 116 (empty -> .)
    FLOAT_CTE       reduce using rule 116 (empty -> .)
    CHAR_CTE        reduce using rule 116 (empty -> .)
    STRING_CTE      reduce using rule 116 (empty -> .)
    TRUE            reduce using rule 116 (empty -> .)
    FALSE           reduce using rule 116 (empty -> .)

    saveop                         shift and go to state 181
    empty                          shift and go to state 170

state 147

    (87) operador3 -> operador4 exp4 .

    SUM             reduce using rule 87 (operador3 -> operador4 exp4 .)
    LESS            reduce using rule 87 (operador3 -> operador4 exp4 .)
    EQUALS          reduce using rule 87 (operador3 -> operador4 exp4 .)
    NOTEQUAL        reduce using rule 87 (operador3 -> operador4 exp4 .)
    GREATEREQUAL    reduce using rule 87 (operador3 -> operador4 exp4 .)
    GREATERTHAN     reduce using rule 87 (operador3 -> operador4 exp4 .)
    LESSTHAN        reduce using rule 87 (operador3 -> operador4 exp4 .)
    LESSEQUAL       reduce using rule 87 (operador3 -> operador4 exp4 .)
    AND             reduce using rule 87 (operador3 -> operador4 exp4 .)
    OR              reduce using rule 87 (operador3 -> operador4 exp4 .)
    SEMICOLON       reduce using rule 87 (operador3 -> operador4 exp4 .)
    COMMA           reduce using rule 87 (operador3 -> operador4 exp4 .)
    RIGHTP          reduce using rule 87 (operador3 -> operador4 exp4 .)
    RIGHTSB         reduce using rule 87 (operador3 -> operador4 exp4 .)


state 148

    (88) exp4 -> empty .

    SUM             reduce using rule 88 (exp4 -> empty .)
    LESS            reduce using rule 88 (exp4 -> empty .)
    EQUALS          reduce using rule 88 (exp4 -> empty .)
    NOTEQUAL        reduce using rule 88 (exp4 -> empty .)
    GREATEREQUAL    reduce using rule 88 (exp4 -> empty .)
    GREATERTHAN     reduce using rule 88 (exp4 -> empty .)
    LESSTHAN        reduce using rule 88 (exp4 -> empty .)
    LESSEQUAL       reduce using rule 88 (exp4 -> empty .)
    AND             reduce using rule 88 (exp4 -> empty .)
    OR              reduce using rule 88 (exp4 -> empty .)
    SEMICOLON       reduce using rule 88 (exp4 -> empty .)
    RIGHTP          reduce using rule 88 (exp4 -> empty .)
    COMMA           reduce using rule 88 (exp4 -> empty .)
    RIGHTSB         reduce using rule 88 (exp4 -> empty .)


state 149

    (94) operador4 -> LEFTP expresion . RIGHTP

    RIGHTP          shift and go to state 182


state 150

    (92) operador4 -> ID .

    TIMES           reduce using rule 92 (operador4 -> ID .)
    DIVISION        reduce using rule 92 (operador4 -> ID .)
    SUM             reduce using rule 92 (operador4 -> ID .)
    LESS            reduce using rule 92 (operador4 -> ID .)
    EQUALS          reduce using rule 92 (operador4 -> ID .)
    NOTEQUAL        reduce using rule 92 (operador4 -> ID .)
    GREATEREQUAL    reduce using rule 92 (operador4 -> ID .)
    GREATERTHAN     reduce using rule 92 (operador4 -> ID .)
    LESSTHAN        reduce using rule 92 (operador4 -> ID .)
    LESSEQUAL       reduce using rule 92 (operador4 -> ID .)
    AND             reduce using rule 92 (operador4 -> ID .)
    OR              reduce using rule 92 (operador4 -> ID .)
    SEMICOLON       reduce using rule 92 (operador4 -> ID .)
    RIGHTP          reduce using rule 92 (operador4 -> ID .)
    COMMA           reduce using rule 92 (operador4 -> ID .)
    RIGHTSB         reduce using rule 92 (operador4 -> ID .)


state 151

    (46) return -> RETURN exp SEMICOLON .

    IF              reduce using rule 46 (return -> RETURN exp SEMICOLON .)
    WHILE           reduce using rule 46 (return -> RETURN exp SEMICOLON .)
    RETURN          reduce using rule 46 (return -> RETURN exp SEMICOLON .)
    ID              reduce using rule 46 (return -> RETURN exp SEMICOLON .)
    PRINT           reduce using rule 46 (return -> RETURN exp SEMICOLON .)
    DRAW_DOT        reduce using rule 46 (return -> RETURN exp SEMICOLON .)
    DRAW_LINE       reduce using rule 46 (return -> RETURN exp SEMICOLON .)
    DRAW_CIRCLE     reduce using rule 46 (return -> RETURN exp SEMICOLON .)
    DRAW_TRIANGLE   reduce using rule 46 (return -> RETURN exp SEMICOLON .)
    DRAW_SQUARE     reduce using rule 46 (return -> RETURN exp SEMICOLON .)
    DRAW_RECTANGLE  reduce using rule 46 (return -> RETURN exp SEMICOLON .)
    DRAW_QUADRITERAL reduce using rule 46 (return -> RETURN exp SEMICOLON .)
    RIGHTB          reduce using rule 46 (return -> RETURN exp SEMICOLON .)


state 152

    (105) dibujaCuadrado -> DRAW_SQUARE LEFTP exp . COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON

    COMMA           shift and go to state 183


state 153

    (107) dibujaCuadrilatero -> DRAW_QUADRITERAL LEFTP exp . COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON

    COMMA           shift and go to state 184


state 154

    (48) escritura -> PRINT LEFTP exp . RIGHTP SEMICOLON

    RIGHTP          shift and go to state 185


state 155

    (59) ciclo -> WHILE salto_ciclo LEFTP . exp ciclo1 RIGHTP LEFTB bloque ciclo2 RIGHTB
    (69) exp -> . llamada
    (70) exp -> . expresion
    (49) llamada -> . ID llamafun LEFTP args RIGHTP
    (71) expresion -> . operador1 exp1
    (75) operador1 -> . operador2 exp2
    (83) operador2 -> . operador3 exp3
    (87) operador3 -> . operador4 exp4
    (92) operador4 -> . ID
    (93) operador4 -> . constante
    (94) operador4 -> . LEFTP expresion RIGHTP
    (95) constante -> . INT_CTE
    (96) constante -> . FLOAT_CTE
    (97) constante -> . CHAR_CTE
    (98) constante -> . STRING_CTE
    (99) constante -> . TRUE
    (100) constante -> . FALSE

    ID              shift and go to state 104
    LEFTP           shift and go to state 99
    INT_CTE         shift and go to state 105
    FLOAT_CTE       shift and go to state 107
    CHAR_CTE        shift and go to state 101
    STRING_CTE      shift and go to state 93
    TRUE            shift and go to state 97
    FALSE           shift and go to state 103

    expresion                      shift and go to state 106
    constante                      shift and go to state 102
    llamada                        shift and go to state 100
    operador4                      shift and go to state 98
    exp                            shift and go to state 186
    operador1                      shift and go to state 94
    operador2                      shift and go to state 96
    operador3                      shift and go to state 95

state 156

    (104) dibujaTriangulo -> DRAW_TRIANGLE LEFTP exp . COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON

    COMMA           shift and go to state 187


state 157

    (102) dibujaLinea -> DRAW_LINE LEFTP exp . COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON

    COMMA           shift and go to state 188


state 158

    (106) dibujaRectangulo -> DRAW_RECTANGLE LEFTP exp . COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON

    COMMA           shift and go to state 189


state 159

    (57) asignacion -> ID LEFTSB exp . RIGHTSB asign

    RIGHTSB         shift and go to state 190


state 160

    (47) lectura -> ID ASSIGN READ . LEFTP RIGHTP SEMICOLON

    LEFTP           shift and go to state 191


state 161

    (58) asign -> ASSIGN exp . SEMICOLON

    SEMICOLON       shift and go to state 192


state 162

    (49) llamada -> ID llamafun LEFTP . args RIGHTP
    (51) args -> . exp param listargs
    (52) args -> . empty
    (69) exp -> . llamada
    (70) exp -> . expresion
    (116) empty -> .
    (49) llamada -> . ID llamafun LEFTP args RIGHTP
    (71) expresion -> . operador1 exp1
    (75) operador1 -> . operador2 exp2
    (83) operador2 -> . operador3 exp3
    (87) operador3 -> . operador4 exp4
    (92) operador4 -> . ID
    (93) operador4 -> . constante
    (94) operador4 -> . LEFTP expresion RIGHTP
    (95) constante -> . INT_CTE
    (96) constante -> . FLOAT_CTE
    (97) constante -> . CHAR_CTE
    (98) constante -> . STRING_CTE
    (99) constante -> . TRUE
    (100) constante -> . FALSE

    RIGHTP          reduce using rule 116 (empty -> .)
    ID              shift and go to state 104
    LEFTP           shift and go to state 99
    INT_CTE         shift and go to state 105
    FLOAT_CTE       shift and go to state 107
    CHAR_CTE        shift and go to state 101
    STRING_CTE      shift and go to state 93
    TRUE            shift and go to state 97
    FALSE           shift and go to state 103

    expresion                      shift and go to state 106
    constante                      shift and go to state 102
    args                           shift and go to state 194
    llamada                        shift and go to state 100
    exp                            shift and go to state 195
    operador1                      shift and go to state 94
    operador3                      shift and go to state 95
    operador2                      shift and go to state 96
    operador4                      shift and go to state 98
    empty                          shift and go to state 193

state 163

    (63) condicion -> IF LEFTP condicion1 . RIGHTP LEFTB bloque RIGHTB condicion3 else

    RIGHTP          shift and go to state 196


state 164

    (66) condicion1 -> exp .

    RIGHTP          reduce using rule 66 (condicion1 -> exp .)


state 165

    (101) dibujaPunto -> DRAW_DOT LEFTP exp . COMMA exp COMMA color RIGHTP SEMICOLON

    COMMA           shift and go to state 197


state 166

    (103) dibujaCirculo -> DRAW_CIRCLE LEFTP exp . COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON

    COMMA           shift and go to state 198


state 167

    (14) metodo -> METHOD tipo_metodo ID inicio_method LEFTP params RIGHTP LEFTB method_vars bloque RIGHTB end_method .

    METHOD          reduce using rule 14 (metodo -> METHOD tipo_metodo ID inicio_method LEFTP params RIGHTP LEFTB method_vars bloque RIGHTB end_method .)
    VOID            reduce using rule 14 (metodo -> METHOD tipo_metodo ID inicio_method LEFTP params RIGHTP LEFTB method_vars bloque RIGHTB end_method .)


state 168

    (16) end_method -> empty .

    METHOD          reduce using rule 16 (end_method -> empty .)
    VOID            reduce using rule 16 (end_method -> empty .)


state 169

    (73) exp1 -> AND saveop . operador1 exp1
    (75) operador1 -> . operador2 exp2
    (83) operador2 -> . operador3 exp3
    (87) operador3 -> . operador4 exp4
    (92) operador4 -> . ID
    (93) operador4 -> . constante
    (94) operador4 -> . LEFTP expresion RIGHTP
    (95) constante -> . INT_CTE
    (96) constante -> . FLOAT_CTE
    (97) constante -> . CHAR_CTE
    (98) constante -> . STRING_CTE
    (99) constante -> . TRUE
    (100) constante -> . FALSE

    ID              shift and go to state 150
    LEFTP           shift and go to state 99
    INT_CTE         shift and go to state 105
    FLOAT_CTE       shift and go to state 107
    CHAR_CTE        shift and go to state 101
    STRING_CTE      shift and go to state 93
    TRUE            shift and go to state 97
    FALSE           shift and go to state 103

    constante                      shift and go to state 102
    operador1                      shift and go to state 199
    operador3                      shift and go to state 95
    operador2                      shift and go to state 96
    operador4                      shift and go to state 98

state 170

    (91) saveop -> empty .

    ID              reduce using rule 91 (saveop -> empty .)
    LEFTP           reduce using rule 91 (saveop -> empty .)
    INT_CTE         reduce using rule 91 (saveop -> empty .)
    FLOAT_CTE       reduce using rule 91 (saveop -> empty .)
    CHAR_CTE        reduce using rule 91 (saveop -> empty .)
    STRING_CTE      reduce using rule 91 (saveop -> empty .)
    TRUE            reduce using rule 91 (saveop -> empty .)
    FALSE           reduce using rule 91 (saveop -> empty .)


state 171

    (74) exp1 -> OR saveop . operador1 exp1
    (75) operador1 -> . operador2 exp2
    (83) operador2 -> . operador3 exp3
    (87) operador3 -> . operador4 exp4
    (92) operador4 -> . ID
    (93) operador4 -> . constante
    (94) operador4 -> . LEFTP expresion RIGHTP
    (95) constante -> . INT_CTE
    (96) constante -> . FLOAT_CTE
    (97) constante -> . CHAR_CTE
    (98) constante -> . STRING_CTE
    (99) constante -> . TRUE
    (100) constante -> . FALSE

    ID              shift and go to state 150
    LEFTP           shift and go to state 99
    INT_CTE         shift and go to state 105
    FLOAT_CTE       shift and go to state 107
    CHAR_CTE        shift and go to state 101
    STRING_CTE      shift and go to state 93
    TRUE            shift and go to state 97
    FALSE           shift and go to state 103

    constante                      shift and go to state 102
    operador1                      shift and go to state 200
    operador3                      shift and go to state 95
    operador2                      shift and go to state 96
    operador4                      shift and go to state 98

state 172

    (86) exp3 -> LESS saveop . operador3 exp3
    (87) operador3 -> . operador4 exp4
    (92) operador4 -> . ID
    (93) operador4 -> . constante
    (94) operador4 -> . LEFTP expresion RIGHTP
    (95) constante -> . INT_CTE
    (96) constante -> . FLOAT_CTE
    (97) constante -> . CHAR_CTE
    (98) constante -> . STRING_CTE
    (99) constante -> . TRUE
    (100) constante -> . FALSE

    ID              shift and go to state 150
    LEFTP           shift and go to state 99
    INT_CTE         shift and go to state 105
    FLOAT_CTE       shift and go to state 107
    CHAR_CTE        shift and go to state 101
    STRING_CTE      shift and go to state 93
    TRUE            shift and go to state 97
    FALSE           shift and go to state 103

    constante                      shift and go to state 102
    operador3                      shift and go to state 201
    operador4                      shift and go to state 98

state 173

    (85) exp3 -> SUM saveop . operador3 exp3
    (87) operador3 -> . operador4 exp4
    (92) operador4 -> . ID
    (93) operador4 -> . constante
    (94) operador4 -> . LEFTP expresion RIGHTP
    (95) constante -> . INT_CTE
    (96) constante -> . FLOAT_CTE
    (97) constante -> . CHAR_CTE
    (98) constante -> . STRING_CTE
    (99) constante -> . TRUE
    (100) constante -> . FALSE

    ID              shift and go to state 150
    LEFTP           shift and go to state 99
    INT_CTE         shift and go to state 105
    FLOAT_CTE       shift and go to state 107
    CHAR_CTE        shift and go to state 101
    STRING_CTE      shift and go to state 93
    TRUE            shift and go to state 97
    FALSE           shift and go to state 103

    constante                      shift and go to state 102
    operador3                      shift and go to state 202
    operador4                      shift and go to state 98

state 174

    (78) exp2 -> NOTEQUAL saveop . operador2 exp2
    (83) operador2 -> . operador3 exp3
    (87) operador3 -> . operador4 exp4
    (92) operador4 -> . ID
    (93) operador4 -> . constante
    (94) operador4 -> . LEFTP expresion RIGHTP
    (95) constante -> . INT_CTE
    (96) constante -> . FLOAT_CTE
    (97) constante -> . CHAR_CTE
    (98) constante -> . STRING_CTE
    (99) constante -> . TRUE
    (100) constante -> . FALSE

    ID              shift and go to state 150
    LEFTP           shift and go to state 99
    INT_CTE         shift and go to state 105
    FLOAT_CTE       shift and go to state 107
    CHAR_CTE        shift and go to state 101
    STRING_CTE      shift and go to state 93
    TRUE            shift and go to state 97
    FALSE           shift and go to state 103

    constante                      shift and go to state 102
    operador3                      shift and go to state 95
    operador2                      shift and go to state 203
    operador4                      shift and go to state 98

state 175

    (79) exp2 -> GREATEREQUAL saveop . operador2 exp2
    (83) operador2 -> . operador3 exp3
    (87) operador3 -> . operador4 exp4
    (92) operador4 -> . ID
    (93) operador4 -> . constante
    (94) operador4 -> . LEFTP expresion RIGHTP
    (95) constante -> . INT_CTE
    (96) constante -> . FLOAT_CTE
    (97) constante -> . CHAR_CTE
    (98) constante -> . STRING_CTE
    (99) constante -> . TRUE
    (100) constante -> . FALSE

    ID              shift and go to state 150
    LEFTP           shift and go to state 99
    INT_CTE         shift and go to state 105
    FLOAT_CTE       shift and go to state 107
    CHAR_CTE        shift and go to state 101
    STRING_CTE      shift and go to state 93
    TRUE            shift and go to state 97
    FALSE           shift and go to state 103

    constante                      shift and go to state 102
    operador3                      shift and go to state 95
    operador2                      shift and go to state 204
    operador4                      shift and go to state 98

state 176

    (77) exp2 -> EQUALS saveop . operador2 exp2
    (83) operador2 -> . operador3 exp3
    (87) operador3 -> . operador4 exp4
    (92) operador4 -> . ID
    (93) operador4 -> . constante
    (94) operador4 -> . LEFTP expresion RIGHTP
    (95) constante -> . INT_CTE
    (96) constante -> . FLOAT_CTE
    (97) constante -> . CHAR_CTE
    (98) constante -> . STRING_CTE
    (99) constante -> . TRUE
    (100) constante -> . FALSE

    ID              shift and go to state 150
    LEFTP           shift and go to state 99
    INT_CTE         shift and go to state 105
    FLOAT_CTE       shift and go to state 107
    CHAR_CTE        shift and go to state 101
    STRING_CTE      shift and go to state 93
    TRUE            shift and go to state 97
    FALSE           shift and go to state 103

    constante                      shift and go to state 102
    operador3                      shift and go to state 95
    operador2                      shift and go to state 205
    operador4                      shift and go to state 98

state 177

    (81) exp2 -> LESSTHAN saveop . operador2 exp2
    (83) operador2 -> . operador3 exp3
    (87) operador3 -> . operador4 exp4
    (92) operador4 -> . ID
    (93) operador4 -> . constante
    (94) operador4 -> . LEFTP expresion RIGHTP
    (95) constante -> . INT_CTE
    (96) constante -> . FLOAT_CTE
    (97) constante -> . CHAR_CTE
    (98) constante -> . STRING_CTE
    (99) constante -> . TRUE
    (100) constante -> . FALSE

    ID              shift and go to state 150
    LEFTP           shift and go to state 99
    INT_CTE         shift and go to state 105
    FLOAT_CTE       shift and go to state 107
    CHAR_CTE        shift and go to state 101
    STRING_CTE      shift and go to state 93
    TRUE            shift and go to state 97
    FALSE           shift and go to state 103

    constante                      shift and go to state 102
    operador3                      shift and go to state 95
    operador2                      shift and go to state 206
    operador4                      shift and go to state 98

state 178

    (80) exp2 -> GREATERTHAN saveop . operador2 exp2
    (83) operador2 -> . operador3 exp3
    (87) operador3 -> . operador4 exp4
    (92) operador4 -> . ID
    (93) operador4 -> . constante
    (94) operador4 -> . LEFTP expresion RIGHTP
    (95) constante -> . INT_CTE
    (96) constante -> . FLOAT_CTE
    (97) constante -> . CHAR_CTE
    (98) constante -> . STRING_CTE
    (99) constante -> . TRUE
    (100) constante -> . FALSE

    ID              shift and go to state 150
    LEFTP           shift and go to state 99
    INT_CTE         shift and go to state 105
    FLOAT_CTE       shift and go to state 107
    CHAR_CTE        shift and go to state 101
    STRING_CTE      shift and go to state 93
    TRUE            shift and go to state 97
    FALSE           shift and go to state 103

    constante                      shift and go to state 102
    operador3                      shift and go to state 95
    operador2                      shift and go to state 207
    operador4                      shift and go to state 98

state 179

    (82) exp2 -> LESSEQUAL saveop . operador2 exp2
    (83) operador2 -> . operador3 exp3
    (87) operador3 -> . operador4 exp4
    (92) operador4 -> . ID
    (93) operador4 -> . constante
    (94) operador4 -> . LEFTP expresion RIGHTP
    (95) constante -> . INT_CTE
    (96) constante -> . FLOAT_CTE
    (97) constante -> . CHAR_CTE
    (98) constante -> . STRING_CTE
    (99) constante -> . TRUE
    (100) constante -> . FALSE

    ID              shift and go to state 150
    LEFTP           shift and go to state 99
    INT_CTE         shift and go to state 105
    FLOAT_CTE       shift and go to state 107
    CHAR_CTE        shift and go to state 101
    STRING_CTE      shift and go to state 93
    TRUE            shift and go to state 97
    FALSE           shift and go to state 103

    constante                      shift and go to state 102
    operador3                      shift and go to state 95
    operador2                      shift and go to state 208
    operador4                      shift and go to state 98

state 180

    (90) exp4 -> DIVISION saveop . operador4 exp4
    (92) operador4 -> . ID
    (93) operador4 -> . constante
    (94) operador4 -> . LEFTP expresion RIGHTP
    (95) constante -> . INT_CTE
    (96) constante -> . FLOAT_CTE
    (97) constante -> . CHAR_CTE
    (98) constante -> . STRING_CTE
    (99) constante -> . TRUE
    (100) constante -> . FALSE

    ID              shift and go to state 150
    LEFTP           shift and go to state 99
    INT_CTE         shift and go to state 105
    FLOAT_CTE       shift and go to state 107
    CHAR_CTE        shift and go to state 101
    STRING_CTE      shift and go to state 93
    TRUE            shift and go to state 97
    FALSE           shift and go to state 103

    constante                      shift and go to state 102
    operador4                      shift and go to state 209

state 181

    (89) exp4 -> TIMES saveop . operador4 exp4
    (92) operador4 -> . ID
    (93) operador4 -> . constante
    (94) operador4 -> . LEFTP expresion RIGHTP
    (95) constante -> . INT_CTE
    (96) constante -> . FLOAT_CTE
    (97) constante -> . CHAR_CTE
    (98) constante -> . STRING_CTE
    (99) constante -> . TRUE
    (100) constante -> . FALSE

    ID              shift and go to state 150
    LEFTP           shift and go to state 99
    INT_CTE         shift and go to state 105
    FLOAT_CTE       shift and go to state 107
    CHAR_CTE        shift and go to state 101
    STRING_CTE      shift and go to state 93
    TRUE            shift and go to state 97
    FALSE           shift and go to state 103

    constante                      shift and go to state 102
    operador4                      shift and go to state 210

state 182

    (94) operador4 -> LEFTP expresion RIGHTP .

    TIMES           reduce using rule 94 (operador4 -> LEFTP expresion RIGHTP .)
    DIVISION        reduce using rule 94 (operador4 -> LEFTP expresion RIGHTP .)
    SUM             reduce using rule 94 (operador4 -> LEFTP expresion RIGHTP .)
    LESS            reduce using rule 94 (operador4 -> LEFTP expresion RIGHTP .)
    EQUALS          reduce using rule 94 (operador4 -> LEFTP expresion RIGHTP .)
    NOTEQUAL        reduce using rule 94 (operador4 -> LEFTP expresion RIGHTP .)
    GREATEREQUAL    reduce using rule 94 (operador4 -> LEFTP expresion RIGHTP .)
    GREATERTHAN     reduce using rule 94 (operador4 -> LEFTP expresion RIGHTP .)
    LESSTHAN        reduce using rule 94 (operador4 -> LEFTP expresion RIGHTP .)
    LESSEQUAL       reduce using rule 94 (operador4 -> LEFTP expresion RIGHTP .)
    AND             reduce using rule 94 (operador4 -> LEFTP expresion RIGHTP .)
    OR              reduce using rule 94 (operador4 -> LEFTP expresion RIGHTP .)
    COMMA           reduce using rule 94 (operador4 -> LEFTP expresion RIGHTP .)
    RIGHTP          reduce using rule 94 (operador4 -> LEFTP expresion RIGHTP .)
    SEMICOLON       reduce using rule 94 (operador4 -> LEFTP expresion RIGHTP .)
    RIGHTSB         reduce using rule 94 (operador4 -> LEFTP expresion RIGHTP .)


state 183

    (105) dibujaCuadrado -> DRAW_SQUARE LEFTP exp COMMA . exp COMMA exp COMMA color RIGHTP SEMICOLON
    (69) exp -> . llamada
    (70) exp -> . expresion
    (49) llamada -> . ID llamafun LEFTP args RIGHTP
    (71) expresion -> . operador1 exp1
    (75) operador1 -> . operador2 exp2
    (83) operador2 -> . operador3 exp3
    (87) operador3 -> . operador4 exp4
    (92) operador4 -> . ID
    (93) operador4 -> . constante
    (94) operador4 -> . LEFTP expresion RIGHTP
    (95) constante -> . INT_CTE
    (96) constante -> . FLOAT_CTE
    (97) constante -> . CHAR_CTE
    (98) constante -> . STRING_CTE
    (99) constante -> . TRUE
    (100) constante -> . FALSE

    ID              shift and go to state 104
    LEFTP           shift and go to state 99
    INT_CTE         shift and go to state 105
    FLOAT_CTE       shift and go to state 107
    CHAR_CTE        shift and go to state 101
    STRING_CTE      shift and go to state 93
    TRUE            shift and go to state 97
    FALSE           shift and go to state 103

    expresion                      shift and go to state 106
    constante                      shift and go to state 102
    llamada                        shift and go to state 100
    exp                            shift and go to state 211
    operador1                      shift and go to state 94
    operador3                      shift and go to state 95
    operador2                      shift and go to state 96
    operador4                      shift and go to state 98

state 184

    (107) dibujaCuadrilatero -> DRAW_QUADRITERAL LEFTP exp COMMA . exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON
    (69) exp -> . llamada
    (70) exp -> . expresion
    (49) llamada -> . ID llamafun LEFTP args RIGHTP
    (71) expresion -> . operador1 exp1
    (75) operador1 -> . operador2 exp2
    (83) operador2 -> . operador3 exp3
    (87) operador3 -> . operador4 exp4
    (92) operador4 -> . ID
    (93) operador4 -> . constante
    (94) operador4 -> . LEFTP expresion RIGHTP
    (95) constante -> . INT_CTE
    (96) constante -> . FLOAT_CTE
    (97) constante -> . CHAR_CTE
    (98) constante -> . STRING_CTE
    (99) constante -> . TRUE
    (100) constante -> . FALSE

    ID              shift and go to state 104
    LEFTP           shift and go to state 99
    INT_CTE         shift and go to state 105
    FLOAT_CTE       shift and go to state 107
    CHAR_CTE        shift and go to state 101
    STRING_CTE      shift and go to state 93
    TRUE            shift and go to state 97
    FALSE           shift and go to state 103

    expresion                      shift and go to state 106
    constante                      shift and go to state 102
    llamada                        shift and go to state 100
    exp                            shift and go to state 212
    operador1                      shift and go to state 94
    operador3                      shift and go to state 95
    operador2                      shift and go to state 96
    operador4                      shift and go to state 98

state 185

    (48) escritura -> PRINT LEFTP exp RIGHTP . SEMICOLON

    SEMICOLON       shift and go to state 213


state 186

    (59) ciclo -> WHILE salto_ciclo LEFTP exp . ciclo1 RIGHTP LEFTB bloque ciclo2 RIGHTB
    (61) ciclo1 -> . empty
    (116) empty -> .

    RIGHTP          reduce using rule 116 (empty -> .)

    ciclo1                         shift and go to state 214
    empty                          shift and go to state 215

state 187

    (104) dibujaTriangulo -> DRAW_TRIANGLE LEFTP exp COMMA . exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON
    (69) exp -> . llamada
    (70) exp -> . expresion
    (49) llamada -> . ID llamafun LEFTP args RIGHTP
    (71) expresion -> . operador1 exp1
    (75) operador1 -> . operador2 exp2
    (83) operador2 -> . operador3 exp3
    (87) operador3 -> . operador4 exp4
    (92) operador4 -> . ID
    (93) operador4 -> . constante
    (94) operador4 -> . LEFTP expresion RIGHTP
    (95) constante -> . INT_CTE
    (96) constante -> . FLOAT_CTE
    (97) constante -> . CHAR_CTE
    (98) constante -> . STRING_CTE
    (99) constante -> . TRUE
    (100) constante -> . FALSE

    ID              shift and go to state 104
    LEFTP           shift and go to state 99
    INT_CTE         shift and go to state 105
    FLOAT_CTE       shift and go to state 107
    CHAR_CTE        shift and go to state 101
    STRING_CTE      shift and go to state 93
    TRUE            shift and go to state 97
    FALSE           shift and go to state 103

    expresion                      shift and go to state 106
    constante                      shift and go to state 102
    llamada                        shift and go to state 100
    exp                            shift and go to state 216
    operador1                      shift and go to state 94
    operador3                      shift and go to state 95
    operador2                      shift and go to state 96
    operador4                      shift and go to state 98

state 188

    (102) dibujaLinea -> DRAW_LINE LEFTP exp COMMA . exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON
    (69) exp -> . llamada
    (70) exp -> . expresion
    (49) llamada -> . ID llamafun LEFTP args RIGHTP
    (71) expresion -> . operador1 exp1
    (75) operador1 -> . operador2 exp2
    (83) operador2 -> . operador3 exp3
    (87) operador3 -> . operador4 exp4
    (92) operador4 -> . ID
    (93) operador4 -> . constante
    (94) operador4 -> . LEFTP expresion RIGHTP
    (95) constante -> . INT_CTE
    (96) constante -> . FLOAT_CTE
    (97) constante -> . CHAR_CTE
    (98) constante -> . STRING_CTE
    (99) constante -> . TRUE
    (100) constante -> . FALSE

    ID              shift and go to state 104
    LEFTP           shift and go to state 99
    INT_CTE         shift and go to state 105
    FLOAT_CTE       shift and go to state 107
    CHAR_CTE        shift and go to state 101
    STRING_CTE      shift and go to state 93
    TRUE            shift and go to state 97
    FALSE           shift and go to state 103

    expresion                      shift and go to state 106
    constante                      shift and go to state 102
    llamada                        shift and go to state 100
    exp                            shift and go to state 217
    operador1                      shift and go to state 94
    operador3                      shift and go to state 95
    operador2                      shift and go to state 96
    operador4                      shift and go to state 98

state 189

    (106) dibujaRectangulo -> DRAW_RECTANGLE LEFTP exp COMMA . exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON
    (69) exp -> . llamada
    (70) exp -> . expresion
    (49) llamada -> . ID llamafun LEFTP args RIGHTP
    (71) expresion -> . operador1 exp1
    (75) operador1 -> . operador2 exp2
    (83) operador2 -> . operador3 exp3
    (87) operador3 -> . operador4 exp4
    (92) operador4 -> . ID
    (93) operador4 -> . constante
    (94) operador4 -> . LEFTP expresion RIGHTP
    (95) constante -> . INT_CTE
    (96) constante -> . FLOAT_CTE
    (97) constante -> . CHAR_CTE
    (98) constante -> . STRING_CTE
    (99) constante -> . TRUE
    (100) constante -> . FALSE

    ID              shift and go to state 104
    LEFTP           shift and go to state 99
    INT_CTE         shift and go to state 105
    FLOAT_CTE       shift and go to state 107
    CHAR_CTE        shift and go to state 101
    STRING_CTE      shift and go to state 93
    TRUE            shift and go to state 97
    FALSE           shift and go to state 103

    expresion                      shift and go to state 106
    constante                      shift and go to state 102
    llamada                        shift and go to state 100
    exp                            shift and go to state 218
    operador1                      shift and go to state 94
    operador3                      shift and go to state 95
    operador2                      shift and go to state 96
    operador4                      shift and go to state 98

state 190

    (57) asignacion -> ID LEFTSB exp RIGHTSB . asign
    (58) asign -> . ASSIGN exp SEMICOLON

    ASSIGN          shift and go to state 220

    asign                          shift and go to state 219

state 191

    (47) lectura -> ID ASSIGN READ LEFTP . RIGHTP SEMICOLON

    RIGHTP          shift and go to state 221


state 192

    (58) asign -> ASSIGN exp SEMICOLON .

    IF              reduce using rule 58 (asign -> ASSIGN exp SEMICOLON .)
    WHILE           reduce using rule 58 (asign -> ASSIGN exp SEMICOLON .)
    RETURN          reduce using rule 58 (asign -> ASSIGN exp SEMICOLON .)
    ID              reduce using rule 58 (asign -> ASSIGN exp SEMICOLON .)
    PRINT           reduce using rule 58 (asign -> ASSIGN exp SEMICOLON .)
    DRAW_DOT        reduce using rule 58 (asign -> ASSIGN exp SEMICOLON .)
    DRAW_LINE       reduce using rule 58 (asign -> ASSIGN exp SEMICOLON .)
    DRAW_CIRCLE     reduce using rule 58 (asign -> ASSIGN exp SEMICOLON .)
    DRAW_TRIANGLE   reduce using rule 58 (asign -> ASSIGN exp SEMICOLON .)
    DRAW_SQUARE     reduce using rule 58 (asign -> ASSIGN exp SEMICOLON .)
    DRAW_RECTANGLE  reduce using rule 58 (asign -> ASSIGN exp SEMICOLON .)
    DRAW_QUADRITERAL reduce using rule 58 (asign -> ASSIGN exp SEMICOLON .)
    RIGHTB          reduce using rule 58 (asign -> ASSIGN exp SEMICOLON .)


state 193

    (52) args -> empty .

    RIGHTP          reduce using rule 52 (args -> empty .)


state 194

    (49) llamada -> ID llamafun LEFTP args . RIGHTP

    RIGHTP          shift and go to state 222


state 195

    (51) args -> exp . param listargs
    (55) param -> . empty
    (116) empty -> .

    COMMA           reduce using rule 116 (empty -> .)
    RIGHTP          reduce using rule 116 (empty -> .)

    empty                          shift and go to state 223
    param                          shift and go to state 224

state 196

    (63) condicion -> IF LEFTP condicion1 RIGHTP . LEFTB bloque RIGHTB condicion3 else

    LEFTB           shift and go to state 225


state 197

    (101) dibujaPunto -> DRAW_DOT LEFTP exp COMMA . exp COMMA color RIGHTP SEMICOLON
    (69) exp -> . llamada
    (70) exp -> . expresion
    (49) llamada -> . ID llamafun LEFTP args RIGHTP
    (71) expresion -> . operador1 exp1
    (75) operador1 -> . operador2 exp2
    (83) operador2 -> . operador3 exp3
    (87) operador3 -> . operador4 exp4
    (92) operador4 -> . ID
    (93) operador4 -> . constante
    (94) operador4 -> . LEFTP expresion RIGHTP
    (95) constante -> . INT_CTE
    (96) constante -> . FLOAT_CTE
    (97) constante -> . CHAR_CTE
    (98) constante -> . STRING_CTE
    (99) constante -> . TRUE
    (100) constante -> . FALSE

    ID              shift and go to state 104
    LEFTP           shift and go to state 99
    INT_CTE         shift and go to state 105
    FLOAT_CTE       shift and go to state 107
    CHAR_CTE        shift and go to state 101
    STRING_CTE      shift and go to state 93
    TRUE            shift and go to state 97
    FALSE           shift and go to state 103

    expresion                      shift and go to state 106
    constante                      shift and go to state 102
    llamada                        shift and go to state 100
    exp                            shift and go to state 226
    operador1                      shift and go to state 94
    operador3                      shift and go to state 95
    operador2                      shift and go to state 96
    operador4                      shift and go to state 98

state 198

    (103) dibujaCirculo -> DRAW_CIRCLE LEFTP exp COMMA . exp COMMA exp COMMA color RIGHTP SEMICOLON
    (69) exp -> . llamada
    (70) exp -> . expresion
    (49) llamada -> . ID llamafun LEFTP args RIGHTP
    (71) expresion -> . operador1 exp1
    (75) operador1 -> . operador2 exp2
    (83) operador2 -> . operador3 exp3
    (87) operador3 -> . operador4 exp4
    (92) operador4 -> . ID
    (93) operador4 -> . constante
    (94) operador4 -> . LEFTP expresion RIGHTP
    (95) constante -> . INT_CTE
    (96) constante -> . FLOAT_CTE
    (97) constante -> . CHAR_CTE
    (98) constante -> . STRING_CTE
    (99) constante -> . TRUE
    (100) constante -> . FALSE

    ID              shift and go to state 104
    LEFTP           shift and go to state 99
    INT_CTE         shift and go to state 105
    FLOAT_CTE       shift and go to state 107
    CHAR_CTE        shift and go to state 101
    STRING_CTE      shift and go to state 93
    TRUE            shift and go to state 97
    FALSE           shift and go to state 103

    expresion                      shift and go to state 106
    constante                      shift and go to state 102
    llamada                        shift and go to state 100
    exp                            shift and go to state 227
    operador1                      shift and go to state 94
    operador3                      shift and go to state 95
    operador2                      shift and go to state 96
    operador4                      shift and go to state 98

state 199

    (73) exp1 -> AND saveop operador1 . exp1
    (72) exp1 -> . empty
    (73) exp1 -> . AND saveop operador1 exp1
    (74) exp1 -> . OR saveop operador1 exp1
    (116) empty -> .

    AND             shift and go to state 129
    OR              shift and go to state 131
    SEMICOLON       reduce using rule 116 (empty -> .)
    RIGHTP          reduce using rule 116 (empty -> .)
    COMMA           reduce using rule 116 (empty -> .)
    RIGHTSB         reduce using rule 116 (empty -> .)

    exp1                           shift and go to state 228
    empty                          shift and go to state 132

state 200

    (74) exp1 -> OR saveop operador1 . exp1
    (72) exp1 -> . empty
    (73) exp1 -> . AND saveop operador1 exp1
    (74) exp1 -> . OR saveop operador1 exp1
    (116) empty -> .

    AND             shift and go to state 129
    OR              shift and go to state 131
    SEMICOLON       reduce using rule 116 (empty -> .)
    RIGHTP          reduce using rule 116 (empty -> .)
    COMMA           reduce using rule 116 (empty -> .)
    RIGHTSB         reduce using rule 116 (empty -> .)

    exp1                           shift and go to state 229
    empty                          shift and go to state 132

state 201

    (86) exp3 -> LESS saveop operador3 . exp3
    (84) exp3 -> . empty
    (85) exp3 -> . SUM saveop operador3 exp3
    (86) exp3 -> . LESS saveop operador3 exp3
    (116) empty -> .

    SUM             shift and go to state 135
    LESS            shift and go to state 133
    EQUALS          reduce using rule 116 (empty -> .)
    NOTEQUAL        reduce using rule 116 (empty -> .)
    GREATEREQUAL    reduce using rule 116 (empty -> .)
    GREATERTHAN     reduce using rule 116 (empty -> .)
    LESSTHAN        reduce using rule 116 (empty -> .)
    LESSEQUAL       reduce using rule 116 (empty -> .)
    AND             reduce using rule 116 (empty -> .)
    OR              reduce using rule 116 (empty -> .)
    SEMICOLON       reduce using rule 116 (empty -> .)
    RIGHTP          reduce using rule 116 (empty -> .)
    COMMA           reduce using rule 116 (empty -> .)
    RIGHTSB         reduce using rule 116 (empty -> .)

    exp3                           shift and go to state 230
    empty                          shift and go to state 136

state 202

    (85) exp3 -> SUM saveop operador3 . exp3
    (84) exp3 -> . empty
    (85) exp3 -> . SUM saveop operador3 exp3
    (86) exp3 -> . LESS saveop operador3 exp3
    (116) empty -> .

    SUM             shift and go to state 135
    LESS            shift and go to state 133
    EQUALS          reduce using rule 116 (empty -> .)
    NOTEQUAL        reduce using rule 116 (empty -> .)
    GREATEREQUAL    reduce using rule 116 (empty -> .)
    GREATERTHAN     reduce using rule 116 (empty -> .)
    LESSTHAN        reduce using rule 116 (empty -> .)
    LESSEQUAL       reduce using rule 116 (empty -> .)
    AND             reduce using rule 116 (empty -> .)
    OR              reduce using rule 116 (empty -> .)
    SEMICOLON       reduce using rule 116 (empty -> .)
    RIGHTP          reduce using rule 116 (empty -> .)
    COMMA           reduce using rule 116 (empty -> .)
    RIGHTSB         reduce using rule 116 (empty -> .)

    exp3                           shift and go to state 231
    empty                          shift and go to state 136

state 203

    (78) exp2 -> NOTEQUAL saveop operador2 . exp2
    (76) exp2 -> . empty
    (77) exp2 -> . EQUALS saveop operador2 exp2
    (78) exp2 -> . NOTEQUAL saveop operador2 exp2
    (79) exp2 -> . GREATEREQUAL saveop operador2 exp2
    (80) exp2 -> . GREATERTHAN saveop operador2 exp2
    (81) exp2 -> . LESSTHAN saveop operador2 exp2
    (82) exp2 -> . LESSEQUAL saveop operador2 exp2
    (116) empty -> .

    EQUALS          shift and go to state 140
    NOTEQUAL        shift and go to state 137
    GREATEREQUAL    shift and go to state 138
    GREATERTHAN     shift and go to state 142
    LESSTHAN        shift and go to state 141
    LESSEQUAL       shift and go to state 143
    AND             reduce using rule 116 (empty -> .)
    OR              reduce using rule 116 (empty -> .)
    SEMICOLON       reduce using rule 116 (empty -> .)
    RIGHTP          reduce using rule 116 (empty -> .)
    COMMA           reduce using rule 116 (empty -> .)
    RIGHTSB         reduce using rule 116 (empty -> .)

    exp2                           shift and go to state 232
    empty                          shift and go to state 144

state 204

    (79) exp2 -> GREATEREQUAL saveop operador2 . exp2
    (76) exp2 -> . empty
    (77) exp2 -> . EQUALS saveop operador2 exp2
    (78) exp2 -> . NOTEQUAL saveop operador2 exp2
    (79) exp2 -> . GREATEREQUAL saveop operador2 exp2
    (80) exp2 -> . GREATERTHAN saveop operador2 exp2
    (81) exp2 -> . LESSTHAN saveop operador2 exp2
    (82) exp2 -> . LESSEQUAL saveop operador2 exp2
    (116) empty -> .

    EQUALS          shift and go to state 140
    NOTEQUAL        shift and go to state 137
    GREATEREQUAL    shift and go to state 138
    GREATERTHAN     shift and go to state 142
    LESSTHAN        shift and go to state 141
    LESSEQUAL       shift and go to state 143
    AND             reduce using rule 116 (empty -> .)
    OR              reduce using rule 116 (empty -> .)
    SEMICOLON       reduce using rule 116 (empty -> .)
    RIGHTP          reduce using rule 116 (empty -> .)
    COMMA           reduce using rule 116 (empty -> .)
    RIGHTSB         reduce using rule 116 (empty -> .)

    exp2                           shift and go to state 233
    empty                          shift and go to state 144

state 205

    (77) exp2 -> EQUALS saveop operador2 . exp2
    (76) exp2 -> . empty
    (77) exp2 -> . EQUALS saveop operador2 exp2
    (78) exp2 -> . NOTEQUAL saveop operador2 exp2
    (79) exp2 -> . GREATEREQUAL saveop operador2 exp2
    (80) exp2 -> . GREATERTHAN saveop operador2 exp2
    (81) exp2 -> . LESSTHAN saveop operador2 exp2
    (82) exp2 -> . LESSEQUAL saveop operador2 exp2
    (116) empty -> .

    EQUALS          shift and go to state 140
    NOTEQUAL        shift and go to state 137
    GREATEREQUAL    shift and go to state 138
    GREATERTHAN     shift and go to state 142
    LESSTHAN        shift and go to state 141
    LESSEQUAL       shift and go to state 143
    AND             reduce using rule 116 (empty -> .)
    OR              reduce using rule 116 (empty -> .)
    SEMICOLON       reduce using rule 116 (empty -> .)
    RIGHTP          reduce using rule 116 (empty -> .)
    COMMA           reduce using rule 116 (empty -> .)
    RIGHTSB         reduce using rule 116 (empty -> .)

    exp2                           shift and go to state 234
    empty                          shift and go to state 144

state 206

    (81) exp2 -> LESSTHAN saveop operador2 . exp2
    (76) exp2 -> . empty
    (77) exp2 -> . EQUALS saveop operador2 exp2
    (78) exp2 -> . NOTEQUAL saveop operador2 exp2
    (79) exp2 -> . GREATEREQUAL saveop operador2 exp2
    (80) exp2 -> . GREATERTHAN saveop operador2 exp2
    (81) exp2 -> . LESSTHAN saveop operador2 exp2
    (82) exp2 -> . LESSEQUAL saveop operador2 exp2
    (116) empty -> .

    EQUALS          shift and go to state 140
    NOTEQUAL        shift and go to state 137
    GREATEREQUAL    shift and go to state 138
    GREATERTHAN     shift and go to state 142
    LESSTHAN        shift and go to state 141
    LESSEQUAL       shift and go to state 143
    AND             reduce using rule 116 (empty -> .)
    OR              reduce using rule 116 (empty -> .)
    SEMICOLON       reduce using rule 116 (empty -> .)
    RIGHTP          reduce using rule 116 (empty -> .)
    COMMA           reduce using rule 116 (empty -> .)
    RIGHTSB         reduce using rule 116 (empty -> .)

    exp2                           shift and go to state 235
    empty                          shift and go to state 144

state 207

    (80) exp2 -> GREATERTHAN saveop operador2 . exp2
    (76) exp2 -> . empty
    (77) exp2 -> . EQUALS saveop operador2 exp2
    (78) exp2 -> . NOTEQUAL saveop operador2 exp2
    (79) exp2 -> . GREATEREQUAL saveop operador2 exp2
    (80) exp2 -> . GREATERTHAN saveop operador2 exp2
    (81) exp2 -> . LESSTHAN saveop operador2 exp2
    (82) exp2 -> . LESSEQUAL saveop operador2 exp2
    (116) empty -> .

    EQUALS          shift and go to state 140
    NOTEQUAL        shift and go to state 137
    GREATEREQUAL    shift and go to state 138
    GREATERTHAN     shift and go to state 142
    LESSTHAN        shift and go to state 141
    LESSEQUAL       shift and go to state 143
    AND             reduce using rule 116 (empty -> .)
    OR              reduce using rule 116 (empty -> .)
    SEMICOLON       reduce using rule 116 (empty -> .)
    RIGHTP          reduce using rule 116 (empty -> .)
    COMMA           reduce using rule 116 (empty -> .)
    RIGHTSB         reduce using rule 116 (empty -> .)

    exp2                           shift and go to state 236
    empty                          shift and go to state 144

state 208

    (82) exp2 -> LESSEQUAL saveop operador2 . exp2
    (76) exp2 -> . empty
    (77) exp2 -> . EQUALS saveop operador2 exp2
    (78) exp2 -> . NOTEQUAL saveop operador2 exp2
    (79) exp2 -> . GREATEREQUAL saveop operador2 exp2
    (80) exp2 -> . GREATERTHAN saveop operador2 exp2
    (81) exp2 -> . LESSTHAN saveop operador2 exp2
    (82) exp2 -> . LESSEQUAL saveop operador2 exp2
    (116) empty -> .

    EQUALS          shift and go to state 140
    NOTEQUAL        shift and go to state 137
    GREATEREQUAL    shift and go to state 138
    GREATERTHAN     shift and go to state 142
    LESSTHAN        shift and go to state 141
    LESSEQUAL       shift and go to state 143
    AND             reduce using rule 116 (empty -> .)
    OR              reduce using rule 116 (empty -> .)
    SEMICOLON       reduce using rule 116 (empty -> .)
    RIGHTP          reduce using rule 116 (empty -> .)
    COMMA           reduce using rule 116 (empty -> .)
    RIGHTSB         reduce using rule 116 (empty -> .)

    exp2                           shift and go to state 237
    empty                          shift and go to state 144

state 209

    (90) exp4 -> DIVISION saveop operador4 . exp4
    (88) exp4 -> . empty
    (89) exp4 -> . TIMES saveop operador4 exp4
    (90) exp4 -> . DIVISION saveop operador4 exp4
    (116) empty -> .

    TIMES           shift and go to state 146
    DIVISION        shift and go to state 145
    SUM             reduce using rule 116 (empty -> .)
    LESS            reduce using rule 116 (empty -> .)
    EQUALS          reduce using rule 116 (empty -> .)
    NOTEQUAL        reduce using rule 116 (empty -> .)
    GREATEREQUAL    reduce using rule 116 (empty -> .)
    GREATERTHAN     reduce using rule 116 (empty -> .)
    LESSTHAN        reduce using rule 116 (empty -> .)
    LESSEQUAL       reduce using rule 116 (empty -> .)
    AND             reduce using rule 116 (empty -> .)
    OR              reduce using rule 116 (empty -> .)
    SEMICOLON       reduce using rule 116 (empty -> .)
    RIGHTP          reduce using rule 116 (empty -> .)
    COMMA           reduce using rule 116 (empty -> .)
    RIGHTSB         reduce using rule 116 (empty -> .)

    empty                          shift and go to state 148
    exp4                           shift and go to state 238

state 210

    (89) exp4 -> TIMES saveop operador4 . exp4
    (88) exp4 -> . empty
    (89) exp4 -> . TIMES saveop operador4 exp4
    (90) exp4 -> . DIVISION saveop operador4 exp4
    (116) empty -> .

    TIMES           shift and go to state 146
    DIVISION        shift and go to state 145
    SUM             reduce using rule 116 (empty -> .)
    LESS            reduce using rule 116 (empty -> .)
    EQUALS          reduce using rule 116 (empty -> .)
    NOTEQUAL        reduce using rule 116 (empty -> .)
    GREATEREQUAL    reduce using rule 116 (empty -> .)
    GREATERTHAN     reduce using rule 116 (empty -> .)
    LESSTHAN        reduce using rule 116 (empty -> .)
    LESSEQUAL       reduce using rule 116 (empty -> .)
    AND             reduce using rule 116 (empty -> .)
    OR              reduce using rule 116 (empty -> .)
    SEMICOLON       reduce using rule 116 (empty -> .)
    RIGHTP          reduce using rule 116 (empty -> .)
    COMMA           reduce using rule 116 (empty -> .)
    RIGHTSB         reduce using rule 116 (empty -> .)

    empty                          shift and go to state 148
    exp4                           shift and go to state 239

state 211

    (105) dibujaCuadrado -> DRAW_SQUARE LEFTP exp COMMA exp . COMMA exp COMMA color RIGHTP SEMICOLON

    COMMA           shift and go to state 240


state 212

    (107) dibujaCuadrilatero -> DRAW_QUADRITERAL LEFTP exp COMMA exp . COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON

    COMMA           shift and go to state 241


state 213

    (48) escritura -> PRINT LEFTP exp RIGHTP SEMICOLON .

    IF              reduce using rule 48 (escritura -> PRINT LEFTP exp RIGHTP SEMICOLON .)
    WHILE           reduce using rule 48 (escritura -> PRINT LEFTP exp RIGHTP SEMICOLON .)
    RETURN          reduce using rule 48 (escritura -> PRINT LEFTP exp RIGHTP SEMICOLON .)
    ID              reduce using rule 48 (escritura -> PRINT LEFTP exp RIGHTP SEMICOLON .)
    PRINT           reduce using rule 48 (escritura -> PRINT LEFTP exp RIGHTP SEMICOLON .)
    DRAW_DOT        reduce using rule 48 (escritura -> PRINT LEFTP exp RIGHTP SEMICOLON .)
    DRAW_LINE       reduce using rule 48 (escritura -> PRINT LEFTP exp RIGHTP SEMICOLON .)
    DRAW_CIRCLE     reduce using rule 48 (escritura -> PRINT LEFTP exp RIGHTP SEMICOLON .)
    DRAW_TRIANGLE   reduce using rule 48 (escritura -> PRINT LEFTP exp RIGHTP SEMICOLON .)
    DRAW_SQUARE     reduce using rule 48 (escritura -> PRINT LEFTP exp RIGHTP SEMICOLON .)
    DRAW_RECTANGLE  reduce using rule 48 (escritura -> PRINT LEFTP exp RIGHTP SEMICOLON .)
    DRAW_QUADRITERAL reduce using rule 48 (escritura -> PRINT LEFTP exp RIGHTP SEMICOLON .)
    RIGHTB          reduce using rule 48 (escritura -> PRINT LEFTP exp RIGHTP SEMICOLON .)


state 214

    (59) ciclo -> WHILE salto_ciclo LEFTP exp ciclo1 . RIGHTP LEFTB bloque ciclo2 RIGHTB

    RIGHTP          shift and go to state 242


state 215

    (61) ciclo1 -> empty .

    RIGHTP          reduce using rule 61 (ciclo1 -> empty .)


state 216

    (104) dibujaTriangulo -> DRAW_TRIANGLE LEFTP exp COMMA exp . COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON

    COMMA           shift and go to state 243


state 217

    (102) dibujaLinea -> DRAW_LINE LEFTP exp COMMA exp . COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON

    COMMA           shift and go to state 244


state 218

    (106) dibujaRectangulo -> DRAW_RECTANGLE LEFTP exp COMMA exp . COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON

    COMMA           shift and go to state 245


state 219

    (57) asignacion -> ID LEFTSB exp RIGHTSB asign .

    IF              reduce using rule 57 (asignacion -> ID LEFTSB exp RIGHTSB asign .)
    WHILE           reduce using rule 57 (asignacion -> ID LEFTSB exp RIGHTSB asign .)
    RETURN          reduce using rule 57 (asignacion -> ID LEFTSB exp RIGHTSB asign .)
    ID              reduce using rule 57 (asignacion -> ID LEFTSB exp RIGHTSB asign .)
    PRINT           reduce using rule 57 (asignacion -> ID LEFTSB exp RIGHTSB asign .)
    DRAW_DOT        reduce using rule 57 (asignacion -> ID LEFTSB exp RIGHTSB asign .)
    DRAW_LINE       reduce using rule 57 (asignacion -> ID LEFTSB exp RIGHTSB asign .)
    DRAW_CIRCLE     reduce using rule 57 (asignacion -> ID LEFTSB exp RIGHTSB asign .)
    DRAW_TRIANGLE   reduce using rule 57 (asignacion -> ID LEFTSB exp RIGHTSB asign .)
    DRAW_SQUARE     reduce using rule 57 (asignacion -> ID LEFTSB exp RIGHTSB asign .)
    DRAW_RECTANGLE  reduce using rule 57 (asignacion -> ID LEFTSB exp RIGHTSB asign .)
    DRAW_QUADRITERAL reduce using rule 57 (asignacion -> ID LEFTSB exp RIGHTSB asign .)
    RIGHTB          reduce using rule 57 (asignacion -> ID LEFTSB exp RIGHTSB asign .)


state 220

    (58) asign -> ASSIGN . exp SEMICOLON
    (69) exp -> . llamada
    (70) exp -> . expresion
    (49) llamada -> . ID llamafun LEFTP args RIGHTP
    (71) expresion -> . operador1 exp1
    (75) operador1 -> . operador2 exp2
    (83) operador2 -> . operador3 exp3
    (87) operador3 -> . operador4 exp4
    (92) operador4 -> . ID
    (93) operador4 -> . constante
    (94) operador4 -> . LEFTP expresion RIGHTP
    (95) constante -> . INT_CTE
    (96) constante -> . FLOAT_CTE
    (97) constante -> . CHAR_CTE
    (98) constante -> . STRING_CTE
    (99) constante -> . TRUE
    (100) constante -> . FALSE

    ID              shift and go to state 104
    LEFTP           shift and go to state 99
    INT_CTE         shift and go to state 105
    FLOAT_CTE       shift and go to state 107
    CHAR_CTE        shift and go to state 101
    STRING_CTE      shift and go to state 93
    TRUE            shift and go to state 97
    FALSE           shift and go to state 103

    expresion                      shift and go to state 106
    constante                      shift and go to state 102
    llamada                        shift and go to state 100
    exp                            shift and go to state 161
    operador1                      shift and go to state 94
    operador3                      shift and go to state 95
    operador2                      shift and go to state 96
    operador4                      shift and go to state 98

state 221

    (47) lectura -> ID ASSIGN READ LEFTP RIGHTP . SEMICOLON

    SEMICOLON       shift and go to state 246


state 222

    (49) llamada -> ID llamafun LEFTP args RIGHTP .

    COMMA           reduce using rule 49 (llamada -> ID llamafun LEFTP args RIGHTP .)
    SEMICOLON       reduce using rule 49 (llamada -> ID llamafun LEFTP args RIGHTP .)
    RIGHTP          reduce using rule 49 (llamada -> ID llamafun LEFTP args RIGHTP .)
    RIGHTSB         reduce using rule 49 (llamada -> ID llamafun LEFTP args RIGHTP .)


state 223

    (55) param -> empty .

    COMMA           reduce using rule 55 (param -> empty .)
    RIGHTP          reduce using rule 55 (param -> empty .)


state 224

    (51) args -> exp param . listargs
    (53) listargs -> . COMMA args
    (54) listargs -> . empty
    (116) empty -> .

    COMMA           shift and go to state 247
    RIGHTP          reduce using rule 116 (empty -> .)

    empty                          shift and go to state 248
    listargs                       shift and go to state 249

state 225

    (63) condicion -> IF LEFTP condicion1 RIGHTP LEFTB . bloque RIGHTB condicion3 else
    (25) bloque -> . estatuto bloque
    (26) bloque -> . empty
    (32) estatuto -> . condicion
    (33) estatuto -> . ciclo
    (34) estatuto -> . return
    (35) estatuto -> . lectura
    (36) estatuto -> . escritura
    (37) estatuto -> . llamada SEMICOLON
    (38) estatuto -> . asignacion
    (39) estatuto -> . dibujaPunto
    (40) estatuto -> . dibujaLinea
    (41) estatuto -> . dibujaCirculo
    (42) estatuto -> . dibujaTriangulo
    (43) estatuto -> . dibujaCuadrado
    (44) estatuto -> . dibujaRectangulo
    (45) estatuto -> . dibujaCuadrilatero
    (116) empty -> .
    (63) condicion -> . IF LEFTP condicion1 RIGHTP LEFTB bloque RIGHTB condicion3 else
    (59) ciclo -> . WHILE salto_ciclo LEFTP exp ciclo1 RIGHTP LEFTB bloque ciclo2 RIGHTB
    (46) return -> . RETURN exp SEMICOLON
    (47) lectura -> . ID ASSIGN READ LEFTP RIGHTP SEMICOLON
    (48) escritura -> . PRINT LEFTP exp RIGHTP SEMICOLON
    (49) llamada -> . ID llamafun LEFTP args RIGHTP
    (56) asignacion -> . ID asign
    (57) asignacion -> . ID LEFTSB exp RIGHTSB asign
    (101) dibujaPunto -> . DRAW_DOT LEFTP exp COMMA exp COMMA color RIGHTP SEMICOLON
    (102) dibujaLinea -> . DRAW_LINE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON
    (103) dibujaCirculo -> . DRAW_CIRCLE LEFTP exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON
    (104) dibujaTriangulo -> . DRAW_TRIANGLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON
    (105) dibujaCuadrado -> . DRAW_SQUARE LEFTP exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON
    (106) dibujaRectangulo -> . DRAW_RECTANGLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON
    (107) dibujaCuadrilatero -> . DRAW_QUADRITERAL LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON

    RIGHTB          reduce using rule 116 (empty -> .)
    IF              shift and go to state 87
    WHILE           shift and go to state 68
    RETURN          shift and go to state 63
    ID              shift and go to state 86
    PRINT           shift and go to state 67
    DRAW_DOT        shift and go to state 89
    DRAW_LINE       shift and go to state 83
    DRAW_CIRCLE     shift and go to state 90
    DRAW_TRIANGLE   shift and go to state 69
    DRAW_SQUARE     shift and go to state 65
    DRAW_RECTANGLE  shift and go to state 84
    DRAW_QUADRITERAL shift and go to state 66

    dibujaTriangulo                shift and go to state 64
    dibujaCuadrado                 shift and go to state 70
    bloque                         shift and go to state 250
    dibujaCuadrilatero             shift and go to state 72
    ciclo                          shift and go to state 73
    estatuto                       shift and go to state 74
    llamada                        shift and go to state 75
    condicion                      shift and go to state 76
    dibujaLinea                    shift and go to state 77
    lectura                        shift and go to state 78
    empty                          shift and go to state 79
    dibujaCirculo                  shift and go to state 80
    dibujaRectangulo               shift and go to state 81
    return                         shift and go to state 82
    dibujaPunto                    shift and go to state 85
    asignacion                     shift and go to state 88
    escritura                      shift and go to state 91

state 226

    (101) dibujaPunto -> DRAW_DOT LEFTP exp COMMA exp . COMMA color RIGHTP SEMICOLON

    COMMA           shift and go to state 251


state 227

    (103) dibujaCirculo -> DRAW_CIRCLE LEFTP exp COMMA exp . COMMA exp COMMA color RIGHTP SEMICOLON

    COMMA           shift and go to state 252


state 228

    (73) exp1 -> AND saveop operador1 exp1 .

    SEMICOLON       reduce using rule 73 (exp1 -> AND saveop operador1 exp1 .)
    RIGHTP          reduce using rule 73 (exp1 -> AND saveop operador1 exp1 .)
    COMMA           reduce using rule 73 (exp1 -> AND saveop operador1 exp1 .)
    RIGHTSB         reduce using rule 73 (exp1 -> AND saveop operador1 exp1 .)


state 229

    (74) exp1 -> OR saveop operador1 exp1 .

    SEMICOLON       reduce using rule 74 (exp1 -> OR saveop operador1 exp1 .)
    RIGHTP          reduce using rule 74 (exp1 -> OR saveop operador1 exp1 .)
    COMMA           reduce using rule 74 (exp1 -> OR saveop operador1 exp1 .)
    RIGHTSB         reduce using rule 74 (exp1 -> OR saveop operador1 exp1 .)


state 230

    (86) exp3 -> LESS saveop operador3 exp3 .

    EQUALS          reduce using rule 86 (exp3 -> LESS saveop operador3 exp3 .)
    NOTEQUAL        reduce using rule 86 (exp3 -> LESS saveop operador3 exp3 .)
    GREATEREQUAL    reduce using rule 86 (exp3 -> LESS saveop operador3 exp3 .)
    GREATERTHAN     reduce using rule 86 (exp3 -> LESS saveop operador3 exp3 .)
    LESSTHAN        reduce using rule 86 (exp3 -> LESS saveop operador3 exp3 .)
    LESSEQUAL       reduce using rule 86 (exp3 -> LESS saveop operador3 exp3 .)
    AND             reduce using rule 86 (exp3 -> LESS saveop operador3 exp3 .)
    OR              reduce using rule 86 (exp3 -> LESS saveop operador3 exp3 .)
    SEMICOLON       reduce using rule 86 (exp3 -> LESS saveop operador3 exp3 .)
    RIGHTP          reduce using rule 86 (exp3 -> LESS saveop operador3 exp3 .)
    COMMA           reduce using rule 86 (exp3 -> LESS saveop operador3 exp3 .)
    RIGHTSB         reduce using rule 86 (exp3 -> LESS saveop operador3 exp3 .)


state 231

    (85) exp3 -> SUM saveop operador3 exp3 .

    EQUALS          reduce using rule 85 (exp3 -> SUM saveop operador3 exp3 .)
    NOTEQUAL        reduce using rule 85 (exp3 -> SUM saveop operador3 exp3 .)
    GREATEREQUAL    reduce using rule 85 (exp3 -> SUM saveop operador3 exp3 .)
    GREATERTHAN     reduce using rule 85 (exp3 -> SUM saveop operador3 exp3 .)
    LESSTHAN        reduce using rule 85 (exp3 -> SUM saveop operador3 exp3 .)
    LESSEQUAL       reduce using rule 85 (exp3 -> SUM saveop operador3 exp3 .)
    AND             reduce using rule 85 (exp3 -> SUM saveop operador3 exp3 .)
    OR              reduce using rule 85 (exp3 -> SUM saveop operador3 exp3 .)
    SEMICOLON       reduce using rule 85 (exp3 -> SUM saveop operador3 exp3 .)
    RIGHTP          reduce using rule 85 (exp3 -> SUM saveop operador3 exp3 .)
    COMMA           reduce using rule 85 (exp3 -> SUM saveop operador3 exp3 .)
    RIGHTSB         reduce using rule 85 (exp3 -> SUM saveop operador3 exp3 .)


state 232

    (78) exp2 -> NOTEQUAL saveop operador2 exp2 .

    AND             reduce using rule 78 (exp2 -> NOTEQUAL saveop operador2 exp2 .)
    OR              reduce using rule 78 (exp2 -> NOTEQUAL saveop operador2 exp2 .)
    SEMICOLON       reduce using rule 78 (exp2 -> NOTEQUAL saveop operador2 exp2 .)
    RIGHTP          reduce using rule 78 (exp2 -> NOTEQUAL saveop operador2 exp2 .)
    COMMA           reduce using rule 78 (exp2 -> NOTEQUAL saveop operador2 exp2 .)
    RIGHTSB         reduce using rule 78 (exp2 -> NOTEQUAL saveop operador2 exp2 .)


state 233

    (79) exp2 -> GREATEREQUAL saveop operador2 exp2 .

    AND             reduce using rule 79 (exp2 -> GREATEREQUAL saveop operador2 exp2 .)
    OR              reduce using rule 79 (exp2 -> GREATEREQUAL saveop operador2 exp2 .)
    SEMICOLON       reduce using rule 79 (exp2 -> GREATEREQUAL saveop operador2 exp2 .)
    RIGHTP          reduce using rule 79 (exp2 -> GREATEREQUAL saveop operador2 exp2 .)
    COMMA           reduce using rule 79 (exp2 -> GREATEREQUAL saveop operador2 exp2 .)
    RIGHTSB         reduce using rule 79 (exp2 -> GREATEREQUAL saveop operador2 exp2 .)


state 234

    (77) exp2 -> EQUALS saveop operador2 exp2 .

    AND             reduce using rule 77 (exp2 -> EQUALS saveop operador2 exp2 .)
    OR              reduce using rule 77 (exp2 -> EQUALS saveop operador2 exp2 .)
    SEMICOLON       reduce using rule 77 (exp2 -> EQUALS saveop operador2 exp2 .)
    RIGHTP          reduce using rule 77 (exp2 -> EQUALS saveop operador2 exp2 .)
    COMMA           reduce using rule 77 (exp2 -> EQUALS saveop operador2 exp2 .)
    RIGHTSB         reduce using rule 77 (exp2 -> EQUALS saveop operador2 exp2 .)


state 235

    (81) exp2 -> LESSTHAN saveop operador2 exp2 .

    AND             reduce using rule 81 (exp2 -> LESSTHAN saveop operador2 exp2 .)
    OR              reduce using rule 81 (exp2 -> LESSTHAN saveop operador2 exp2 .)
    SEMICOLON       reduce using rule 81 (exp2 -> LESSTHAN saveop operador2 exp2 .)
    RIGHTP          reduce using rule 81 (exp2 -> LESSTHAN saveop operador2 exp2 .)
    COMMA           reduce using rule 81 (exp2 -> LESSTHAN saveop operador2 exp2 .)
    RIGHTSB         reduce using rule 81 (exp2 -> LESSTHAN saveop operador2 exp2 .)


state 236

    (80) exp2 -> GREATERTHAN saveop operador2 exp2 .

    AND             reduce using rule 80 (exp2 -> GREATERTHAN saveop operador2 exp2 .)
    OR              reduce using rule 80 (exp2 -> GREATERTHAN saveop operador2 exp2 .)
    SEMICOLON       reduce using rule 80 (exp2 -> GREATERTHAN saveop operador2 exp2 .)
    RIGHTP          reduce using rule 80 (exp2 -> GREATERTHAN saveop operador2 exp2 .)
    COMMA           reduce using rule 80 (exp2 -> GREATERTHAN saveop operador2 exp2 .)
    RIGHTSB         reduce using rule 80 (exp2 -> GREATERTHAN saveop operador2 exp2 .)


state 237

    (82) exp2 -> LESSEQUAL saveop operador2 exp2 .

    AND             reduce using rule 82 (exp2 -> LESSEQUAL saveop operador2 exp2 .)
    OR              reduce using rule 82 (exp2 -> LESSEQUAL saveop operador2 exp2 .)
    SEMICOLON       reduce using rule 82 (exp2 -> LESSEQUAL saveop operador2 exp2 .)
    RIGHTP          reduce using rule 82 (exp2 -> LESSEQUAL saveop operador2 exp2 .)
    COMMA           reduce using rule 82 (exp2 -> LESSEQUAL saveop operador2 exp2 .)
    RIGHTSB         reduce using rule 82 (exp2 -> LESSEQUAL saveop operador2 exp2 .)


state 238

    (90) exp4 -> DIVISION saveop operador4 exp4 .

    SUM             reduce using rule 90 (exp4 -> DIVISION saveop operador4 exp4 .)
    LESS            reduce using rule 90 (exp4 -> DIVISION saveop operador4 exp4 .)
    EQUALS          reduce using rule 90 (exp4 -> DIVISION saveop operador4 exp4 .)
    NOTEQUAL        reduce using rule 90 (exp4 -> DIVISION saveop operador4 exp4 .)
    GREATEREQUAL    reduce using rule 90 (exp4 -> DIVISION saveop operador4 exp4 .)
    GREATERTHAN     reduce using rule 90 (exp4 -> DIVISION saveop operador4 exp4 .)
    LESSTHAN        reduce using rule 90 (exp4 -> DIVISION saveop operador4 exp4 .)
    LESSEQUAL       reduce using rule 90 (exp4 -> DIVISION saveop operador4 exp4 .)
    AND             reduce using rule 90 (exp4 -> DIVISION saveop operador4 exp4 .)
    OR              reduce using rule 90 (exp4 -> DIVISION saveop operador4 exp4 .)
    SEMICOLON       reduce using rule 90 (exp4 -> DIVISION saveop operador4 exp4 .)
    RIGHTP          reduce using rule 90 (exp4 -> DIVISION saveop operador4 exp4 .)
    COMMA           reduce using rule 90 (exp4 -> DIVISION saveop operador4 exp4 .)
    RIGHTSB         reduce using rule 90 (exp4 -> DIVISION saveop operador4 exp4 .)


state 239

    (89) exp4 -> TIMES saveop operador4 exp4 .

    SUM             reduce using rule 89 (exp4 -> TIMES saveop operador4 exp4 .)
    LESS            reduce using rule 89 (exp4 -> TIMES saveop operador4 exp4 .)
    EQUALS          reduce using rule 89 (exp4 -> TIMES saveop operador4 exp4 .)
    NOTEQUAL        reduce using rule 89 (exp4 -> TIMES saveop operador4 exp4 .)
    GREATEREQUAL    reduce using rule 89 (exp4 -> TIMES saveop operador4 exp4 .)
    GREATERTHAN     reduce using rule 89 (exp4 -> TIMES saveop operador4 exp4 .)
    LESSTHAN        reduce using rule 89 (exp4 -> TIMES saveop operador4 exp4 .)
    LESSEQUAL       reduce using rule 89 (exp4 -> TIMES saveop operador4 exp4 .)
    AND             reduce using rule 89 (exp4 -> TIMES saveop operador4 exp4 .)
    OR              reduce using rule 89 (exp4 -> TIMES saveop operador4 exp4 .)
    SEMICOLON       reduce using rule 89 (exp4 -> TIMES saveop operador4 exp4 .)
    RIGHTP          reduce using rule 89 (exp4 -> TIMES saveop operador4 exp4 .)
    COMMA           reduce using rule 89 (exp4 -> TIMES saveop operador4 exp4 .)
    RIGHTSB         reduce using rule 89 (exp4 -> TIMES saveop operador4 exp4 .)


state 240

    (105) dibujaCuadrado -> DRAW_SQUARE LEFTP exp COMMA exp COMMA . exp COMMA color RIGHTP SEMICOLON
    (69) exp -> . llamada
    (70) exp -> . expresion
    (49) llamada -> . ID llamafun LEFTP args RIGHTP
    (71) expresion -> . operador1 exp1
    (75) operador1 -> . operador2 exp2
    (83) operador2 -> . operador3 exp3
    (87) operador3 -> . operador4 exp4
    (92) operador4 -> . ID
    (93) operador4 -> . constante
    (94) operador4 -> . LEFTP expresion RIGHTP
    (95) constante -> . INT_CTE
    (96) constante -> . FLOAT_CTE
    (97) constante -> . CHAR_CTE
    (98) constante -> . STRING_CTE
    (99) constante -> . TRUE
    (100) constante -> . FALSE

    ID              shift and go to state 104
    LEFTP           shift and go to state 99
    INT_CTE         shift and go to state 105
    FLOAT_CTE       shift and go to state 107
    CHAR_CTE        shift and go to state 101
    STRING_CTE      shift and go to state 93
    TRUE            shift and go to state 97
    FALSE           shift and go to state 103

    expresion                      shift and go to state 106
    constante                      shift and go to state 102
    llamada                        shift and go to state 100
    exp                            shift and go to state 253
    operador1                      shift and go to state 94
    operador3                      shift and go to state 95
    operador2                      shift and go to state 96
    operador4                      shift and go to state 98

state 241

    (107) dibujaCuadrilatero -> DRAW_QUADRITERAL LEFTP exp COMMA exp COMMA . exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON
    (69) exp -> . llamada
    (70) exp -> . expresion
    (49) llamada -> . ID llamafun LEFTP args RIGHTP
    (71) expresion -> . operador1 exp1
    (75) operador1 -> . operador2 exp2
    (83) operador2 -> . operador3 exp3
    (87) operador3 -> . operador4 exp4
    (92) operador4 -> . ID
    (93) operador4 -> . constante
    (94) operador4 -> . LEFTP expresion RIGHTP
    (95) constante -> . INT_CTE
    (96) constante -> . FLOAT_CTE
    (97) constante -> . CHAR_CTE
    (98) constante -> . STRING_CTE
    (99) constante -> . TRUE
    (100) constante -> . FALSE

    ID              shift and go to state 104
    LEFTP           shift and go to state 99
    INT_CTE         shift and go to state 105
    FLOAT_CTE       shift and go to state 107
    CHAR_CTE        shift and go to state 101
    STRING_CTE      shift and go to state 93
    TRUE            shift and go to state 97
    FALSE           shift and go to state 103

    expresion                      shift and go to state 106
    constante                      shift and go to state 102
    llamada                        shift and go to state 100
    exp                            shift and go to state 254
    operador1                      shift and go to state 94
    operador3                      shift and go to state 95
    operador2                      shift and go to state 96
    operador4                      shift and go to state 98

state 242

    (59) ciclo -> WHILE salto_ciclo LEFTP exp ciclo1 RIGHTP . LEFTB bloque ciclo2 RIGHTB

    LEFTB           shift and go to state 255


state 243

    (104) dibujaTriangulo -> DRAW_TRIANGLE LEFTP exp COMMA exp COMMA . exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON
    (69) exp -> . llamada
    (70) exp -> . expresion
    (49) llamada -> . ID llamafun LEFTP args RIGHTP
    (71) expresion -> . operador1 exp1
    (75) operador1 -> . operador2 exp2
    (83) operador2 -> . operador3 exp3
    (87) operador3 -> . operador4 exp4
    (92) operador4 -> . ID
    (93) operador4 -> . constante
    (94) operador4 -> . LEFTP expresion RIGHTP
    (95) constante -> . INT_CTE
    (96) constante -> . FLOAT_CTE
    (97) constante -> . CHAR_CTE
    (98) constante -> . STRING_CTE
    (99) constante -> . TRUE
    (100) constante -> . FALSE

    ID              shift and go to state 104
    LEFTP           shift and go to state 99
    INT_CTE         shift and go to state 105
    FLOAT_CTE       shift and go to state 107
    CHAR_CTE        shift and go to state 101
    STRING_CTE      shift and go to state 93
    TRUE            shift and go to state 97
    FALSE           shift and go to state 103

    expresion                      shift and go to state 106
    constante                      shift and go to state 102
    llamada                        shift and go to state 100
    exp                            shift and go to state 256
    operador1                      shift and go to state 94
    operador3                      shift and go to state 95
    operador2                      shift and go to state 96
    operador4                      shift and go to state 98

state 244

    (102) dibujaLinea -> DRAW_LINE LEFTP exp COMMA exp COMMA . exp COMMA exp COMMA color RIGHTP SEMICOLON
    (69) exp -> . llamada
    (70) exp -> . expresion
    (49) llamada -> . ID llamafun LEFTP args RIGHTP
    (71) expresion -> . operador1 exp1
    (75) operador1 -> . operador2 exp2
    (83) operador2 -> . operador3 exp3
    (87) operador3 -> . operador4 exp4
    (92) operador4 -> . ID
    (93) operador4 -> . constante
    (94) operador4 -> . LEFTP expresion RIGHTP
    (95) constante -> . INT_CTE
    (96) constante -> . FLOAT_CTE
    (97) constante -> . CHAR_CTE
    (98) constante -> . STRING_CTE
    (99) constante -> . TRUE
    (100) constante -> . FALSE

    ID              shift and go to state 104
    LEFTP           shift and go to state 99
    INT_CTE         shift and go to state 105
    FLOAT_CTE       shift and go to state 107
    CHAR_CTE        shift and go to state 101
    STRING_CTE      shift and go to state 93
    TRUE            shift and go to state 97
    FALSE           shift and go to state 103

    expresion                      shift and go to state 106
    constante                      shift and go to state 102
    llamada                        shift and go to state 100
    exp                            shift and go to state 257
    operador1                      shift and go to state 94
    operador3                      shift and go to state 95
    operador2                      shift and go to state 96
    operador4                      shift and go to state 98

state 245

    (106) dibujaRectangulo -> DRAW_RECTANGLE LEFTP exp COMMA exp COMMA . exp COMMA exp COMMA color RIGHTP SEMICOLON
    (69) exp -> . llamada
    (70) exp -> . expresion
    (49) llamada -> . ID llamafun LEFTP args RIGHTP
    (71) expresion -> . operador1 exp1
    (75) operador1 -> . operador2 exp2
    (83) operador2 -> . operador3 exp3
    (87) operador3 -> . operador4 exp4
    (92) operador4 -> . ID
    (93) operador4 -> . constante
    (94) operador4 -> . LEFTP expresion RIGHTP
    (95) constante -> . INT_CTE
    (96) constante -> . FLOAT_CTE
    (97) constante -> . CHAR_CTE
    (98) constante -> . STRING_CTE
    (99) constante -> . TRUE
    (100) constante -> . FALSE

    ID              shift and go to state 104
    LEFTP           shift and go to state 99
    INT_CTE         shift and go to state 105
    FLOAT_CTE       shift and go to state 107
    CHAR_CTE        shift and go to state 101
    STRING_CTE      shift and go to state 93
    TRUE            shift and go to state 97
    FALSE           shift and go to state 103

    expresion                      shift and go to state 106
    constante                      shift and go to state 102
    llamada                        shift and go to state 100
    exp                            shift and go to state 258
    operador1                      shift and go to state 94
    operador3                      shift and go to state 95
    operador2                      shift and go to state 96
    operador4                      shift and go to state 98

state 246

    (47) lectura -> ID ASSIGN READ LEFTP RIGHTP SEMICOLON .

    IF              reduce using rule 47 (lectura -> ID ASSIGN READ LEFTP RIGHTP SEMICOLON .)
    WHILE           reduce using rule 47 (lectura -> ID ASSIGN READ LEFTP RIGHTP SEMICOLON .)
    RETURN          reduce using rule 47 (lectura -> ID ASSIGN READ LEFTP RIGHTP SEMICOLON .)
    ID              reduce using rule 47 (lectura -> ID ASSIGN READ LEFTP RIGHTP SEMICOLON .)
    PRINT           reduce using rule 47 (lectura -> ID ASSIGN READ LEFTP RIGHTP SEMICOLON .)
    DRAW_DOT        reduce using rule 47 (lectura -> ID ASSIGN READ LEFTP RIGHTP SEMICOLON .)
    DRAW_LINE       reduce using rule 47 (lectura -> ID ASSIGN READ LEFTP RIGHTP SEMICOLON .)
    DRAW_CIRCLE     reduce using rule 47 (lectura -> ID ASSIGN READ LEFTP RIGHTP SEMICOLON .)
    DRAW_TRIANGLE   reduce using rule 47 (lectura -> ID ASSIGN READ LEFTP RIGHTP SEMICOLON .)
    DRAW_SQUARE     reduce using rule 47 (lectura -> ID ASSIGN READ LEFTP RIGHTP SEMICOLON .)
    DRAW_RECTANGLE  reduce using rule 47 (lectura -> ID ASSIGN READ LEFTP RIGHTP SEMICOLON .)
    DRAW_QUADRITERAL reduce using rule 47 (lectura -> ID ASSIGN READ LEFTP RIGHTP SEMICOLON .)
    RIGHTB          reduce using rule 47 (lectura -> ID ASSIGN READ LEFTP RIGHTP SEMICOLON .)


state 247

    (53) listargs -> COMMA . args
    (51) args -> . exp param listargs
    (52) args -> . empty
    (69) exp -> . llamada
    (70) exp -> . expresion
    (116) empty -> .
    (49) llamada -> . ID llamafun LEFTP args RIGHTP
    (71) expresion -> . operador1 exp1
    (75) operador1 -> . operador2 exp2
    (83) operador2 -> . operador3 exp3
    (87) operador3 -> . operador4 exp4
    (92) operador4 -> . ID
    (93) operador4 -> . constante
    (94) operador4 -> . LEFTP expresion RIGHTP
    (95) constante -> . INT_CTE
    (96) constante -> . FLOAT_CTE
    (97) constante -> . CHAR_CTE
    (98) constante -> . STRING_CTE
    (99) constante -> . TRUE
    (100) constante -> . FALSE

    RIGHTP          reduce using rule 116 (empty -> .)
    ID              shift and go to state 104
    LEFTP           shift and go to state 99
    INT_CTE         shift and go to state 105
    FLOAT_CTE       shift and go to state 107
    CHAR_CTE        shift and go to state 101
    STRING_CTE      shift and go to state 93
    TRUE            shift and go to state 97
    FALSE           shift and go to state 103

    expresion                      shift and go to state 106
    constante                      shift and go to state 102
    args                           shift and go to state 259
    llamada                        shift and go to state 100
    exp                            shift and go to state 195
    operador1                      shift and go to state 94
    operador3                      shift and go to state 95
    operador2                      shift and go to state 96
    operador4                      shift and go to state 98
    empty                          shift and go to state 193

state 248

    (54) listargs -> empty .

    RIGHTP          reduce using rule 54 (listargs -> empty .)


state 249

    (51) args -> exp param listargs .

    RIGHTP          reduce using rule 51 (args -> exp param listargs .)


state 250

    (63) condicion -> IF LEFTP condicion1 RIGHTP LEFTB bloque . RIGHTB condicion3 else

    RIGHTB          shift and go to state 260


state 251

    (101) dibujaPunto -> DRAW_DOT LEFTP exp COMMA exp COMMA . color RIGHTP SEMICOLON
    (108) color -> . RED
    (109) color -> . BLUE
    (110) color -> . YELLOW
    (111) color -> . PURPLE
    (112) color -> . GREEN
    (113) color -> . BLACK
    (114) color -> . CYAN
    (115) color -> . WHITE

    RED             shift and go to state 269
    BLUE            shift and go to state 261
    YELLOW          shift and go to state 265
    PURPLE          shift and go to state 264
    GREEN           shift and go to state 263
    BLACK           shift and go to state 267
    CYAN            shift and go to state 266
    WHITE           shift and go to state 268

    color                          shift and go to state 262

state 252

    (103) dibujaCirculo -> DRAW_CIRCLE LEFTP exp COMMA exp COMMA . exp COMMA color RIGHTP SEMICOLON
    (69) exp -> . llamada
    (70) exp -> . expresion
    (49) llamada -> . ID llamafun LEFTP args RIGHTP
    (71) expresion -> . operador1 exp1
    (75) operador1 -> . operador2 exp2
    (83) operador2 -> . operador3 exp3
    (87) operador3 -> . operador4 exp4
    (92) operador4 -> . ID
    (93) operador4 -> . constante
    (94) operador4 -> . LEFTP expresion RIGHTP
    (95) constante -> . INT_CTE
    (96) constante -> . FLOAT_CTE
    (97) constante -> . CHAR_CTE
    (98) constante -> . STRING_CTE
    (99) constante -> . TRUE
    (100) constante -> . FALSE

    ID              shift and go to state 104
    LEFTP           shift and go to state 99
    INT_CTE         shift and go to state 105
    FLOAT_CTE       shift and go to state 107
    CHAR_CTE        shift and go to state 101
    STRING_CTE      shift and go to state 93
    TRUE            shift and go to state 97
    FALSE           shift and go to state 103

    expresion                      shift and go to state 106
    constante                      shift and go to state 102
    llamada                        shift and go to state 100
    exp                            shift and go to state 270
    operador1                      shift and go to state 94
    operador3                      shift and go to state 95
    operador2                      shift and go to state 96
    operador4                      shift and go to state 98

state 253

    (105) dibujaCuadrado -> DRAW_SQUARE LEFTP exp COMMA exp COMMA exp . COMMA color RIGHTP SEMICOLON

    COMMA           shift and go to state 271


state 254

    (107) dibujaCuadrilatero -> DRAW_QUADRITERAL LEFTP exp COMMA exp COMMA exp . COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON

    COMMA           shift and go to state 272


state 255

    (59) ciclo -> WHILE salto_ciclo LEFTP exp ciclo1 RIGHTP LEFTB . bloque ciclo2 RIGHTB
    (25) bloque -> . estatuto bloque
    (26) bloque -> . empty
    (32) estatuto -> . condicion
    (33) estatuto -> . ciclo
    (34) estatuto -> . return
    (35) estatuto -> . lectura
    (36) estatuto -> . escritura
    (37) estatuto -> . llamada SEMICOLON
    (38) estatuto -> . asignacion
    (39) estatuto -> . dibujaPunto
    (40) estatuto -> . dibujaLinea
    (41) estatuto -> . dibujaCirculo
    (42) estatuto -> . dibujaTriangulo
    (43) estatuto -> . dibujaCuadrado
    (44) estatuto -> . dibujaRectangulo
    (45) estatuto -> . dibujaCuadrilatero
    (116) empty -> .
    (63) condicion -> . IF LEFTP condicion1 RIGHTP LEFTB bloque RIGHTB condicion3 else
    (59) ciclo -> . WHILE salto_ciclo LEFTP exp ciclo1 RIGHTP LEFTB bloque ciclo2 RIGHTB
    (46) return -> . RETURN exp SEMICOLON
    (47) lectura -> . ID ASSIGN READ LEFTP RIGHTP SEMICOLON
    (48) escritura -> . PRINT LEFTP exp RIGHTP SEMICOLON
    (49) llamada -> . ID llamafun LEFTP args RIGHTP
    (56) asignacion -> . ID asign
    (57) asignacion -> . ID LEFTSB exp RIGHTSB asign
    (101) dibujaPunto -> . DRAW_DOT LEFTP exp COMMA exp COMMA color RIGHTP SEMICOLON
    (102) dibujaLinea -> . DRAW_LINE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON
    (103) dibujaCirculo -> . DRAW_CIRCLE LEFTP exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON
    (104) dibujaTriangulo -> . DRAW_TRIANGLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON
    (105) dibujaCuadrado -> . DRAW_SQUARE LEFTP exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON
    (106) dibujaRectangulo -> . DRAW_RECTANGLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON
    (107) dibujaCuadrilatero -> . DRAW_QUADRITERAL LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON

    RIGHTB          reduce using rule 116 (empty -> .)
    IF              shift and go to state 87
    WHILE           shift and go to state 68
    RETURN          shift and go to state 63
    ID              shift and go to state 86
    PRINT           shift and go to state 67
    DRAW_DOT        shift and go to state 89
    DRAW_LINE       shift and go to state 83
    DRAW_CIRCLE     shift and go to state 90
    DRAW_TRIANGLE   shift and go to state 69
    DRAW_SQUARE     shift and go to state 65
    DRAW_RECTANGLE  shift and go to state 84
    DRAW_QUADRITERAL shift and go to state 66

    dibujaTriangulo                shift and go to state 64
    dibujaCuadrado                 shift and go to state 70
    bloque                         shift and go to state 273
    dibujaCuadrilatero             shift and go to state 72
    ciclo                          shift and go to state 73
    estatuto                       shift and go to state 74
    llamada                        shift and go to state 75
    condicion                      shift and go to state 76
    dibujaLinea                    shift and go to state 77
    lectura                        shift and go to state 78
    empty                          shift and go to state 79
    dibujaCirculo                  shift and go to state 80
    dibujaRectangulo               shift and go to state 81
    return                         shift and go to state 82
    dibujaPunto                    shift and go to state 85
    asignacion                     shift and go to state 88
    escritura                      shift and go to state 91

state 256

    (104) dibujaTriangulo -> DRAW_TRIANGLE LEFTP exp COMMA exp COMMA exp . COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON

    COMMA           shift and go to state 274


state 257

    (102) dibujaLinea -> DRAW_LINE LEFTP exp COMMA exp COMMA exp . COMMA exp COMMA color RIGHTP SEMICOLON

    COMMA           shift and go to state 275


state 258

    (106) dibujaRectangulo -> DRAW_RECTANGLE LEFTP exp COMMA exp COMMA exp . COMMA exp COMMA color RIGHTP SEMICOLON

    COMMA           shift and go to state 276


state 259

    (53) listargs -> COMMA args .

    RIGHTP          reduce using rule 53 (listargs -> COMMA args .)


state 260

    (63) condicion -> IF LEFTP condicion1 RIGHTP LEFTB bloque RIGHTB . condicion3 else
    (67) condicion3 -> . empty
    (116) empty -> .

    ELSE            reduce using rule 116 (empty -> .)
    IF              reduce using rule 116 (empty -> .)
    WHILE           reduce using rule 116 (empty -> .)
    RETURN          reduce using rule 116 (empty -> .)
    ID              reduce using rule 116 (empty -> .)
    PRINT           reduce using rule 116 (empty -> .)
    DRAW_DOT        reduce using rule 116 (empty -> .)
    DRAW_LINE       reduce using rule 116 (empty -> .)
    DRAW_CIRCLE     reduce using rule 116 (empty -> .)
    DRAW_TRIANGLE   reduce using rule 116 (empty -> .)
    DRAW_SQUARE     reduce using rule 116 (empty -> .)
    DRAW_RECTANGLE  reduce using rule 116 (empty -> .)
    DRAW_QUADRITERAL reduce using rule 116 (empty -> .)
    RIGHTB          reduce using rule 116 (empty -> .)

    empty                          shift and go to state 278
    condicion3                     shift and go to state 277

state 261

    (109) color -> BLUE .

    RIGHTP          reduce using rule 109 (color -> BLUE .)


state 262

    (101) dibujaPunto -> DRAW_DOT LEFTP exp COMMA exp COMMA color . RIGHTP SEMICOLON

    RIGHTP          shift and go to state 279


state 263

    (112) color -> GREEN .

    RIGHTP          reduce using rule 112 (color -> GREEN .)


state 264

    (111) color -> PURPLE .

    RIGHTP          reduce using rule 111 (color -> PURPLE .)


state 265

    (110) color -> YELLOW .

    RIGHTP          reduce using rule 110 (color -> YELLOW .)


state 266

    (114) color -> CYAN .

    RIGHTP          reduce using rule 114 (color -> CYAN .)


state 267

    (113) color -> BLACK .

    RIGHTP          reduce using rule 113 (color -> BLACK .)


state 268

    (115) color -> WHITE .

    RIGHTP          reduce using rule 115 (color -> WHITE .)


state 269

    (108) color -> RED .

    RIGHTP          reduce using rule 108 (color -> RED .)


state 270

    (103) dibujaCirculo -> DRAW_CIRCLE LEFTP exp COMMA exp COMMA exp . COMMA color RIGHTP SEMICOLON

    COMMA           shift and go to state 280


state 271

    (105) dibujaCuadrado -> DRAW_SQUARE LEFTP exp COMMA exp COMMA exp COMMA . color RIGHTP SEMICOLON
    (108) color -> . RED
    (109) color -> . BLUE
    (110) color -> . YELLOW
    (111) color -> . PURPLE
    (112) color -> . GREEN
    (113) color -> . BLACK
    (114) color -> . CYAN
    (115) color -> . WHITE

    RED             shift and go to state 269
    BLUE            shift and go to state 261
    YELLOW          shift and go to state 265
    PURPLE          shift and go to state 264
    GREEN           shift and go to state 263
    BLACK           shift and go to state 267
    CYAN            shift and go to state 266
    WHITE           shift and go to state 268

    color                          shift and go to state 281

state 272

    (107) dibujaCuadrilatero -> DRAW_QUADRITERAL LEFTP exp COMMA exp COMMA exp COMMA . exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON
    (69) exp -> . llamada
    (70) exp -> . expresion
    (49) llamada -> . ID llamafun LEFTP args RIGHTP
    (71) expresion -> . operador1 exp1
    (75) operador1 -> . operador2 exp2
    (83) operador2 -> . operador3 exp3
    (87) operador3 -> . operador4 exp4
    (92) operador4 -> . ID
    (93) operador4 -> . constante
    (94) operador4 -> . LEFTP expresion RIGHTP
    (95) constante -> . INT_CTE
    (96) constante -> . FLOAT_CTE
    (97) constante -> . CHAR_CTE
    (98) constante -> . STRING_CTE
    (99) constante -> . TRUE
    (100) constante -> . FALSE

    ID              shift and go to state 104
    LEFTP           shift and go to state 99
    INT_CTE         shift and go to state 105
    FLOAT_CTE       shift and go to state 107
    CHAR_CTE        shift and go to state 101
    STRING_CTE      shift and go to state 93
    TRUE            shift and go to state 97
    FALSE           shift and go to state 103

    expresion                      shift and go to state 106
    constante                      shift and go to state 102
    llamada                        shift and go to state 100
    exp                            shift and go to state 282
    operador1                      shift and go to state 94
    operador3                      shift and go to state 95
    operador2                      shift and go to state 96
    operador4                      shift and go to state 98

state 273

    (59) ciclo -> WHILE salto_ciclo LEFTP exp ciclo1 RIGHTP LEFTB bloque . ciclo2 RIGHTB
    (62) ciclo2 -> . empty
    (116) empty -> .

    RIGHTB          reduce using rule 116 (empty -> .)

    ciclo2                         shift and go to state 283
    empty                          shift and go to state 284

state 274

    (104) dibujaTriangulo -> DRAW_TRIANGLE LEFTP exp COMMA exp COMMA exp COMMA . exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON
    (69) exp -> . llamada
    (70) exp -> . expresion
    (49) llamada -> . ID llamafun LEFTP args RIGHTP
    (71) expresion -> . operador1 exp1
    (75) operador1 -> . operador2 exp2
    (83) operador2 -> . operador3 exp3
    (87) operador3 -> . operador4 exp4
    (92) operador4 -> . ID
    (93) operador4 -> . constante
    (94) operador4 -> . LEFTP expresion RIGHTP
    (95) constante -> . INT_CTE
    (96) constante -> . FLOAT_CTE
    (97) constante -> . CHAR_CTE
    (98) constante -> . STRING_CTE
    (99) constante -> . TRUE
    (100) constante -> . FALSE

    ID              shift and go to state 104
    LEFTP           shift and go to state 99
    INT_CTE         shift and go to state 105
    FLOAT_CTE       shift and go to state 107
    CHAR_CTE        shift and go to state 101
    STRING_CTE      shift and go to state 93
    TRUE            shift and go to state 97
    FALSE           shift and go to state 103

    expresion                      shift and go to state 106
    constante                      shift and go to state 102
    llamada                        shift and go to state 100
    exp                            shift and go to state 285
    operador1                      shift and go to state 94
    operador3                      shift and go to state 95
    operador2                      shift and go to state 96
    operador4                      shift and go to state 98

state 275

    (102) dibujaLinea -> DRAW_LINE LEFTP exp COMMA exp COMMA exp COMMA . exp COMMA color RIGHTP SEMICOLON
    (69) exp -> . llamada
    (70) exp -> . expresion
    (49) llamada -> . ID llamafun LEFTP args RIGHTP
    (71) expresion -> . operador1 exp1
    (75) operador1 -> . operador2 exp2
    (83) operador2 -> . operador3 exp3
    (87) operador3 -> . operador4 exp4
    (92) operador4 -> . ID
    (93) operador4 -> . constante
    (94) operador4 -> . LEFTP expresion RIGHTP
    (95) constante -> . INT_CTE
    (96) constante -> . FLOAT_CTE
    (97) constante -> . CHAR_CTE
    (98) constante -> . STRING_CTE
    (99) constante -> . TRUE
    (100) constante -> . FALSE

    ID              shift and go to state 104
    LEFTP           shift and go to state 99
    INT_CTE         shift and go to state 105
    FLOAT_CTE       shift and go to state 107
    CHAR_CTE        shift and go to state 101
    STRING_CTE      shift and go to state 93
    TRUE            shift and go to state 97
    FALSE           shift and go to state 103

    expresion                      shift and go to state 106
    constante                      shift and go to state 102
    llamada                        shift and go to state 100
    exp                            shift and go to state 286
    operador1                      shift and go to state 94
    operador3                      shift and go to state 95
    operador2                      shift and go to state 96
    operador4                      shift and go to state 98

state 276

    (106) dibujaRectangulo -> DRAW_RECTANGLE LEFTP exp COMMA exp COMMA exp COMMA . exp COMMA color RIGHTP SEMICOLON
    (69) exp -> . llamada
    (70) exp -> . expresion
    (49) llamada -> . ID llamafun LEFTP args RIGHTP
    (71) expresion -> . operador1 exp1
    (75) operador1 -> . operador2 exp2
    (83) operador2 -> . operador3 exp3
    (87) operador3 -> . operador4 exp4
    (92) operador4 -> . ID
    (93) operador4 -> . constante
    (94) operador4 -> . LEFTP expresion RIGHTP
    (95) constante -> . INT_CTE
    (96) constante -> . FLOAT_CTE
    (97) constante -> . CHAR_CTE
    (98) constante -> . STRING_CTE
    (99) constante -> . TRUE
    (100) constante -> . FALSE

    ID              shift and go to state 104
    LEFTP           shift and go to state 99
    INT_CTE         shift and go to state 105
    FLOAT_CTE       shift and go to state 107
    CHAR_CTE        shift and go to state 101
    STRING_CTE      shift and go to state 93
    TRUE            shift and go to state 97
    FALSE           shift and go to state 103

    expresion                      shift and go to state 106
    constante                      shift and go to state 102
    llamada                        shift and go to state 100
    exp                            shift and go to state 287
    operador1                      shift and go to state 94
    operador3                      shift and go to state 95
    operador2                      shift and go to state 96
    operador4                      shift and go to state 98

state 277

    (63) condicion -> IF LEFTP condicion1 RIGHTP LEFTB bloque RIGHTB condicion3 . else
    (64) else -> . ELSE LEFTB bloque condicion4 RIGHTB
    (65) else -> . empty
    (116) empty -> .

    ELSE            shift and go to state 289
    IF              reduce using rule 116 (empty -> .)
    WHILE           reduce using rule 116 (empty -> .)
    RETURN          reduce using rule 116 (empty -> .)
    ID              reduce using rule 116 (empty -> .)
    PRINT           reduce using rule 116 (empty -> .)
    DRAW_DOT        reduce using rule 116 (empty -> .)
    DRAW_LINE       reduce using rule 116 (empty -> .)
    DRAW_CIRCLE     reduce using rule 116 (empty -> .)
    DRAW_TRIANGLE   reduce using rule 116 (empty -> .)
    DRAW_SQUARE     reduce using rule 116 (empty -> .)
    DRAW_RECTANGLE  reduce using rule 116 (empty -> .)
    DRAW_QUADRITERAL reduce using rule 116 (empty -> .)
    RIGHTB          reduce using rule 116 (empty -> .)

    else                           shift and go to state 288
    empty                          shift and go to state 290

state 278

    (67) condicion3 -> empty .

    ELSE            reduce using rule 67 (condicion3 -> empty .)
    IF              reduce using rule 67 (condicion3 -> empty .)
    WHILE           reduce using rule 67 (condicion3 -> empty .)
    RETURN          reduce using rule 67 (condicion3 -> empty .)
    ID              reduce using rule 67 (condicion3 -> empty .)
    PRINT           reduce using rule 67 (condicion3 -> empty .)
    DRAW_DOT        reduce using rule 67 (condicion3 -> empty .)
    DRAW_LINE       reduce using rule 67 (condicion3 -> empty .)
    DRAW_CIRCLE     reduce using rule 67 (condicion3 -> empty .)
    DRAW_TRIANGLE   reduce using rule 67 (condicion3 -> empty .)
    DRAW_SQUARE     reduce using rule 67 (condicion3 -> empty .)
    DRAW_RECTANGLE  reduce using rule 67 (condicion3 -> empty .)
    DRAW_QUADRITERAL reduce using rule 67 (condicion3 -> empty .)
    RIGHTB          reduce using rule 67 (condicion3 -> empty .)


state 279

    (101) dibujaPunto -> DRAW_DOT LEFTP exp COMMA exp COMMA color RIGHTP . SEMICOLON

    SEMICOLON       shift and go to state 291


state 280

    (103) dibujaCirculo -> DRAW_CIRCLE LEFTP exp COMMA exp COMMA exp COMMA . color RIGHTP SEMICOLON
    (108) color -> . RED
    (109) color -> . BLUE
    (110) color -> . YELLOW
    (111) color -> . PURPLE
    (112) color -> . GREEN
    (113) color -> . BLACK
    (114) color -> . CYAN
    (115) color -> . WHITE

    RED             shift and go to state 269
    BLUE            shift and go to state 261
    YELLOW          shift and go to state 265
    PURPLE          shift and go to state 264
    GREEN           shift and go to state 263
    BLACK           shift and go to state 267
    CYAN            shift and go to state 266
    WHITE           shift and go to state 268

    color                          shift and go to state 292

state 281

    (105) dibujaCuadrado -> DRAW_SQUARE LEFTP exp COMMA exp COMMA exp COMMA color . RIGHTP SEMICOLON

    RIGHTP          shift and go to state 293


state 282

    (107) dibujaCuadrilatero -> DRAW_QUADRITERAL LEFTP exp COMMA exp COMMA exp COMMA exp . COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON

    COMMA           shift and go to state 294


state 283

    (59) ciclo -> WHILE salto_ciclo LEFTP exp ciclo1 RIGHTP LEFTB bloque ciclo2 . RIGHTB

    RIGHTB          shift and go to state 295


state 284

    (62) ciclo2 -> empty .

    RIGHTB          reduce using rule 62 (ciclo2 -> empty .)


state 285

    (104) dibujaTriangulo -> DRAW_TRIANGLE LEFTP exp COMMA exp COMMA exp COMMA exp . COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON

    COMMA           shift and go to state 296


state 286

    (102) dibujaLinea -> DRAW_LINE LEFTP exp COMMA exp COMMA exp COMMA exp . COMMA color RIGHTP SEMICOLON

    COMMA           shift and go to state 297


state 287

    (106) dibujaRectangulo -> DRAW_RECTANGLE LEFTP exp COMMA exp COMMA exp COMMA exp . COMMA color RIGHTP SEMICOLON

    COMMA           shift and go to state 298


state 288

    (63) condicion -> IF LEFTP condicion1 RIGHTP LEFTB bloque RIGHTB condicion3 else .

    IF              reduce using rule 63 (condicion -> IF LEFTP condicion1 RIGHTP LEFTB bloque RIGHTB condicion3 else .)
    WHILE           reduce using rule 63 (condicion -> IF LEFTP condicion1 RIGHTP LEFTB bloque RIGHTB condicion3 else .)
    RETURN          reduce using rule 63 (condicion -> IF LEFTP condicion1 RIGHTP LEFTB bloque RIGHTB condicion3 else .)
    ID              reduce using rule 63 (condicion -> IF LEFTP condicion1 RIGHTP LEFTB bloque RIGHTB condicion3 else .)
    PRINT           reduce using rule 63 (condicion -> IF LEFTP condicion1 RIGHTP LEFTB bloque RIGHTB condicion3 else .)
    DRAW_DOT        reduce using rule 63 (condicion -> IF LEFTP condicion1 RIGHTP LEFTB bloque RIGHTB condicion3 else .)
    DRAW_LINE       reduce using rule 63 (condicion -> IF LEFTP condicion1 RIGHTP LEFTB bloque RIGHTB condicion3 else .)
    DRAW_CIRCLE     reduce using rule 63 (condicion -> IF LEFTP condicion1 RIGHTP LEFTB bloque RIGHTB condicion3 else .)
    DRAW_TRIANGLE   reduce using rule 63 (condicion -> IF LEFTP condicion1 RIGHTP LEFTB bloque RIGHTB condicion3 else .)
    DRAW_SQUARE     reduce using rule 63 (condicion -> IF LEFTP condicion1 RIGHTP LEFTB bloque RIGHTB condicion3 else .)
    DRAW_RECTANGLE  reduce using rule 63 (condicion -> IF LEFTP condicion1 RIGHTP LEFTB bloque RIGHTB condicion3 else .)
    DRAW_QUADRITERAL reduce using rule 63 (condicion -> IF LEFTP condicion1 RIGHTP LEFTB bloque RIGHTB condicion3 else .)
    RIGHTB          reduce using rule 63 (condicion -> IF LEFTP condicion1 RIGHTP LEFTB bloque RIGHTB condicion3 else .)


state 289

    (64) else -> ELSE . LEFTB bloque condicion4 RIGHTB

    LEFTB           shift and go to state 299


state 290

    (65) else -> empty .

    IF              reduce using rule 65 (else -> empty .)
    WHILE           reduce using rule 65 (else -> empty .)
    RETURN          reduce using rule 65 (else -> empty .)
    ID              reduce using rule 65 (else -> empty .)
    PRINT           reduce using rule 65 (else -> empty .)
    DRAW_DOT        reduce using rule 65 (else -> empty .)
    DRAW_LINE       reduce using rule 65 (else -> empty .)
    DRAW_CIRCLE     reduce using rule 65 (else -> empty .)
    DRAW_TRIANGLE   reduce using rule 65 (else -> empty .)
    DRAW_SQUARE     reduce using rule 65 (else -> empty .)
    DRAW_RECTANGLE  reduce using rule 65 (else -> empty .)
    DRAW_QUADRITERAL reduce using rule 65 (else -> empty .)
    RIGHTB          reduce using rule 65 (else -> empty .)


state 291

    (101) dibujaPunto -> DRAW_DOT LEFTP exp COMMA exp COMMA color RIGHTP SEMICOLON .

    IF              reduce using rule 101 (dibujaPunto -> DRAW_DOT LEFTP exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    WHILE           reduce using rule 101 (dibujaPunto -> DRAW_DOT LEFTP exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    RETURN          reduce using rule 101 (dibujaPunto -> DRAW_DOT LEFTP exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    ID              reduce using rule 101 (dibujaPunto -> DRAW_DOT LEFTP exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    PRINT           reduce using rule 101 (dibujaPunto -> DRAW_DOT LEFTP exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    DRAW_DOT        reduce using rule 101 (dibujaPunto -> DRAW_DOT LEFTP exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    DRAW_LINE       reduce using rule 101 (dibujaPunto -> DRAW_DOT LEFTP exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    DRAW_CIRCLE     reduce using rule 101 (dibujaPunto -> DRAW_DOT LEFTP exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    DRAW_TRIANGLE   reduce using rule 101 (dibujaPunto -> DRAW_DOT LEFTP exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    DRAW_SQUARE     reduce using rule 101 (dibujaPunto -> DRAW_DOT LEFTP exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    DRAW_RECTANGLE  reduce using rule 101 (dibujaPunto -> DRAW_DOT LEFTP exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    DRAW_QUADRITERAL reduce using rule 101 (dibujaPunto -> DRAW_DOT LEFTP exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    RIGHTB          reduce using rule 101 (dibujaPunto -> DRAW_DOT LEFTP exp COMMA exp COMMA color RIGHTP SEMICOLON .)


state 292

    (103) dibujaCirculo -> DRAW_CIRCLE LEFTP exp COMMA exp COMMA exp COMMA color . RIGHTP SEMICOLON

    RIGHTP          shift and go to state 300


state 293

    (105) dibujaCuadrado -> DRAW_SQUARE LEFTP exp COMMA exp COMMA exp COMMA color RIGHTP . SEMICOLON

    SEMICOLON       shift and go to state 301


state 294

    (107) dibujaCuadrilatero -> DRAW_QUADRITERAL LEFTP exp COMMA exp COMMA exp COMMA exp COMMA . exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON
    (69) exp -> . llamada
    (70) exp -> . expresion
    (49) llamada -> . ID llamafun LEFTP args RIGHTP
    (71) expresion -> . operador1 exp1
    (75) operador1 -> . operador2 exp2
    (83) operador2 -> . operador3 exp3
    (87) operador3 -> . operador4 exp4
    (92) operador4 -> . ID
    (93) operador4 -> . constante
    (94) operador4 -> . LEFTP expresion RIGHTP
    (95) constante -> . INT_CTE
    (96) constante -> . FLOAT_CTE
    (97) constante -> . CHAR_CTE
    (98) constante -> . STRING_CTE
    (99) constante -> . TRUE
    (100) constante -> . FALSE

    ID              shift and go to state 104
    LEFTP           shift and go to state 99
    INT_CTE         shift and go to state 105
    FLOAT_CTE       shift and go to state 107
    CHAR_CTE        shift and go to state 101
    STRING_CTE      shift and go to state 93
    TRUE            shift and go to state 97
    FALSE           shift and go to state 103

    expresion                      shift and go to state 106
    constante                      shift and go to state 102
    llamada                        shift and go to state 100
    exp                            shift and go to state 302
    operador1                      shift and go to state 94
    operador3                      shift and go to state 95
    operador2                      shift and go to state 96
    operador4                      shift and go to state 98

state 295

    (59) ciclo -> WHILE salto_ciclo LEFTP exp ciclo1 RIGHTP LEFTB bloque ciclo2 RIGHTB .

    IF              reduce using rule 59 (ciclo -> WHILE salto_ciclo LEFTP exp ciclo1 RIGHTP LEFTB bloque ciclo2 RIGHTB .)
    WHILE           reduce using rule 59 (ciclo -> WHILE salto_ciclo LEFTP exp ciclo1 RIGHTP LEFTB bloque ciclo2 RIGHTB .)
    RETURN          reduce using rule 59 (ciclo -> WHILE salto_ciclo LEFTP exp ciclo1 RIGHTP LEFTB bloque ciclo2 RIGHTB .)
    ID              reduce using rule 59 (ciclo -> WHILE salto_ciclo LEFTP exp ciclo1 RIGHTP LEFTB bloque ciclo2 RIGHTB .)
    PRINT           reduce using rule 59 (ciclo -> WHILE salto_ciclo LEFTP exp ciclo1 RIGHTP LEFTB bloque ciclo2 RIGHTB .)
    DRAW_DOT        reduce using rule 59 (ciclo -> WHILE salto_ciclo LEFTP exp ciclo1 RIGHTP LEFTB bloque ciclo2 RIGHTB .)
    DRAW_LINE       reduce using rule 59 (ciclo -> WHILE salto_ciclo LEFTP exp ciclo1 RIGHTP LEFTB bloque ciclo2 RIGHTB .)
    DRAW_CIRCLE     reduce using rule 59 (ciclo -> WHILE salto_ciclo LEFTP exp ciclo1 RIGHTP LEFTB bloque ciclo2 RIGHTB .)
    DRAW_TRIANGLE   reduce using rule 59 (ciclo -> WHILE salto_ciclo LEFTP exp ciclo1 RIGHTP LEFTB bloque ciclo2 RIGHTB .)
    DRAW_SQUARE     reduce using rule 59 (ciclo -> WHILE salto_ciclo LEFTP exp ciclo1 RIGHTP LEFTB bloque ciclo2 RIGHTB .)
    DRAW_RECTANGLE  reduce using rule 59 (ciclo -> WHILE salto_ciclo LEFTP exp ciclo1 RIGHTP LEFTB bloque ciclo2 RIGHTB .)
    DRAW_QUADRITERAL reduce using rule 59 (ciclo -> WHILE salto_ciclo LEFTP exp ciclo1 RIGHTP LEFTB bloque ciclo2 RIGHTB .)
    RIGHTB          reduce using rule 59 (ciclo -> WHILE salto_ciclo LEFTP exp ciclo1 RIGHTP LEFTB bloque ciclo2 RIGHTB .)


state 296

    (104) dibujaTriangulo -> DRAW_TRIANGLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA . exp COMMA exp COMMA color RIGHTP SEMICOLON
    (69) exp -> . llamada
    (70) exp -> . expresion
    (49) llamada -> . ID llamafun LEFTP args RIGHTP
    (71) expresion -> . operador1 exp1
    (75) operador1 -> . operador2 exp2
    (83) operador2 -> . operador3 exp3
    (87) operador3 -> . operador4 exp4
    (92) operador4 -> . ID
    (93) operador4 -> . constante
    (94) operador4 -> . LEFTP expresion RIGHTP
    (95) constante -> . INT_CTE
    (96) constante -> . FLOAT_CTE
    (97) constante -> . CHAR_CTE
    (98) constante -> . STRING_CTE
    (99) constante -> . TRUE
    (100) constante -> . FALSE

    ID              shift and go to state 104
    LEFTP           shift and go to state 99
    INT_CTE         shift and go to state 105
    FLOAT_CTE       shift and go to state 107
    CHAR_CTE        shift and go to state 101
    STRING_CTE      shift and go to state 93
    TRUE            shift and go to state 97
    FALSE           shift and go to state 103

    expresion                      shift and go to state 106
    constante                      shift and go to state 102
    llamada                        shift and go to state 100
    exp                            shift and go to state 303
    operador1                      shift and go to state 94
    operador3                      shift and go to state 95
    operador2                      shift and go to state 96
    operador4                      shift and go to state 98

state 297

    (102) dibujaLinea -> DRAW_LINE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA . color RIGHTP SEMICOLON
    (108) color -> . RED
    (109) color -> . BLUE
    (110) color -> . YELLOW
    (111) color -> . PURPLE
    (112) color -> . GREEN
    (113) color -> . BLACK
    (114) color -> . CYAN
    (115) color -> . WHITE

    RED             shift and go to state 269
    BLUE            shift and go to state 261
    YELLOW          shift and go to state 265
    PURPLE          shift and go to state 264
    GREEN           shift and go to state 263
    BLACK           shift and go to state 267
    CYAN            shift and go to state 266
    WHITE           shift and go to state 268

    color                          shift and go to state 304

state 298

    (106) dibujaRectangulo -> DRAW_RECTANGLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA . color RIGHTP SEMICOLON
    (108) color -> . RED
    (109) color -> . BLUE
    (110) color -> . YELLOW
    (111) color -> . PURPLE
    (112) color -> . GREEN
    (113) color -> . BLACK
    (114) color -> . CYAN
    (115) color -> . WHITE

    RED             shift and go to state 269
    BLUE            shift and go to state 261
    YELLOW          shift and go to state 265
    PURPLE          shift and go to state 264
    GREEN           shift and go to state 263
    BLACK           shift and go to state 267
    CYAN            shift and go to state 266
    WHITE           shift and go to state 268

    color                          shift and go to state 305

state 299

    (64) else -> ELSE LEFTB . bloque condicion4 RIGHTB
    (25) bloque -> . estatuto bloque
    (26) bloque -> . empty
    (32) estatuto -> . condicion
    (33) estatuto -> . ciclo
    (34) estatuto -> . return
    (35) estatuto -> . lectura
    (36) estatuto -> . escritura
    (37) estatuto -> . llamada SEMICOLON
    (38) estatuto -> . asignacion
    (39) estatuto -> . dibujaPunto
    (40) estatuto -> . dibujaLinea
    (41) estatuto -> . dibujaCirculo
    (42) estatuto -> . dibujaTriangulo
    (43) estatuto -> . dibujaCuadrado
    (44) estatuto -> . dibujaRectangulo
    (45) estatuto -> . dibujaCuadrilatero
    (116) empty -> .
    (63) condicion -> . IF LEFTP condicion1 RIGHTP LEFTB bloque RIGHTB condicion3 else
    (59) ciclo -> . WHILE salto_ciclo LEFTP exp ciclo1 RIGHTP LEFTB bloque ciclo2 RIGHTB
    (46) return -> . RETURN exp SEMICOLON
    (47) lectura -> . ID ASSIGN READ LEFTP RIGHTP SEMICOLON
    (48) escritura -> . PRINT LEFTP exp RIGHTP SEMICOLON
    (49) llamada -> . ID llamafun LEFTP args RIGHTP
    (56) asignacion -> . ID asign
    (57) asignacion -> . ID LEFTSB exp RIGHTSB asign
    (101) dibujaPunto -> . DRAW_DOT LEFTP exp COMMA exp COMMA color RIGHTP SEMICOLON
    (102) dibujaLinea -> . DRAW_LINE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON
    (103) dibujaCirculo -> . DRAW_CIRCLE LEFTP exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON
    (104) dibujaTriangulo -> . DRAW_TRIANGLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON
    (105) dibujaCuadrado -> . DRAW_SQUARE LEFTP exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON
    (106) dibujaRectangulo -> . DRAW_RECTANGLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON
    (107) dibujaCuadrilatero -> . DRAW_QUADRITERAL LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON

    RIGHTB          reduce using rule 116 (empty -> .)
    IF              shift and go to state 87
    WHILE           shift and go to state 68
    RETURN          shift and go to state 63
    ID              shift and go to state 86
    PRINT           shift and go to state 67
    DRAW_DOT        shift and go to state 89
    DRAW_LINE       shift and go to state 83
    DRAW_CIRCLE     shift and go to state 90
    DRAW_TRIANGLE   shift and go to state 69
    DRAW_SQUARE     shift and go to state 65
    DRAW_RECTANGLE  shift and go to state 84
    DRAW_QUADRITERAL shift and go to state 66

    dibujaTriangulo                shift and go to state 64
    dibujaCuadrado                 shift and go to state 70
    bloque                         shift and go to state 306
    dibujaCuadrilatero             shift and go to state 72
    ciclo                          shift and go to state 73
    estatuto                       shift and go to state 74
    llamada                        shift and go to state 75
    condicion                      shift and go to state 76
    dibujaLinea                    shift and go to state 77
    lectura                        shift and go to state 78
    empty                          shift and go to state 79
    dibujaCirculo                  shift and go to state 80
    dibujaRectangulo               shift and go to state 81
    return                         shift and go to state 82
    dibujaPunto                    shift and go to state 85
    asignacion                     shift and go to state 88
    escritura                      shift and go to state 91

state 300

    (103) dibujaCirculo -> DRAW_CIRCLE LEFTP exp COMMA exp COMMA exp COMMA color RIGHTP . SEMICOLON

    SEMICOLON       shift and go to state 307


state 301

    (105) dibujaCuadrado -> DRAW_SQUARE LEFTP exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .

    IF              reduce using rule 105 (dibujaCuadrado -> DRAW_SQUARE LEFTP exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    WHILE           reduce using rule 105 (dibujaCuadrado -> DRAW_SQUARE LEFTP exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    RETURN          reduce using rule 105 (dibujaCuadrado -> DRAW_SQUARE LEFTP exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    ID              reduce using rule 105 (dibujaCuadrado -> DRAW_SQUARE LEFTP exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    PRINT           reduce using rule 105 (dibujaCuadrado -> DRAW_SQUARE LEFTP exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    DRAW_DOT        reduce using rule 105 (dibujaCuadrado -> DRAW_SQUARE LEFTP exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    DRAW_LINE       reduce using rule 105 (dibujaCuadrado -> DRAW_SQUARE LEFTP exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    DRAW_CIRCLE     reduce using rule 105 (dibujaCuadrado -> DRAW_SQUARE LEFTP exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    DRAW_TRIANGLE   reduce using rule 105 (dibujaCuadrado -> DRAW_SQUARE LEFTP exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    DRAW_SQUARE     reduce using rule 105 (dibujaCuadrado -> DRAW_SQUARE LEFTP exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    DRAW_RECTANGLE  reduce using rule 105 (dibujaCuadrado -> DRAW_SQUARE LEFTP exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    DRAW_QUADRITERAL reduce using rule 105 (dibujaCuadrado -> DRAW_SQUARE LEFTP exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    RIGHTB          reduce using rule 105 (dibujaCuadrado -> DRAW_SQUARE LEFTP exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)


state 302

    (107) dibujaCuadrilatero -> DRAW_QUADRITERAL LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp . COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON

    COMMA           shift and go to state 308


state 303

    (104) dibujaTriangulo -> DRAW_TRIANGLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp . COMMA exp COMMA color RIGHTP SEMICOLON

    COMMA           shift and go to state 309


state 304

    (102) dibujaLinea -> DRAW_LINE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA color . RIGHTP SEMICOLON

    RIGHTP          shift and go to state 310


state 305

    (106) dibujaRectangulo -> DRAW_RECTANGLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA color . RIGHTP SEMICOLON

    RIGHTP          shift and go to state 311


state 306

    (64) else -> ELSE LEFTB bloque . condicion4 RIGHTB
    (68) condicion4 -> . empty
    (116) empty -> .

    RIGHTB          reduce using rule 116 (empty -> .)

    condicion4                     shift and go to state 312
    empty                          shift and go to state 313

state 307

    (103) dibujaCirculo -> DRAW_CIRCLE LEFTP exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .

    IF              reduce using rule 103 (dibujaCirculo -> DRAW_CIRCLE LEFTP exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    WHILE           reduce using rule 103 (dibujaCirculo -> DRAW_CIRCLE LEFTP exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    RETURN          reduce using rule 103 (dibujaCirculo -> DRAW_CIRCLE LEFTP exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    ID              reduce using rule 103 (dibujaCirculo -> DRAW_CIRCLE LEFTP exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    PRINT           reduce using rule 103 (dibujaCirculo -> DRAW_CIRCLE LEFTP exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    DRAW_DOT        reduce using rule 103 (dibujaCirculo -> DRAW_CIRCLE LEFTP exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    DRAW_LINE       reduce using rule 103 (dibujaCirculo -> DRAW_CIRCLE LEFTP exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    DRAW_CIRCLE     reduce using rule 103 (dibujaCirculo -> DRAW_CIRCLE LEFTP exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    DRAW_TRIANGLE   reduce using rule 103 (dibujaCirculo -> DRAW_CIRCLE LEFTP exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    DRAW_SQUARE     reduce using rule 103 (dibujaCirculo -> DRAW_CIRCLE LEFTP exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    DRAW_RECTANGLE  reduce using rule 103 (dibujaCirculo -> DRAW_CIRCLE LEFTP exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    DRAW_QUADRITERAL reduce using rule 103 (dibujaCirculo -> DRAW_CIRCLE LEFTP exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    RIGHTB          reduce using rule 103 (dibujaCirculo -> DRAW_CIRCLE LEFTP exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)


state 308

    (107) dibujaCuadrilatero -> DRAW_QUADRITERAL LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA . exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON
    (69) exp -> . llamada
    (70) exp -> . expresion
    (49) llamada -> . ID llamafun LEFTP args RIGHTP
    (71) expresion -> . operador1 exp1
    (75) operador1 -> . operador2 exp2
    (83) operador2 -> . operador3 exp3
    (87) operador3 -> . operador4 exp4
    (92) operador4 -> . ID
    (93) operador4 -> . constante
    (94) operador4 -> . LEFTP expresion RIGHTP
    (95) constante -> . INT_CTE
    (96) constante -> . FLOAT_CTE
    (97) constante -> . CHAR_CTE
    (98) constante -> . STRING_CTE
    (99) constante -> . TRUE
    (100) constante -> . FALSE

    ID              shift and go to state 104
    LEFTP           shift and go to state 99
    INT_CTE         shift and go to state 105
    FLOAT_CTE       shift and go to state 107
    CHAR_CTE        shift and go to state 101
    STRING_CTE      shift and go to state 93
    TRUE            shift and go to state 97
    FALSE           shift and go to state 103

    expresion                      shift and go to state 106
    constante                      shift and go to state 102
    llamada                        shift and go to state 100
    exp                            shift and go to state 314
    operador1                      shift and go to state 94
    operador3                      shift and go to state 95
    operador2                      shift and go to state 96
    operador4                      shift and go to state 98

state 309

    (104) dibujaTriangulo -> DRAW_TRIANGLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA . exp COMMA color RIGHTP SEMICOLON
    (69) exp -> . llamada
    (70) exp -> . expresion
    (49) llamada -> . ID llamafun LEFTP args RIGHTP
    (71) expresion -> . operador1 exp1
    (75) operador1 -> . operador2 exp2
    (83) operador2 -> . operador3 exp3
    (87) operador3 -> . operador4 exp4
    (92) operador4 -> . ID
    (93) operador4 -> . constante
    (94) operador4 -> . LEFTP expresion RIGHTP
    (95) constante -> . INT_CTE
    (96) constante -> . FLOAT_CTE
    (97) constante -> . CHAR_CTE
    (98) constante -> . STRING_CTE
    (99) constante -> . TRUE
    (100) constante -> . FALSE

    ID              shift and go to state 104
    LEFTP           shift and go to state 99
    INT_CTE         shift and go to state 105
    FLOAT_CTE       shift and go to state 107
    CHAR_CTE        shift and go to state 101
    STRING_CTE      shift and go to state 93
    TRUE            shift and go to state 97
    FALSE           shift and go to state 103

    expresion                      shift and go to state 106
    constante                      shift and go to state 102
    llamada                        shift and go to state 100
    exp                            shift and go to state 315
    operador1                      shift and go to state 94
    operador3                      shift and go to state 95
    operador2                      shift and go to state 96
    operador4                      shift and go to state 98

state 310

    (102) dibujaLinea -> DRAW_LINE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP . SEMICOLON

    SEMICOLON       shift and go to state 316


state 311

    (106) dibujaRectangulo -> DRAW_RECTANGLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP . SEMICOLON

    SEMICOLON       shift and go to state 317


state 312

    (64) else -> ELSE LEFTB bloque condicion4 . RIGHTB

    RIGHTB          shift and go to state 318


state 313

    (68) condicion4 -> empty .

    RIGHTB          reduce using rule 68 (condicion4 -> empty .)


state 314

    (107) dibujaCuadrilatero -> DRAW_QUADRITERAL LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp . COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON

    COMMA           shift and go to state 319


state 315

    (104) dibujaTriangulo -> DRAW_TRIANGLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp . COMMA color RIGHTP SEMICOLON

    COMMA           shift and go to state 320


state 316

    (102) dibujaLinea -> DRAW_LINE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .

    IF              reduce using rule 102 (dibujaLinea -> DRAW_LINE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    WHILE           reduce using rule 102 (dibujaLinea -> DRAW_LINE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    RETURN          reduce using rule 102 (dibujaLinea -> DRAW_LINE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    ID              reduce using rule 102 (dibujaLinea -> DRAW_LINE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    PRINT           reduce using rule 102 (dibujaLinea -> DRAW_LINE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    DRAW_DOT        reduce using rule 102 (dibujaLinea -> DRAW_LINE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    DRAW_LINE       reduce using rule 102 (dibujaLinea -> DRAW_LINE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    DRAW_CIRCLE     reduce using rule 102 (dibujaLinea -> DRAW_LINE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    DRAW_TRIANGLE   reduce using rule 102 (dibujaLinea -> DRAW_LINE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    DRAW_SQUARE     reduce using rule 102 (dibujaLinea -> DRAW_LINE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    DRAW_RECTANGLE  reduce using rule 102 (dibujaLinea -> DRAW_LINE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    DRAW_QUADRITERAL reduce using rule 102 (dibujaLinea -> DRAW_LINE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    RIGHTB          reduce using rule 102 (dibujaLinea -> DRAW_LINE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)


state 317

    (106) dibujaRectangulo -> DRAW_RECTANGLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .

    IF              reduce using rule 106 (dibujaRectangulo -> DRAW_RECTANGLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    WHILE           reduce using rule 106 (dibujaRectangulo -> DRAW_RECTANGLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    RETURN          reduce using rule 106 (dibujaRectangulo -> DRAW_RECTANGLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    ID              reduce using rule 106 (dibujaRectangulo -> DRAW_RECTANGLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    PRINT           reduce using rule 106 (dibujaRectangulo -> DRAW_RECTANGLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    DRAW_DOT        reduce using rule 106 (dibujaRectangulo -> DRAW_RECTANGLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    DRAW_LINE       reduce using rule 106 (dibujaRectangulo -> DRAW_RECTANGLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    DRAW_CIRCLE     reduce using rule 106 (dibujaRectangulo -> DRAW_RECTANGLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    DRAW_TRIANGLE   reduce using rule 106 (dibujaRectangulo -> DRAW_RECTANGLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    DRAW_SQUARE     reduce using rule 106 (dibujaRectangulo -> DRAW_RECTANGLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    DRAW_RECTANGLE  reduce using rule 106 (dibujaRectangulo -> DRAW_RECTANGLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    DRAW_QUADRITERAL reduce using rule 106 (dibujaRectangulo -> DRAW_RECTANGLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    RIGHTB          reduce using rule 106 (dibujaRectangulo -> DRAW_RECTANGLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)


state 318

    (64) else -> ELSE LEFTB bloque condicion4 RIGHTB .

    IF              reduce using rule 64 (else -> ELSE LEFTB bloque condicion4 RIGHTB .)
    WHILE           reduce using rule 64 (else -> ELSE LEFTB bloque condicion4 RIGHTB .)
    RETURN          reduce using rule 64 (else -> ELSE LEFTB bloque condicion4 RIGHTB .)
    ID              reduce using rule 64 (else -> ELSE LEFTB bloque condicion4 RIGHTB .)
    PRINT           reduce using rule 64 (else -> ELSE LEFTB bloque condicion4 RIGHTB .)
    DRAW_DOT        reduce using rule 64 (else -> ELSE LEFTB bloque condicion4 RIGHTB .)
    DRAW_LINE       reduce using rule 64 (else -> ELSE LEFTB bloque condicion4 RIGHTB .)
    DRAW_CIRCLE     reduce using rule 64 (else -> ELSE LEFTB bloque condicion4 RIGHTB .)
    DRAW_TRIANGLE   reduce using rule 64 (else -> ELSE LEFTB bloque condicion4 RIGHTB .)
    DRAW_SQUARE     reduce using rule 64 (else -> ELSE LEFTB bloque condicion4 RIGHTB .)
    DRAW_RECTANGLE  reduce using rule 64 (else -> ELSE LEFTB bloque condicion4 RIGHTB .)
    DRAW_QUADRITERAL reduce using rule 64 (else -> ELSE LEFTB bloque condicion4 RIGHTB .)
    RIGHTB          reduce using rule 64 (else -> ELSE LEFTB bloque condicion4 RIGHTB .)


state 319

    (107) dibujaCuadrilatero -> DRAW_QUADRITERAL LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA . exp COMMA exp COMMA color RIGHTP SEMICOLON
    (69) exp -> . llamada
    (70) exp -> . expresion
    (49) llamada -> . ID llamafun LEFTP args RIGHTP
    (71) expresion -> . operador1 exp1
    (75) operador1 -> . operador2 exp2
    (83) operador2 -> . operador3 exp3
    (87) operador3 -> . operador4 exp4
    (92) operador4 -> . ID
    (93) operador4 -> . constante
    (94) operador4 -> . LEFTP expresion RIGHTP
    (95) constante -> . INT_CTE
    (96) constante -> . FLOAT_CTE
    (97) constante -> . CHAR_CTE
    (98) constante -> . STRING_CTE
    (99) constante -> . TRUE
    (100) constante -> . FALSE

    ID              shift and go to state 104
    LEFTP           shift and go to state 99
    INT_CTE         shift and go to state 105
    FLOAT_CTE       shift and go to state 107
    CHAR_CTE        shift and go to state 101
    STRING_CTE      shift and go to state 93
    TRUE            shift and go to state 97
    FALSE           shift and go to state 103

    expresion                      shift and go to state 106
    constante                      shift and go to state 102
    llamada                        shift and go to state 100
    exp                            shift and go to state 321
    operador1                      shift and go to state 94
    operador3                      shift and go to state 95
    operador2                      shift and go to state 96
    operador4                      shift and go to state 98

state 320

    (104) dibujaTriangulo -> DRAW_TRIANGLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA . color RIGHTP SEMICOLON
    (108) color -> . RED
    (109) color -> . BLUE
    (110) color -> . YELLOW
    (111) color -> . PURPLE
    (112) color -> . GREEN
    (113) color -> . BLACK
    (114) color -> . CYAN
    (115) color -> . WHITE

    RED             shift and go to state 269
    BLUE            shift and go to state 261
    YELLOW          shift and go to state 265
    PURPLE          shift and go to state 264
    GREEN           shift and go to state 263
    BLACK           shift and go to state 267
    CYAN            shift and go to state 266
    WHITE           shift and go to state 268

    color                          shift and go to state 322

state 321

    (107) dibujaCuadrilatero -> DRAW_QUADRITERAL LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp . COMMA exp COMMA color RIGHTP SEMICOLON

    COMMA           shift and go to state 323


state 322

    (104) dibujaTriangulo -> DRAW_TRIANGLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color . RIGHTP SEMICOLON

    RIGHTP          shift and go to state 324


state 323

    (107) dibujaCuadrilatero -> DRAW_QUADRITERAL LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA . exp COMMA color RIGHTP SEMICOLON
    (69) exp -> . llamada
    (70) exp -> . expresion
    (49) llamada -> . ID llamafun LEFTP args RIGHTP
    (71) expresion -> . operador1 exp1
    (75) operador1 -> . operador2 exp2
    (83) operador2 -> . operador3 exp3
    (87) operador3 -> . operador4 exp4
    (92) operador4 -> . ID
    (93) operador4 -> . constante
    (94) operador4 -> . LEFTP expresion RIGHTP
    (95) constante -> . INT_CTE
    (96) constante -> . FLOAT_CTE
    (97) constante -> . CHAR_CTE
    (98) constante -> . STRING_CTE
    (99) constante -> . TRUE
    (100) constante -> . FALSE

    ID              shift and go to state 104
    LEFTP           shift and go to state 99
    INT_CTE         shift and go to state 105
    FLOAT_CTE       shift and go to state 107
    CHAR_CTE        shift and go to state 101
    STRING_CTE      shift and go to state 93
    TRUE            shift and go to state 97
    FALSE           shift and go to state 103

    expresion                      shift and go to state 106
    constante                      shift and go to state 102
    llamada                        shift and go to state 100
    exp                            shift and go to state 325
    operador1                      shift and go to state 94
    operador3                      shift and go to state 95
    operador2                      shift and go to state 96
    operador4                      shift and go to state 98

state 324

    (104) dibujaTriangulo -> DRAW_TRIANGLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP . SEMICOLON

    SEMICOLON       shift and go to state 326


state 325

    (107) dibujaCuadrilatero -> DRAW_QUADRITERAL LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp . COMMA color RIGHTP SEMICOLON

    COMMA           shift and go to state 327


state 326

    (104) dibujaTriangulo -> DRAW_TRIANGLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .

    IF              reduce using rule 104 (dibujaTriangulo -> DRAW_TRIANGLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    WHILE           reduce using rule 104 (dibujaTriangulo -> DRAW_TRIANGLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    RETURN          reduce using rule 104 (dibujaTriangulo -> DRAW_TRIANGLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    ID              reduce using rule 104 (dibujaTriangulo -> DRAW_TRIANGLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    PRINT           reduce using rule 104 (dibujaTriangulo -> DRAW_TRIANGLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    DRAW_DOT        reduce using rule 104 (dibujaTriangulo -> DRAW_TRIANGLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    DRAW_LINE       reduce using rule 104 (dibujaTriangulo -> DRAW_TRIANGLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    DRAW_CIRCLE     reduce using rule 104 (dibujaTriangulo -> DRAW_TRIANGLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    DRAW_TRIANGLE   reduce using rule 104 (dibujaTriangulo -> DRAW_TRIANGLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    DRAW_SQUARE     reduce using rule 104 (dibujaTriangulo -> DRAW_TRIANGLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    DRAW_RECTANGLE  reduce using rule 104 (dibujaTriangulo -> DRAW_TRIANGLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    DRAW_QUADRITERAL reduce using rule 104 (dibujaTriangulo -> DRAW_TRIANGLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    RIGHTB          reduce using rule 104 (dibujaTriangulo -> DRAW_TRIANGLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)


state 327

    (107) dibujaCuadrilatero -> DRAW_QUADRITERAL LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA . color RIGHTP SEMICOLON
    (108) color -> . RED
    (109) color -> . BLUE
    (110) color -> . YELLOW
    (111) color -> . PURPLE
    (112) color -> . GREEN
    (113) color -> . BLACK
    (114) color -> . CYAN
    (115) color -> . WHITE

    RED             shift and go to state 269
    BLUE            shift and go to state 261
    YELLOW          shift and go to state 265
    PURPLE          shift and go to state 264
    GREEN           shift and go to state 263
    BLACK           shift and go to state 267
    CYAN            shift and go to state 266
    WHITE           shift and go to state 268

    color                          shift and go to state 328

state 328

    (107) dibujaCuadrilatero -> DRAW_QUADRITERAL LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color . RIGHTP SEMICOLON

    RIGHTP          shift and go to state 329


state 329

    (107) dibujaCuadrilatero -> DRAW_QUADRITERAL LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP . SEMICOLON

    SEMICOLON       shift and go to state 330


state 330

    (107) dibujaCuadrilatero -> DRAW_QUADRITERAL LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .

    IF              reduce using rule 107 (dibujaCuadrilatero -> DRAW_QUADRITERAL LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    WHILE           reduce using rule 107 (dibujaCuadrilatero -> DRAW_QUADRITERAL LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    RETURN          reduce using rule 107 (dibujaCuadrilatero -> DRAW_QUADRITERAL LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    ID              reduce using rule 107 (dibujaCuadrilatero -> DRAW_QUADRITERAL LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    PRINT           reduce using rule 107 (dibujaCuadrilatero -> DRAW_QUADRITERAL LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    DRAW_DOT        reduce using rule 107 (dibujaCuadrilatero -> DRAW_QUADRITERAL LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    DRAW_LINE       reduce using rule 107 (dibujaCuadrilatero -> DRAW_QUADRITERAL LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    DRAW_CIRCLE     reduce using rule 107 (dibujaCuadrilatero -> DRAW_QUADRITERAL LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    DRAW_TRIANGLE   reduce using rule 107 (dibujaCuadrilatero -> DRAW_QUADRITERAL LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    DRAW_SQUARE     reduce using rule 107 (dibujaCuadrilatero -> DRAW_QUADRITERAL LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    DRAW_RECTANGLE  reduce using rule 107 (dibujaCuadrilatero -> DRAW_QUADRITERAL LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    DRAW_QUADRITERAL reduce using rule 107 (dibujaCuadrilatero -> DRAW_QUADRITERAL LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)
    RIGHTB          reduce using rule 107 (dibujaCuadrilatero -> DRAW_QUADRITERAL LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON .)

