
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightASSIGNleftANDORleftEQUALSNOTEQUALleftGREATERTHANGREATEREQUALLESSTHANLESSEQUALleftSUMLESSleftTIMESDIVISIONID LEFTSB RIGHTSB COMMA SEMICOLON COLON LEFTP RIGHTP LEFTB RIGHTB ASSIGN FLOAT_CTE INT_CTE CHAR_CTE STRING_CTE TIMES DIVISION SUM LESS EQUALS GREATEREQUAL GREATERTHAN LESSTHAN LESSEQUAL NOTEQUAL OR AND RETURN STRING INT VOID FLOAT YELLOW ELSE CHAR PRINT BOOLEAN DRAW_CIRCLE CYAN FALSE AW4 TRUE IF BLUE DRAW_TRIANGLE MB DRAW_LINE DRAW_SQUARE PURPLE DRAW_RECTANGLE LY SNOW READ WHILE PROGRAM DRAW_DOT FG VAR GREEN WHITE MAIN DRAW_QUADRITERAL METHOD RED BLACKprograma :  PROGRAM ID COLON globales metodos goto_maingoto_main : VOID MAIN scopemain LEFTP RIGHTP LEFTB declara_var bloque RIGHTBscopemain : emptyglobales : declara_vardeclara_var : emptydeclara_var : variablesvariables : VAR tipo var lista_variables SEMICOLON declara_varlista_variables : COMMA var lista_variables\n        | emptyvar : ID\n        | ID LEFTSB INT_CTE RIGHTSBmetodos : metodo metodos\n        | emptymetodo : METHOD tipo_metodo ID inicio_method LEFTP params RIGHTP LEFTB method_vars bloque RIGHTB end_methodinicio_method : emptyend_method : emptytipo_metodo : VOID\n        | tipoparams : empty\n            | parametro parauxparaux : empty\n            | COMMA parametro parauxparametro : tipo IDmethod_vars : declara_varbloque : estatuto bloque\n        | emptytipo : INT\n        | CHAR\n        | BOOLEAN\n        | FLOAT\n        | STRINGestatuto : condicion\n        | ciclo\n        | return\n        | lectura\n        | escritura\n        | llamada SEMICOLON\n        | asignacion\n        | dibujaPunto\n        | dibujaLinea\n        | dibujaCirculo\n        | dibujaTriangulo\n        | dibujaCuadrado\n        | dibujaRectangulo\n        | dibujaCuadrilatero\n        return : RETURN exp SEMICOLONlectura : ID ASSIGN READ LEFTP RIGHTP SEMICOLONescritura : PRINT LEFTP exp RIGHTP SEMICOLONllamada : ID llamafun LEFTP args RIGHTPllamafun : emptyargs : exp param listargsargs : emptylistargs : COMMA args\n        | emptyparam : emptyasignacion : ID asigarrayasigarray : LEFTSB exp RIGHTSB asignasigarray : asignasign : ASSIGN exp SEMICOLONciclo : WHILE salto_ciclo LEFTP exp ciclo1 RIGHTP LEFTB bloque ciclo2 RIGHTBsalto_ciclo : emptyciclo1 : emptyciclo2 : emptycondicion : IF LEFTP condicion1 RIGHTP LEFTB bloque RIGHTB elseelse : ELSE condicion3 LEFTB bloque condicion4 RIGHTBelse : emptycondicion1 : expcondicion3 : emptycondicion4 : emptyexp : llamada\n        | expresion\n        expresion : operador1 exp1exp1 : emptyexp1 : AND saveop operador1 exp1exp1 : OR saveop operador1 exp1operador1 : operador2 exp2exp2 : emptyexp2 : EQUALS saveop operador2 exp2exp2 : NOTEQUAL saveop operador2 exp2exp2 : GREATEREQUAL saveop operador2 exp2exp2 : GREATERTHAN saveop operador2 exp2exp2 : LESSTHAN saveop operador2 exp2exp2 : LESSEQUAL saveop operador2 exp2operador2 : operador3 exp3exp3 : emptyexp3 : SUM saveop operador3 exp3exp3 : LESS saveop operador3 exp3operador3 : operador4 exp4exp4 : emptyexp4 : TIMES saveop operador4 exp4exp4 : DIVISION saveop operador4 exp4saveop : emptyoperador4 : ID idarrayidarray : LEFTSB exp RIGHTSBidarray : emptyoperador4 : constanteoperador4 : LEFTP expresion RIGHTPconstante : INT_CTEconstante : FLOAT_CTEconstante : CHAR_CTEconstante : STRING_CTEconstante : TRUE\n            | FALSEdibujaPunto : DRAW_DOT LEFTP exp COMMA exp COMMA color RIGHTP SEMICOLONdibujaLinea : DRAW_LINE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLONdibujaCirculo : DRAW_CIRCLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLONdibujaTriangulo : DRAW_TRIANGLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLONdibujaCuadrado : DRAW_SQUARE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLONdibujaRectangulo : DRAW_RECTANGLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLONdibujaCuadrilatero : DRAW_QUADRITERAL LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLONcolor : RED \n        | BLUE \n        | YELLOW \n        | PURPLE \n        | GREEN \n        | BLACK \n        | CYAN \n        | WHITE\n        | FG \n        | AW4\n        | MB\n        | SNOW\n        | LYempty :'
    
_lr_action_items = {'NOTEQUAL':([93,95,96,97,98,101,102,103,104,105,107,135,137,148,149,151,153,154,186,187,207,208,209,210,211,212,213,214,215,216,217,237,238,245,246,],[-101,-124,138,-102,-124,-100,-96,-103,-124,-98,-99,-84,-85,-88,-89,-124,-93,-95,-97,-95,-124,-124,138,138,138,138,138,138,-124,-124,-94,-87,-86,-91,-90,]),'STRING_CTE':([63,99,109,110,111,114,118,119,120,121,126,127,128,130,132,134,136,138,139,141,142,143,144,146,147,152,159,166,173,174,175,176,177,178,179,180,181,182,183,184,185,189,190,193,194,195,203,204,227,247,248,250,251,252,254,259,283,284,286,287,288,293,306,308,309,310,321,322,335,336,343,347,],[93,93,93,93,93,93,93,93,93,93,93,93,93,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,93,93,93,93,-92,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,]),'RETURN':([6,9,38,43,56,58,59,61,62,64,70,72,73,74,76,77,78,80,81,82,85,88,91,117,123,124,155,198,220,226,232,253,262,267,289,291,303,307,311,328,333,334,341,342,350,354,],[-6,-5,-124,-7,-124,-124,63,-24,63,-42,-43,-45,-33,63,-32,-40,-35,-41,-44,-34,-39,-38,-36,-37,-56,-58,-46,-59,-48,-57,63,-47,63,-124,-64,-66,-104,-60,63,-108,-65,-106,-105,-109,-107,-110,]),'LESS':([93,95,97,98,101,102,103,104,105,107,148,149,151,153,154,186,187,207,208,215,216,217,245,246,],[-101,134,-102,-124,-100,-96,-103,-124,-98,-99,-88,-89,-124,-93,-95,-97,-95,134,134,-124,-124,-94,-91,-90,]),'READ':([121,],[164,]),'VOID':([4,5,6,7,9,10,11,12,13,20,38,43,129,171,172,],[-124,-4,-6,-124,-5,-124,22,25,-13,-12,-124,-7,-124,-14,-16,]),'DRAW_SQUARE':([6,9,38,43,56,58,59,61,62,64,70,72,73,74,76,77,78,80,81,82,85,88,91,117,123,124,155,198,220,226,232,253,262,267,289,291,303,307,311,328,333,334,341,342,350,354,],[-6,-5,-124,-7,-124,-124,65,-24,65,-42,-43,-45,-33,65,-32,-40,-35,-41,-44,-34,-39,-38,-36,-37,-56,-58,-46,-59,-48,-57,65,-47,65,-124,-64,-66,-104,-60,65,-108,-65,-106,-105,-109,-107,-110,]),'YELLOW':([258,305,312,323,324,344,351,],[276,276,276,276,276,276,276,]),'DRAW_QUADRITERAL':([6,9,38,43,56,58,59,61,62,64,70,72,73,74,76,77,78,80,81,82,85,88,91,117,123,124,155,198,220,226,232,253,262,267,289,291,303,307,311,328,333,334,341,342,350,354,],[-6,-5,-124,-7,-124,-124,66,-24,66,-42,-43,-45,-33,66,-32,-40,-35,-41,-44,-34,-39,-38,-36,-37,-56,-58,-46,-59,-48,-57,66,-47,66,-124,-64,-66,-104,-60,66,-108,-65,-106,-105,-109,-107,-110,]),'CHAR':([8,11,41,52,],[17,17,17,17,]),'LESSEQUAL':([93,95,96,97,98,101,102,103,104,105,107,135,137,148,149,151,153,154,186,187,207,208,209,210,211,212,213,214,215,216,217,237,238,245,246,],[-101,-124,144,-102,-124,-100,-96,-103,-124,-98,-99,-84,-85,-88,-89,-124,-93,-95,-97,-95,-124,-124,144,144,144,144,144,144,-124,-124,-94,-87,-86,-91,-90,]),'WHILE':([6,9,38,43,56,58,59,61,62,64,70,72,73,74,76,77,78,80,81,82,85,88,91,117,123,124,155,198,220,226,232,253,262,267,289,291,303,307,311,328,333,334,341,342,350,354,],[-6,-5,-124,-7,-124,-124,68,-24,68,-42,-43,-45,-33,68,-32,-40,-35,-41,-44,-34,-39,-38,-36,-37,-56,-58,-46,-59,-48,-57,68,-47,68,-124,-64,-66,-104,-60,68,-108,-65,-106,-105,-109,-107,-110,]),'PROGRAM':([0,],[1,]),'DRAW_TRIANGLE':([6,9,38,43,56,58,59,61,62,64,70,72,73,74,76,77,78,80,81,82,85,88,91,117,123,124,155,198,220,226,232,253,262,267,289,291,303,307,311,328,333,334,341,342,350,354,],[-6,-5,-124,-7,-124,-124,69,-24,69,-42,-43,-45,-33,69,-32,-40,-35,-41,-44,-34,-39,-38,-36,-37,-56,-58,-46,-59,-48,-57,69,-47,69,-124,-64,-66,-104,-60,69,-108,-65,-106,-105,-109,-107,-110,]),'FG':([258,305,312,323,324,344,351,],[273,273,273,273,273,273,273,]),'PRINT':([6,9,38,43,56,58,59,61,62,64,70,72,73,74,76,77,78,80,81,82,85,88,91,117,123,124,155,198,220,226,232,253,262,267,289,291,303,307,311,328,333,334,341,342,350,354,],[-6,-5,-124,-7,-124,-124,67,-24,67,-42,-43,-45,-33,67,-32,-40,-35,-41,-44,-34,-39,-38,-36,-37,-56,-58,-46,-59,-48,-57,67,-47,67,-124,-64,-66,-104,-60,67,-108,-65,-106,-105,-109,-107,-110,]),'CYAN':([258,305,312,323,324,344,351,],[277,277,277,277,277,277,277,]),'TRUE':([63,99,109,110,111,114,118,119,120,121,126,127,128,130,132,134,136,138,139,141,142,143,144,146,147,152,159,166,173,174,175,176,177,178,179,180,181,182,183,184,185,189,190,193,194,195,203,204,227,247,248,250,251,252,254,259,283,284,286,287,288,293,306,308,309,310,321,322,335,336,343,347,],[97,97,97,97,97,97,97,97,97,97,97,97,97,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,97,97,97,97,-92,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,]),'ELSE':([267,],[290,]),'RED':([258,305,312,323,324,344,351,],[280,280,280,280,280,280,280,]),'BLUE':([258,305,312,323,324,344,351,],[268,268,268,268,268,268,268,]),'LEFTSB':([27,86,104,151,],[33,120,152,152,]),'LEFTP':([28,29,34,35,36,37,63,65,66,67,68,69,83,84,86,87,89,90,99,104,109,110,111,112,113,114,118,119,120,121,122,125,126,127,128,130,132,134,136,138,139,141,142,143,144,146,147,152,154,159,164,166,173,174,175,176,177,178,179,180,181,182,183,184,185,189,190,193,194,195,203,204,227,247,248,250,251,252,254,259,283,284,286,287,288,293,306,308,309,310,321,322,335,336,343,347,],[-124,-124,41,-15,42,-3,99,109,110,111,-124,114,118,119,-124,126,127,128,99,-124,99,99,99,159,-61,99,99,99,99,99,-50,166,99,99,99,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,99,-50,99,197,99,99,-92,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,]),'SEMICOLON':([26,27,30,32,39,44,45,75,93,94,95,96,97,98,100,101,102,103,104,105,106,107,108,131,133,135,137,140,145,148,149,151,153,154,165,186,187,191,205,206,207,208,209,210,211,212,213,214,215,216,217,228,229,235,236,237,238,239,240,241,242,243,244,245,246,292,320,327,337,338,348,353,],[-124,-10,38,-9,-124,-8,-11,117,-101,-124,-124,-124,-102,-124,-70,-100,-96,-103,-124,-98,-71,-99,155,-72,-73,-84,-85,-76,-77,-88,-89,-124,-93,-95,198,-97,-95,220,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,-94,253,-49,-74,-75,-87,-86,-79,-80,-78,-82,-81,-83,-91,-90,303,328,334,341,342,350,354,]),'PURPLE':([258,305,312,323,324,344,351,],[275,275,275,275,275,275,275,]),'GREEN':([258,305,312,323,324,344,351,],[272,272,272,272,272,272,272,]),'CHAR_CTE':([63,99,109,110,111,114,118,119,120,121,126,127,128,130,132,134,136,138,139,141,142,143,144,146,147,152,159,166,173,174,175,176,177,178,179,180,181,182,183,184,185,189,190,193,194,195,203,204,227,247,248,250,251,252,254,259,283,284,286,287,288,293,306,308,309,310,321,322,335,336,343,347,],[101,101,101,101,101,101,101,101,101,101,101,101,101,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,101,101,101,101,-92,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,]),'COLON':([3,],[4,]),'LEFTB':([50,55,202,249,290,301,302,],[56,58,232,262,-124,311,-68,]),'COMMA':([26,27,39,45,47,51,57,93,94,95,96,97,98,100,101,102,103,104,105,106,107,131,133,135,137,140,145,148,149,151,153,154,156,157,160,161,162,169,170,186,187,201,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,223,224,225,229,230,231,233,234,235,236,237,238,239,240,241,242,243,244,245,246,260,261,263,264,265,282,294,295,298,299,300,304,314,315,316,317,329,330,339,340,345,349,],[31,-10,31,-11,52,-23,52,-101,-124,-124,-124,-102,-124,-70,-100,-96,-103,-124,-98,-71,-99,-72,-73,-84,-85,-76,-77,-88,-89,-124,-93,-95,189,190,193,194,195,203,204,-97,-95,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,-94,247,248,250,251,252,-49,-55,254,258,259,-74,-75,-87,-86,-79,-80,-78,-82,-81,-83,-91,-90,283,284,286,287,288,293,305,306,308,309,310,312,321,322,323,324,335,336,343,344,347,351,]),'INT_CTE':([33,63,99,109,110,111,114,118,119,120,121,126,127,128,130,132,134,136,138,139,141,142,143,144,146,147,152,159,166,173,174,175,176,177,178,179,180,181,182,183,184,185,189,190,193,194,195,203,204,227,247,248,250,251,252,254,259,283,284,286,287,288,293,306,308,309,310,321,322,335,336,343,347,],[40,105,105,105,105,105,105,105,105,105,105,105,105,105,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,105,105,105,105,-92,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,]),'METHOD':([4,5,6,7,9,10,38,43,129,171,172,],[-124,-4,-6,11,-5,11,-124,-7,-124,-14,-16,]),'$end':([2,24,115,],[0,-1,-2,]),'DIVISION':([93,97,98,101,102,103,104,105,107,151,153,154,186,187,215,216,217,],[-101,-102,146,-100,-96,-103,-124,-98,-99,-124,-93,-95,-97,-95,146,146,-94,]),'STRING':([8,11,41,52,],[19,19,19,19,]),'SNOW':([258,305,312,323,324,344,351,],[274,274,274,274,274,274,274,]),'AW4':([258,305,312,323,324,344,351,],[269,269,269,269,269,269,269,]),'GREATEREQUAL':([93,95,96,97,98,101,102,103,104,105,107,135,137,148,149,151,153,154,186,187,207,208,209,210,211,212,213,214,215,216,217,237,238,245,246,],[-101,-124,139,-102,-124,-100,-96,-103,-124,-98,-99,-84,-85,-88,-89,-124,-93,-95,-97,-95,-124,-124,139,139,139,139,139,139,-124,-124,-94,-87,-86,-91,-90,]),'DRAW_LINE':([6,9,38,43,56,58,59,61,62,64,70,72,73,74,76,77,78,80,81,82,85,88,91,117,123,124,155,198,220,226,232,253,262,267,289,291,303,307,311,328,333,334,341,342,350,354,],[-6,-5,-124,-7,-124,-124,83,-24,83,-42,-43,-45,-33,83,-32,-40,-35,-41,-44,-34,-39,-38,-36,-37,-56,-58,-46,-59,-48,-57,83,-47,83,-124,-64,-66,-104,-60,83,-108,-65,-106,-105,-109,-107,-110,]),'EQUALS':([93,95,96,97,98,101,102,103,104,105,107,135,137,148,149,151,153,154,186,187,207,208,209,210,211,212,213,214,215,216,217,237,238,245,246,],[-101,-124,141,-102,-124,-100,-96,-103,-124,-98,-99,-84,-85,-88,-89,-124,-93,-95,-97,-95,-124,-124,141,141,141,141,141,141,-124,-124,-94,-87,-86,-91,-90,]),'DRAW_RECTANGLE':([6,9,38,43,56,58,59,61,62,64,70,72,73,74,76,77,78,80,81,82,85,88,91,117,123,124,155,198,220,226,232,253,262,267,289,291,303,307,311,328,333,334,341,342,350,354,],[-6,-5,-124,-7,-124,-124,84,-24,84,-42,-43,-45,-33,84,-32,-40,-35,-41,-44,-34,-39,-38,-36,-37,-56,-58,-46,-59,-48,-57,84,-47,84,-124,-64,-66,-104,-60,84,-108,-65,-106,-105,-109,-107,-110,]),'GREATERTHAN':([93,95,96,97,98,101,102,103,104,105,107,135,137,148,149,151,153,154,186,187,207,208,209,210,211,212,213,214,215,216,217,237,238,245,246,],[-101,-124,143,-102,-124,-100,-96,-103,-124,-98,-99,-84,-85,-88,-89,-124,-93,-95,-97,-95,-124,-124,143,143,143,143,143,143,-124,-124,-94,-87,-86,-91,-90,]),'VAR':([4,38,56,58,],[8,8,8,8,]),'FALSE':([63,99,109,110,111,114,118,119,120,121,126,127,128,130,132,134,136,138,139,141,142,143,144,146,147,152,159,166,173,174,175,176,177,178,179,180,181,182,183,184,185,189,190,193,194,195,203,204,227,247,248,250,251,252,254,259,283,284,286,287,288,293,306,308,309,310,321,322,335,336,343,347,],[103,103,103,103,103,103,103,103,103,103,103,103,103,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,103,103,103,103,-92,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,]),'WHITE':([258,305,312,323,324,344,351,],[279,279,279,279,279,279,279,]),'TIMES':([93,97,98,101,102,103,104,105,107,151,153,154,186,187,215,216,217,],[-101,-102,147,-100,-96,-103,-124,-98,-99,-124,-93,-95,-97,-95,147,147,-94,]),'ID':([1,6,9,14,15,16,17,18,19,21,22,23,31,38,43,46,56,58,59,61,62,63,64,70,72,73,74,76,77,78,80,81,82,85,88,91,99,109,110,111,114,117,118,119,120,121,123,124,126,127,128,130,132,134,136,138,139,141,142,143,144,146,147,152,155,159,166,173,174,175,176,177,178,179,180,181,182,183,184,185,189,190,193,194,195,198,203,204,220,226,227,232,247,248,250,251,252,253,254,259,262,267,283,284,286,287,288,289,291,293,303,306,307,308,309,310,311,321,322,328,333,334,335,336,341,342,343,347,350,354,],[3,-6,-5,27,-27,-30,-28,-29,-31,-18,-17,28,27,-124,-7,51,-124,-124,86,-24,86,104,-42,-43,-45,-33,86,-32,-40,-35,-41,-44,-34,-39,-38,-36,151,104,104,104,104,-37,104,104,104,104,-56,-58,104,104,104,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,104,-46,104,104,151,-92,151,151,151,151,151,151,151,151,151,151,151,104,104,104,104,104,-59,104,104,-48,-57,104,86,104,104,104,104,104,-47,104,104,86,-124,104,104,104,104,104,-64,-66,104,-104,104,-60,104,104,104,86,104,104,-108,-65,-106,104,104,-105,-109,104,104,-107,-110,]),'IF':([6,9,38,43,56,58,59,61,62,64,70,72,73,74,76,77,78,80,81,82,85,88,91,117,123,124,155,198,220,226,232,253,262,267,289,291,303,307,311,328,333,334,341,342,350,354,],[-6,-5,-124,-7,-124,-124,87,-24,87,-42,-43,-45,-33,87,-32,-40,-35,-41,-44,-34,-39,-38,-36,-37,-56,-58,-46,-59,-48,-57,87,-47,87,-124,-64,-66,-104,-60,87,-108,-65,-106,-105,-109,-107,-110,]),'AND':([93,94,95,96,97,98,101,102,103,104,105,107,135,137,140,145,148,149,151,153,154,186,187,205,206,207,208,209,210,211,212,213,214,215,216,217,237,238,239,240,241,242,243,244,245,246,],[-101,130,-124,-124,-102,-124,-100,-96,-103,-124,-98,-99,-84,-85,-76,-77,-88,-89,-124,-93,-95,-97,-95,130,130,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,-94,-87,-86,-79,-80,-78,-82,-81,-83,-91,-90,]),'RIGHTP':([41,42,47,48,49,51,53,54,57,60,93,94,95,96,97,98,100,101,102,103,104,105,106,107,131,133,135,137,140,145,148,149,150,151,153,154,158,166,167,168,186,187,192,197,199,200,201,205,206,207,208,209,210,211,212,213,214,215,216,217,221,222,229,230,231,235,236,237,238,239,240,241,242,243,244,245,246,254,255,256,266,268,269,270,271,272,273,274,275,276,277,278,279,280,281,313,319,331,332,346,352,],[-124,50,-124,55,-19,-23,-21,-20,-124,-22,-101,-124,-124,-124,-102,-124,-70,-100,-96,-103,-124,-98,-71,-99,-72,-73,-84,-85,-76,-77,-88,-89,186,-124,-93,-95,191,-124,202,-67,-97,-95,-124,228,-52,229,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,-94,249,-62,-49,-55,-124,-74,-75,-87,-86,-79,-80,-78,-82,-81,-83,-91,-90,-124,-54,-51,-53,-112,-120,-121,292,-115,-119,-122,-114,-113,-117,-116,-118,-111,-123,320,327,337,338,348,353,]),'RIGHTSB':([40,93,94,95,96,97,98,100,101,102,103,104,105,106,107,131,133,135,137,140,145,148,149,151,153,154,163,186,187,188,205,206,207,208,209,210,211,212,213,214,215,216,217,229,235,236,237,238,239,240,241,242,243,244,245,246,],[45,-101,-124,-124,-124,-102,-124,-70,-100,-96,-103,-124,-98,-71,-99,-72,-73,-84,-85,-76,-77,-88,-89,-124,-93,-95,196,-97,-95,217,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,-94,-49,-74,-75,-87,-86,-79,-80,-78,-82,-81,-83,-91,-90,]),'MB':([258,305,312,323,324,344,351,],[270,270,270,270,270,270,270,]),'INT':([8,11,41,52,],[15,15,15,15,]),'SUM':([93,95,97,98,101,102,103,104,105,107,148,149,151,153,154,186,187,207,208,215,216,217,245,246,],[-101,136,-102,-124,-100,-96,-103,-124,-98,-99,-88,-89,-124,-93,-95,-97,-95,136,136,-124,-124,-94,-91,-90,]),'FLOAT':([8,11,41,52,],[16,16,16,16,]),'FLOAT_CTE':([63,99,109,110,111,114,118,119,120,121,126,127,128,130,132,134,136,138,139,141,142,143,144,146,147,152,159,166,173,174,175,176,177,178,179,180,181,182,183,184,185,189,190,193,194,195,203,204,227,247,248,250,251,252,254,259,283,284,286,287,288,293,306,308,309,310,321,322,335,336,343,347,],[107,107,107,107,107,107,107,107,107,107,107,107,107,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,107,107,107,107,-92,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,]),'LESSTHAN':([93,95,96,97,98,101,102,103,104,105,107,135,137,148,149,151,153,154,186,187,207,208,209,210,211,212,213,214,215,216,217,237,238,245,246,],[-101,-124,142,-102,-124,-100,-96,-103,-124,-98,-99,-84,-85,-88,-89,-124,-93,-95,-97,-95,-124,-124,142,142,142,142,142,142,-124,-124,-94,-87,-86,-91,-90,]),'DRAW_DOT':([6,9,38,43,56,58,59,61,62,64,70,72,73,74,76,77,78,80,81,82,85,88,91,117,123,124,155,198,220,226,232,253,262,267,289,291,303,307,311,328,333,334,341,342,350,354,],[-6,-5,-124,-7,-124,-124,89,-24,89,-42,-43,-45,-33,89,-32,-40,-35,-41,-44,-34,-39,-38,-36,-37,-56,-58,-46,-59,-48,-57,89,-47,89,-124,-64,-66,-104,-60,89,-108,-65,-106,-105,-109,-107,-110,]),'ASSIGN':([86,196,],[121,227,]),'BOOLEAN':([8,11,41,52,],[18,18,18,18,]),'LY':([258,305,312,323,324,344,351,],[281,281,281,281,281,281,281,]),'RIGHTB':([6,9,38,43,56,58,59,61,62,64,70,71,72,73,74,76,77,78,79,80,81,82,85,88,91,92,116,117,123,124,155,198,220,226,232,253,257,262,267,285,289,291,296,297,303,307,311,318,325,326,328,333,334,341,342,350,354,],[-6,-5,-124,-7,-124,-124,-124,-24,-124,-42,-43,115,-45,-33,-124,-32,-40,-35,-26,-41,-44,-34,-39,-38,-36,129,-25,-37,-56,-58,-46,-59,-48,-57,-124,-47,267,-124,-124,-124,-64,-66,307,-63,-104,-60,-124,-124,333,-69,-108,-65,-106,-105,-109,-107,-110,]),'BLACK':([258,305,312,323,324,344,351,],[278,278,278,278,278,278,278,]),'MAIN':([25,],[29,]),'OR':([93,94,95,96,97,98,101,102,103,104,105,107,135,137,140,145,148,149,151,153,154,186,187,205,206,207,208,209,210,211,212,213,214,215,216,217,237,238,239,240,241,242,243,244,245,246,],[-101,132,-124,-124,-102,-124,-100,-96,-103,-124,-98,-99,-84,-85,-76,-77,-88,-89,-124,-93,-95,-97,-95,132,132,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,-94,-87,-86,-79,-80,-78,-82,-81,-83,-91,-90,]),'DRAW_CIRCLE':([6,9,38,43,56,58,59,61,62,64,70,72,73,74,76,77,78,80,81,82,85,88,91,117,123,124,155,198,220,226,232,253,262,267,289,291,303,307,311,328,333,334,341,342,350,354,],[-6,-5,-124,-7,-124,-124,90,-24,90,-42,-43,-45,-33,90,-32,-40,-35,-41,-44,-34,-39,-38,-36,-37,-56,-58,-46,-59,-48,-57,90,-47,90,-124,-64,-66,-104,-60,90,-108,-65,-106,-105,-109,-107,-110,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'goto_main':([12,],[24,]),'idarray':([104,151,],[153,153,]),'constante':([63,99,109,110,111,114,118,119,120,121,126,127,128,152,159,166,173,175,176,177,178,179,180,181,182,183,184,185,189,190,193,194,195,203,204,227,247,248,250,251,252,254,259,283,284,286,287,288,293,306,308,309,310,321,322,335,336,343,347,],[102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,]),'declara_var':([4,38,56,58,],[5,43,59,61,]),'color':([258,305,312,323,324,344,351,],[271,313,319,331,332,346,352,]),'dibujaTriangulo':([59,62,74,232,262,311,],[64,64,64,64,64,64,]),'variables':([4,38,56,58,],[6,6,6,6,]),'end_method':([129,],[171,]),'condicion4':([318,],[325,]),'operador1':([63,99,109,110,111,114,118,119,120,121,126,127,128,152,159,166,173,175,189,190,193,194,195,203,204,227,247,248,250,251,252,254,259,283,284,286,287,288,293,306,308,309,310,321,322,335,336,343,347,],[94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,205,206,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,]),'condicion1':([126,],[167,]),'condicion3':([290,],[301,]),'dibujaCuadrado':([59,62,74,232,262,311,],[70,70,70,70,70,70,]),'bloque':([59,62,74,232,262,311,],[71,92,116,257,285,318,]),'operador2':([63,99,109,110,111,114,118,119,120,121,126,127,128,152,159,166,173,175,178,179,180,181,182,183,189,190,193,194,195,203,204,227,247,248,250,251,252,254,259,283,284,286,287,288,293,306,308,309,310,321,322,335,336,343,347,],[96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,209,210,211,212,213,214,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,]),'operador3':([63,99,109,110,111,114,118,119,120,121,126,127,128,152,159,166,173,175,176,177,178,179,180,181,182,183,189,190,193,194,195,203,204,227,247,248,250,251,252,254,259,283,284,286,287,288,293,306,308,309,310,321,322,335,336,343,347,],[95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,207,208,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,]),'dibujaCuadrilatero':([59,62,74,232,262,311,],[72,72,72,72,72,72,]),'method_vars':([58,],[62,]),'exp4':([98,215,216,],[148,245,246,]),'ciclo':([59,62,74,232,262,311,],[73,73,73,73,73,73,]),'tipo':([8,11,41,52,],[14,21,46,46,]),'paraux':([47,57,],[54,60,]),'exp3':([95,207,208,],[135,237,238,]),'exp2':([96,209,210,211,212,213,214,],[140,239,240,241,242,243,244,]),'exp1':([94,205,206,],[131,235,236,]),'estatuto':([59,62,74,232,262,311,],[74,74,74,74,74,74,]),'param':([201,],[231,]),'operador4':([63,99,109,110,111,114,118,119,120,121,126,127,128,152,159,166,173,175,176,177,178,179,180,181,182,183,184,185,189,190,193,194,195,203,204,227,247,248,250,251,252,254,259,283,284,286,287,288,293,306,308,309,310,321,322,335,336,343,347,],[98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,215,216,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,]),'llamada':([59,62,63,74,109,110,111,114,118,119,120,121,126,127,128,152,159,166,189,190,193,194,195,203,204,227,232,247,248,250,251,252,254,259,262,283,284,286,287,288,293,306,308,309,310,311,321,322,335,336,343,347,],[75,75,100,75,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,75,100,100,100,100,100,100,100,75,100,100,100,100,100,100,100,100,100,100,75,100,100,100,100,100,100,]),'condicion':([59,62,74,232,262,311,],[76,76,76,76,76,76,]),'tipo_metodo':([11,],[23,]),'llamafun':([86,104,],[125,125,]),'dibujaLinea':([59,62,74,232,262,311,],[77,77,77,77,77,77,]),'var':([14,31,],[26,39,]),'params':([41,],[48,]),'lectura':([59,62,74,232,262,311,],[78,78,78,78,78,78,]),'empty':([4,7,10,26,28,29,38,39,41,47,56,57,58,59,62,68,74,86,94,95,96,98,104,129,130,132,134,136,138,139,141,142,143,144,146,147,151,166,192,201,205,206,207,208,209,210,211,212,213,214,215,216,231,232,254,262,267,285,290,311,318,],[9,13,13,32,35,37,9,32,49,53,9,53,9,79,79,113,79,122,133,137,145,149,154,172,174,174,174,174,174,174,174,174,174,174,174,174,187,199,222,230,133,133,137,137,145,145,145,145,145,145,149,149,255,79,199,79,291,297,302,79,326,]),'dibujaCirculo':([59,62,74,232,262,311,],[80,80,80,80,80,80,]),'saveop':([130,132,134,136,138,139,141,142,143,144,146,147,],[173,175,176,177,178,179,180,181,182,183,184,185,]),'dibujaRectangulo':([59,62,74,232,262,311,],[81,81,81,81,81,81,]),'return':([59,62,74,232,262,311,],[82,82,82,82,82,82,]),'parametro':([41,52,],[47,57,]),'args':([166,254,],[200,266,]),'else':([267,],[289,]),'inicio_method':([28,],[34,]),'ciclo2':([285,],[296,]),'dibujaPunto':([59,62,74,232,262,311,],[85,85,85,85,85,85,]),'ciclo1':([192,],[221,]),'asigarray':([86,],[123,]),'listargs':([231,],[256,]),'expresion':([63,99,109,110,111,114,118,119,120,121,126,127,128,152,159,166,189,190,193,194,195,203,204,227,247,248,250,251,252,254,259,283,284,286,287,288,293,306,308,309,310,321,322,335,336,343,347,],[106,150,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,]),'scopemain':([29,],[36,]),'metodo':([7,10,],[10,10,]),'asignacion':([59,62,74,232,262,311,],[88,88,88,88,88,88,]),'metodos':([7,10,],[12,20,]),'asign':([86,196,],[124,226,]),'salto_ciclo':([68,],[112,]),'programa':([0,],[2,]),'exp':([63,109,110,111,114,118,119,120,121,126,127,128,152,159,166,189,190,193,194,195,203,204,227,247,248,250,251,252,254,259,283,284,286,287,288,293,306,308,309,310,321,322,335,336,343,347,],[108,156,157,158,160,161,162,163,165,168,169,170,188,192,201,218,219,223,224,225,233,234,165,260,261,263,264,265,201,282,294,295,298,299,300,304,314,315,316,317,329,330,339,340,345,349,]),'lista_variables':([26,39,],[30,44,]),'globales':([4,],[7,]),'escritura':([59,62,74,232,262,311,],[91,91,91,91,91,91,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> PROGRAM ID COLON globales metodos goto_main','programa',6,'p_programa','Parser.py',247),
  ('goto_main -> VOID MAIN scopemain LEFTP RIGHTP LEFTB declara_var bloque RIGHTB','goto_main',9,'p_goto_main','Parser.py',283),
  ('scopemain -> empty','scopemain',1,'p_scopemain','Parser.py',286),
  ('globales -> declara_var','globales',1,'p_globales','Parser.py',297),
  ('declara_var -> empty','declara_var',1,'p_declara_var_vacio','Parser.py',304),
  ('declara_var -> variables','declara_var',1,'p_declara_var','Parser.py',307),
  ('variables -> VAR tipo var lista_variables SEMICOLON declara_var','variables',6,'p_variables','Parser.py',315),
  ('lista_variables -> COMMA var lista_variables','lista_variables',3,'p_lista_variables','Parser.py',324),
  ('lista_variables -> empty','lista_variables',1,'p_lista_variables','Parser.py',325),
  ('var -> ID','var',1,'p_var','Parser.py',328),
  ('var -> ID LEFTSB INT_CTE RIGHTSB','var',4,'p_var','Parser.py',329),
  ('metodos -> metodo metodos','metodos',2,'p_metodos','Parser.py',350),
  ('metodos -> empty','metodos',1,'p_metodos','Parser.py',351),
  ('metodo -> METHOD tipo_metodo ID inicio_method LEFTP params RIGHTP LEFTB method_vars bloque RIGHTB end_method','metodo',12,'p_metodo','Parser.py',358),
  ('inicio_method -> empty','inicio_method',1,'p_inicio_method','Parser.py',371),
  ('end_method -> empty','end_method',1,'p_end_method','Parser.py',390),
  ('tipo_metodo -> VOID','tipo_metodo',1,'p_tipo_metodo','Parser.py',398),
  ('tipo_metodo -> tipo','tipo_metodo',1,'p_tipo_metodo','Parser.py',399),
  ('params -> empty','params',1,'p_params','Parser.py',411),
  ('params -> parametro paraux','params',2,'p_params','Parser.py',412),
  ('paraux -> empty','paraux',1,'p_paraux','Parser.py',415),
  ('paraux -> COMMA parametro paraux','paraux',3,'p_paraux','Parser.py',416),
  ('parametro -> tipo ID','parametro',2,'p_parametro','Parser.py',424),
  ('method_vars -> declara_var','method_vars',1,'p_method_vars','Parser.py',440),
  ('bloque -> estatuto bloque','bloque',2,'p_bloque','Parser.py',447),
  ('bloque -> empty','bloque',1,'p_bloque','Parser.py',448),
  ('tipo -> INT','tipo',1,'p_tipo','Parser.py',456),
  ('tipo -> CHAR','tipo',1,'p_tipo','Parser.py',457),
  ('tipo -> BOOLEAN','tipo',1,'p_tipo','Parser.py',458),
  ('tipo -> FLOAT','tipo',1,'p_tipo','Parser.py',459),
  ('tipo -> STRING','tipo',1,'p_tipo','Parser.py',460),
  ('estatuto -> condicion','estatuto',1,'p_estatuto','Parser.py',470),
  ('estatuto -> ciclo','estatuto',1,'p_estatuto','Parser.py',471),
  ('estatuto -> return','estatuto',1,'p_estatuto','Parser.py',472),
  ('estatuto -> lectura','estatuto',1,'p_estatuto','Parser.py',473),
  ('estatuto -> escritura','estatuto',1,'p_estatuto','Parser.py',474),
  ('estatuto -> llamada SEMICOLON','estatuto',2,'p_estatuto','Parser.py',475),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','Parser.py',476),
  ('estatuto -> dibujaPunto','estatuto',1,'p_estatuto','Parser.py',477),
  ('estatuto -> dibujaLinea','estatuto',1,'p_estatuto','Parser.py',478),
  ('estatuto -> dibujaCirculo','estatuto',1,'p_estatuto','Parser.py',479),
  ('estatuto -> dibujaTriangulo','estatuto',1,'p_estatuto','Parser.py',480),
  ('estatuto -> dibujaCuadrado','estatuto',1,'p_estatuto','Parser.py',481),
  ('estatuto -> dibujaRectangulo','estatuto',1,'p_estatuto','Parser.py',482),
  ('estatuto -> dibujaCuadrilatero','estatuto',1,'p_estatuto','Parser.py',483),
  ('return -> RETURN exp SEMICOLON','return',3,'p_return','Parser.py',491),
  ('lectura -> ID ASSIGN READ LEFTP RIGHTP SEMICOLON','lectura',6,'p_lectura','Parser.py',515),
  ('escritura -> PRINT LEFTP exp RIGHTP SEMICOLON','escritura',5,'p_escritura','Parser.py',536),
  ('llamada -> ID llamafun LEFTP args RIGHTP','llamada',5,'p_llamada','Parser.py',548),
  ('llamafun -> empty','llamafun',1,'p_llamafun','Parser.py',562),
  ('args -> exp param listargs','args',3,'p_args','Parser.py',577),
  ('args -> empty','args',1,'p_args_vacio','Parser.py',580),
  ('listargs -> COMMA args','listargs',2,'p_listargs','Parser.py',583),
  ('listargs -> empty','listargs',1,'p_listargs','Parser.py',584),
  ('param -> empty','param',1,'p_param','Parser.py',587),
  ('asignacion -> ID asigarray','asignacion',2,'p_asignacion','Parser.py',610),
  ('asigarray -> LEFTSB exp RIGHTSB asign','asigarray',4,'p_asignacion_array','Parser.py',645),
  ('asigarray -> asign','asigarray',1,'p_asignacion_array_empty','Parser.py',661),
  ('asign -> ASSIGN exp SEMICOLON','asign',3,'p_asign','Parser.py',664),
  ('ciclo -> WHILE salto_ciclo LEFTP exp ciclo1 RIGHTP LEFTB bloque ciclo2 RIGHTB','ciclo',10,'p_ciclo','Parser.py',675),
  ('salto_ciclo -> empty','salto_ciclo',1,'p_salto_ciclo','Parser.py',683),
  ('ciclo1 -> empty','ciclo1',1,'p_ciclo1','Parser.py',692),
  ('ciclo2 -> empty','ciclo2',1,'p_ciclo2','Parser.py',709),
  ('condicion -> IF LEFTP condicion1 RIGHTP LEFTB bloque RIGHTB else','condicion',8,'p_condicion','Parser.py',722),
  ('else -> ELSE condicion3 LEFTB bloque condicion4 RIGHTB','else',6,'p_else','Parser.py',725),
  ('else -> empty','else',1,'p_else_vacio','Parser.py',728),
  ('condicion1 -> exp','condicion1',1,'p_condicion1','Parser.py',735),
  ('condicion3 -> empty','condicion3',1,'p_condicion3','Parser.py',752),
  ('condicion4 -> empty','condicion4',1,'p_condicion4','Parser.py',765),
  ('exp -> llamada','exp',1,'p_exp','Parser.py',776),
  ('exp -> expresion','exp',1,'p_exp','Parser.py',777),
  ('expresion -> operador1 exp1','expresion',2,'p_expresion','Parser.py',786),
  ('exp1 -> empty','exp1',1,'p_exp1','Parser.py',789),
  ('exp1 -> AND saveop operador1 exp1','exp1',4,'p_exp1_and','Parser.py',793),
  ('exp1 -> OR saveop operador1 exp1','exp1',4,'p_exp1_or','Parser.py',796),
  ('operador1 -> operador2 exp2','operador1',2,'p_operador1','Parser.py',805),
  ('exp2 -> empty','exp2',1,'p_exp2_vacio','Parser.py',808),
  ('exp2 -> EQUALS saveop operador2 exp2','exp2',4,'p_exp2_equals','Parser.py',812),
  ('exp2 -> NOTEQUAL saveop operador2 exp2','exp2',4,'p_exp2_notequals','Parser.py',815),
  ('exp2 -> GREATEREQUAL saveop operador2 exp2','exp2',4,'p_exp2_greatherequal','Parser.py',818),
  ('exp2 -> GREATERTHAN saveop operador2 exp2','exp2',4,'p_exp2_greatherthan','Parser.py',821),
  ('exp2 -> LESSTHAN saveop operador2 exp2','exp2',4,'p_exp2_lessthan','Parser.py',824),
  ('exp2 -> LESSEQUAL saveop operador2 exp2','exp2',4,'p_exp2_lessequal','Parser.py',827),
  ('operador2 -> operador3 exp3','operador2',2,'p_operador2','Parser.py',836),
  ('exp3 -> empty','exp3',1,'p_exp3_vacio','Parser.py',839),
  ('exp3 -> SUM saveop operador3 exp3','exp3',4,'p_exp3_sum','Parser.py',843),
  ('exp3 -> LESS saveop operador3 exp3','exp3',4,'p_exp3_less','Parser.py',847),
  ('operador3 -> operador4 exp4','operador3',2,'p_operador3','Parser.py',856),
  ('exp4 -> empty','exp4',1,'p_exp4_empty','Parser.py',859),
  ('exp4 -> TIMES saveop operador4 exp4','exp4',4,'p_exp4_times','Parser.py',863),
  ('exp4 -> DIVISION saveop operador4 exp4','exp4',4,'p_exp4_division','Parser.py',867),
  ('saveop -> empty','saveop',1,'p_saveop','Parser.py',871),
  ('operador4 -> ID idarray','operador4',2,'p_operador4_id','Parser.py',881),
  ('idarray -> LEFTSB exp RIGHTSB','idarray',3,'p_idarray_full','Parser.py',922),
  ('idarray -> empty','idarray',1,'p_idarray_empty','Parser.py',934),
  ('operador4 -> constante','operador4',1,'p_operador4_cons','Parser.py',937),
  ('operador4 -> LEFTP expresion RIGHTP','operador4',3,'p_operador4_exp','Parser.py',940),
  ('constante -> INT_CTE','constante',1,'p_constante_int','Parser.py',948),
  ('constante -> FLOAT_CTE','constante',1,'p_constante_float','Parser.py',960),
  ('constante -> CHAR_CTE','constante',1,'p_constante_char','Parser.py',973),
  ('constante -> STRING_CTE','constante',1,'p_constante_string','Parser.py',985),
  ('constante -> TRUE','constante',1,'p_constante_true','Parser.py',997),
  ('constante -> FALSE','constante',1,'p_constante_true','Parser.py',998),
  ('dibujaPunto -> DRAW_DOT LEFTP exp COMMA exp COMMA color RIGHTP SEMICOLON','dibujaPunto',9,'p_dibujaPunto','Parser.py',1011),
  ('dibujaLinea -> DRAW_LINE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON','dibujaLinea',15,'p_dibujaLinea','Parser.py',1018),
  ('dibujaCirculo -> DRAW_CIRCLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON','dibujaCirculo',13,'p_dibujaCirculo','Parser.py',1029),
  ('dibujaTriangulo -> DRAW_TRIANGLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON','dibujaTriangulo',19,'p_dibujaTriangulo','Parser.py',1039),
  ('dibujaCuadrado -> DRAW_SQUARE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON','dibujaCuadrado',13,'p_dibujaCuadrado','Parser.py',1053),
  ('dibujaRectangulo -> DRAW_RECTANGLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON','dibujaRectangulo',15,'p_dibujaRectangulo','Parser.py',1063),
  ('dibujaCuadrilatero -> DRAW_QUADRITERAL LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON','dibujaCuadrilatero',23,'p_dibujaCuadrilatero','Parser.py',1073),
  ('color -> RED','color',1,'p_color','Parser.py',1089),
  ('color -> BLUE','color',1,'p_color','Parser.py',1090),
  ('color -> YELLOW','color',1,'p_color','Parser.py',1091),
  ('color -> PURPLE','color',1,'p_color','Parser.py',1092),
  ('color -> GREEN','color',1,'p_color','Parser.py',1093),
  ('color -> BLACK','color',1,'p_color','Parser.py',1094),
  ('color -> CYAN','color',1,'p_color','Parser.py',1095),
  ('color -> WHITE','color',1,'p_color','Parser.py',1096),
  ('color -> FG','color',1,'p_color','Parser.py',1097),
  ('color -> AW4','color',1,'p_color','Parser.py',1098),
  ('color -> MB','color',1,'p_color','Parser.py',1099),
  ('color -> SNOW','color',1,'p_color','Parser.py',1100),
  ('color -> LY','color',1,'p_color','Parser.py',1101),
  ('empty -> <empty>','empty',0,'p_empty','Parser.py',1111),
]
