
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightASSIGNleftANDORleftEQUALSNOTEQUALleftGREATERTHANGREATEREQUALLESSTHANLESSEQUALleftSUMLESSleftTIMESDIVISIONID LEFTSB RIGHTSB COMMA SEMICOLON COLON LEFTP RIGHTP LEFTB RIGHTB ASSIGN FLOAT_CTE INT_CTE CHAR_CTE STRING_CTE TIMES DIVISION SUM LESS EQUALS GREATEREQUAL GREATERTHAN LESSTHAN LESSEQUAL NOTEQUAL OR AND RETURN STRING INT VOID FLOAT YELLOW ELSE CHAR PRINT BOOLEAN DRAW_CIRCLE CYAN FALSE AW4 TRUE IF BLUE DRAW_TRIANGLE MB DRAW_LINE DRAW_SQUARE PURPLE DRAW_RECTANGLE LY SNOW READ WHILE PROGRAM DRAW_DOT FG VAR GREEN WHITE MAIN DRAW_QUADRITERAL METHOD RED BLACKprograma :  PROGRAM ID COLON globales metodos goto_maingoto_main : VOID MAIN scopemain LEFTP RIGHTP LEFTB declara_var bloque RIGHTBscopemain : emptyglobales : declara_vardeclara_var : emptydeclara_var : variablesvariables : VAR tipo var lista_variables SEMICOLON declara_varlista_variables : COMMA var lista_variables\n        | emptyvar : ID\n        | ID LEFTSB INT_CTE RIGHTSBmetodos : metodo metodos\n        | emptymetodo : METHOD tipo_metodo ID inicio_method LEFTP params RIGHTP LEFTB method_vars bloque RIGHTB end_methodinicio_method : emptyend_method : emptytipo_metodo : VOID\n        | tipoparams : empty\n            | parametro parauxparaux : empty\n            | COMMA parametro parauxparametro : tipo IDmethod_vars : declara_varbloque : estatuto bloque\n        | emptytipo : INT\n        | CHAR\n        | BOOLEAN\n        | FLOAT\n        | STRINGestatuto : condicion\n        | ciclo\n        | return\n        | lectura\n        | escritura\n        | llamada SEMICOLON\n        | asignacion\n        | dibujaPunto\n        | dibujaLinea\n        | dibujaCirculo\n        | dibujaTriangulo\n        | dibujaCuadrado\n        | dibujaRectangulo\n        | dibujaCuadrilatero\n        return : RETURN exp SEMICOLONlectura : ID ASSIGN READ LEFTP RIGHTP SEMICOLONescritura : PRINT LEFTP exp RIGHTP SEMICOLONllamada : ID llamafun LEFTP args RIGHTPllamafun : emptyargs : exp param listargsargs : emptylistargs : COMMA args\n        | emptyparam : emptyasignacion : ID asigarrayasigarray : LEFTSB exp RIGHTSB asignasigarray : asignasign : ASSIGN exp SEMICOLONciclo : WHILE salto_ciclo LEFTP exp ciclo1 RIGHTP LEFTB bloque ciclo2 RIGHTBsalto_ciclo : emptyciclo1 : emptyciclo2 : emptycondicion : IF LEFTP condicion1 RIGHTP LEFTB bloque RIGHTB elseelse : ELSE condicion3 LEFTB bloque condicion4 RIGHTBelse : emptycondicion1 : expcondicion3 : emptycondicion4 : emptyexp : llamada\n        | expresion\n        expresion : operador1 exp1exp1 : emptyexp1 : AND saveop operador1 exp1exp1 : OR saveop operador1 exp1operador1 : operador2 exp2exp2 : emptyexp2 : EQUALS saveop operador2 exp2exp2 : NOTEQUAL saveop operador2 exp2exp2 : GREATEREQUAL saveop operador2 exp2exp2 : GREATERTHAN saveop operador2 exp2exp2 : LESSTHAN saveop operador2 exp2exp2 : LESSEQUAL saveop operador2 exp2operador2 : operador3 exp3exp3 : emptyexp3 : SUM saveop operador3 exp3exp3 : LESS saveop operador3 exp3operador3 : operador4 exp4exp4 : emptyexp4 : TIMES saveop operador4 exp4exp4 : DIVISION saveop operador4 exp4saveop : emptyoperador4 : ID idarrayidarray : LEFTSB fondofalso expresion RIGHTSBidarray : emptyoperador4 : constanteoperador4 : LEFTP fondofalso expresion RIGHTPfondofalso : emptyconstante : INT_CTEconstante : FLOAT_CTEconstante : CHAR_CTEconstante : STRING_CTEconstante : TRUE\n            | FALSEdibujaPunto : DRAW_DOT LEFTP exp COMMA exp COMMA color RIGHTP SEMICOLONdibujaLinea : DRAW_LINE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLONdibujaCirculo : DRAW_CIRCLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLONdibujaTriangulo : DRAW_TRIANGLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLONdibujaCuadrado : DRAW_SQUARE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLONdibujaRectangulo : DRAW_RECTANGLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLONdibujaCuadrilatero : DRAW_QUADRITERAL LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLONcolor : RED \n        | BLUE \n        | YELLOW \n        | PURPLE \n        | GREEN \n        | BLACK \n        | CYAN \n        | WHITE\n        | FG \n        | AW4\n        | MB\n        | SNOW\n        | LYempty :'
    
_lr_action_items = {'NOTEQUAL':([93,95,96,97,98,101,102,103,104,105,107,135,137,148,149,153,154,187,207,208,209,210,211,212,213,214,215,216,217,218,239,240,247,248,249,],[-102,-125,138,-103,-125,-101,-96,-104,-125,-99,-100,-84,-85,-88,-89,-93,-95,-125,-125,-125,138,138,138,138,138,138,-125,-125,-97,-95,-87,-86,-91,-90,-94,]),'STRING_CTE':([63,99,109,110,111,114,118,119,120,121,126,127,128,130,132,134,136,138,139,141,142,143,144,146,147,150,151,152,159,166,173,174,175,176,177,178,179,180,181,182,183,184,185,188,189,190,193,194,195,203,204,229,250,251,253,254,255,257,262,286,287,289,290,291,296,309,311,312,313,324,325,338,339,346,350,],[93,-125,93,93,93,93,93,93,93,93,93,93,93,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-98,93,-125,93,93,93,-92,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,]),'RETURN':([6,9,38,43,56,58,59,61,62,64,70,72,73,74,76,77,78,80,81,82,85,88,91,117,123,124,155,198,222,228,234,256,265,270,292,294,306,310,314,331,336,337,344,345,353,357,],[-6,-5,-125,-7,-125,-125,63,-24,63,-42,-43,-45,-33,63,-32,-40,-35,-41,-44,-34,-39,-38,-36,-37,-56,-58,-46,-59,-48,-57,63,-47,63,-125,-64,-66,-105,-60,63,-109,-65,-107,-106,-110,-108,-111,]),'LESS':([93,95,97,98,101,102,103,104,105,107,148,149,153,154,187,207,208,215,216,217,218,247,248,249,],[-102,134,-103,-125,-101,-96,-104,-125,-99,-100,-88,-89,-93,-95,-125,134,134,-125,-125,-97,-95,-91,-90,-94,]),'READ':([121,],[164,]),'VOID':([4,5,6,7,9,10,11,12,13,20,38,43,129,171,172,],[-125,-4,-6,-125,-5,-125,22,25,-13,-12,-125,-7,-125,-14,-16,]),'DRAW_SQUARE':([6,9,38,43,56,58,59,61,62,64,70,72,73,74,76,77,78,80,81,82,85,88,91,117,123,124,155,198,222,228,234,256,265,270,292,294,306,310,314,331,336,337,344,345,353,357,],[-6,-5,-125,-7,-125,-125,65,-24,65,-42,-43,-45,-33,65,-32,-40,-35,-41,-44,-34,-39,-38,-36,-37,-56,-58,-46,-59,-48,-57,65,-47,65,-125,-64,-66,-105,-60,65,-109,-65,-107,-106,-110,-108,-111,]),'YELLOW':([261,308,315,326,327,347,354,],[279,279,279,279,279,279,279,]),'DRAW_QUADRITERAL':([6,9,38,43,56,58,59,61,62,64,70,72,73,74,76,77,78,80,81,82,85,88,91,117,123,124,155,198,222,228,234,256,265,270,292,294,306,310,314,331,336,337,344,345,353,357,],[-6,-5,-125,-7,-125,-125,66,-24,66,-42,-43,-45,-33,66,-32,-40,-35,-41,-44,-34,-39,-38,-36,-37,-56,-58,-46,-59,-48,-57,66,-47,66,-125,-64,-66,-105,-60,66,-109,-65,-107,-106,-110,-108,-111,]),'CHAR':([8,11,41,52,],[17,17,17,17,]),'LESSEQUAL':([93,95,96,97,98,101,102,103,104,105,107,135,137,148,149,153,154,187,207,208,209,210,211,212,213,214,215,216,217,218,239,240,247,248,249,],[-102,-125,144,-103,-125,-101,-96,-104,-125,-99,-100,-84,-85,-88,-89,-93,-95,-125,-125,-125,144,144,144,144,144,144,-125,-125,-97,-95,-87,-86,-91,-90,-94,]),'WHILE':([6,9,38,43,56,58,59,61,62,64,70,72,73,74,76,77,78,80,81,82,85,88,91,117,123,124,155,198,222,228,234,256,265,270,292,294,306,310,314,331,336,337,344,345,353,357,],[-6,-5,-125,-7,-125,-125,68,-24,68,-42,-43,-45,-33,68,-32,-40,-35,-41,-44,-34,-39,-38,-36,-37,-56,-58,-46,-59,-48,-57,68,-47,68,-125,-64,-66,-105,-60,68,-109,-65,-107,-106,-110,-108,-111,]),'PROGRAM':([0,],[1,]),'DRAW_TRIANGLE':([6,9,38,43,56,58,59,61,62,64,70,72,73,74,76,77,78,80,81,82,85,88,91,117,123,124,155,198,222,228,234,256,265,270,292,294,306,310,314,331,336,337,344,345,353,357,],[-6,-5,-125,-7,-125,-125,69,-24,69,-42,-43,-45,-33,69,-32,-40,-35,-41,-44,-34,-39,-38,-36,-37,-56,-58,-46,-59,-48,-57,69,-47,69,-125,-64,-66,-105,-60,69,-109,-65,-107,-106,-110,-108,-111,]),'FG':([261,308,315,326,327,347,354,],[276,276,276,276,276,276,276,]),'PRINT':([6,9,38,43,56,58,59,61,62,64,70,72,73,74,76,77,78,80,81,82,85,88,91,117,123,124,155,198,222,228,234,256,265,270,292,294,306,310,314,331,336,337,344,345,353,357,],[-6,-5,-125,-7,-125,-125,67,-24,67,-42,-43,-45,-33,67,-32,-40,-35,-41,-44,-34,-39,-38,-36,-37,-56,-58,-46,-59,-48,-57,67,-47,67,-125,-64,-66,-105,-60,67,-109,-65,-107,-106,-110,-108,-111,]),'CYAN':([261,308,315,326,327,347,354,],[280,280,280,280,280,280,280,]),'TRUE':([63,99,109,110,111,114,118,119,120,121,126,127,128,130,132,134,136,138,139,141,142,143,144,146,147,150,151,152,159,166,173,174,175,176,177,178,179,180,181,182,183,184,185,188,189,190,193,194,195,203,204,229,250,251,253,254,255,257,262,286,287,289,290,291,296,309,311,312,313,324,325,338,339,346,350,],[97,-125,97,97,97,97,97,97,97,97,97,97,97,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-98,97,-125,97,97,97,-92,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,]),'ELSE':([270,],[293,]),'RED':([261,308,315,326,327,347,354,],[283,283,283,283,283,283,283,]),'BLUE':([261,308,315,326,327,347,354,],[271,271,271,271,271,271,271,]),'LEFTSB':([27,86,104,187,],[33,120,152,152,]),'LEFTP':([28,29,34,35,36,37,63,65,66,67,68,69,83,84,86,87,89,90,99,104,109,110,111,112,113,114,118,119,120,121,122,125,126,127,128,130,132,134,136,138,139,141,142,143,144,146,147,150,151,152,154,159,164,166,173,174,175,176,177,178,179,180,181,182,183,184,185,188,189,190,193,194,195,203,204,229,250,251,253,254,255,257,262,286,287,289,290,291,296,309,311,312,313,324,325,338,339,346,350,],[-125,-125,41,-15,42,-3,99,109,110,111,-125,114,118,119,-125,126,127,128,-125,-125,99,99,99,159,-61,99,99,99,99,99,-50,166,99,99,99,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-98,99,-125,-50,99,197,99,99,-92,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,]),'SEMICOLON':([26,27,30,32,39,44,45,75,93,94,95,96,97,98,100,101,102,103,104,105,106,107,108,131,133,135,137,140,145,148,149,153,154,165,187,191,205,206,207,208,209,210,211,212,213,214,215,216,217,218,230,231,237,238,239,240,241,242,243,244,245,246,247,248,249,295,323,330,340,341,351,356,],[-125,-10,38,-9,-125,-8,-11,117,-102,-125,-125,-125,-103,-125,-70,-101,-96,-104,-125,-99,-71,-100,155,-72,-73,-84,-85,-76,-77,-88,-89,-93,-95,198,-125,222,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-97,-95,256,-49,-74,-75,-87,-86,-79,-80,-78,-82,-81,-83,-91,-90,-94,306,331,337,344,345,353,357,]),'PURPLE':([261,308,315,326,327,347,354,],[278,278,278,278,278,278,278,]),'GREEN':([261,308,315,326,327,347,354,],[275,275,275,275,275,275,275,]),'CHAR_CTE':([63,99,109,110,111,114,118,119,120,121,126,127,128,130,132,134,136,138,139,141,142,143,144,146,147,150,151,152,159,166,173,174,175,176,177,178,179,180,181,182,183,184,185,188,189,190,193,194,195,203,204,229,250,251,253,254,255,257,262,286,287,289,290,291,296,309,311,312,313,324,325,338,339,346,350,],[101,-125,101,101,101,101,101,101,101,101,101,101,101,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-98,101,-125,101,101,101,-92,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,]),'COLON':([3,],[4,]),'LEFTB':([50,55,202,252,293,304,305,],[56,58,234,265,-125,314,-68,]),'COMMA':([26,27,39,45,47,51,57,93,94,95,96,97,98,100,101,102,103,104,105,106,107,131,133,135,137,140,145,148,149,153,154,156,157,160,161,162,169,170,187,201,205,206,207,208,209,210,211,212,213,214,215,216,217,218,220,221,225,226,227,231,232,233,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,263,264,266,267,268,285,297,298,301,302,303,307,317,318,319,320,332,333,342,343,348,352,],[31,-10,31,-11,52,-23,52,-102,-125,-125,-125,-103,-125,-70,-101,-96,-104,-125,-99,-71,-100,-72,-73,-84,-85,-76,-77,-88,-89,-93,-95,189,190,193,194,195,203,204,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-97,-95,250,251,253,254,255,-49,-55,257,261,262,-74,-75,-87,-86,-79,-80,-78,-82,-81,-83,-91,-90,-94,286,287,289,290,291,296,308,309,311,312,313,315,324,325,326,327,338,339,346,347,350,354,]),'INT_CTE':([33,63,99,109,110,111,114,118,119,120,121,126,127,128,130,132,134,136,138,139,141,142,143,144,146,147,150,151,152,159,166,173,174,175,176,177,178,179,180,181,182,183,184,185,188,189,190,193,194,195,203,204,229,250,251,253,254,255,257,262,286,287,289,290,291,296,309,311,312,313,324,325,338,339,346,350,],[40,105,-125,105,105,105,105,105,105,105,105,105,105,105,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-98,105,-125,105,105,105,-92,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,]),'METHOD':([4,5,6,7,9,10,38,43,129,171,172,],[-125,-4,-6,11,-5,11,-125,-7,-125,-14,-16,]),'$end':([2,24,115,],[0,-1,-2,]),'DIVISION':([93,97,98,101,102,103,104,105,107,153,154,187,215,216,217,218,249,],[-102,-103,146,-101,-96,-104,-125,-99,-100,-93,-95,-125,146,146,-97,-95,-94,]),'STRING':([8,11,41,52,],[19,19,19,19,]),'SNOW':([261,308,315,326,327,347,354,],[277,277,277,277,277,277,277,]),'AW4':([261,308,315,326,327,347,354,],[272,272,272,272,272,272,272,]),'GREATEREQUAL':([93,95,96,97,98,101,102,103,104,105,107,135,137,148,149,153,154,187,207,208,209,210,211,212,213,214,215,216,217,218,239,240,247,248,249,],[-102,-125,139,-103,-125,-101,-96,-104,-125,-99,-100,-84,-85,-88,-89,-93,-95,-125,-125,-125,139,139,139,139,139,139,-125,-125,-97,-95,-87,-86,-91,-90,-94,]),'DRAW_LINE':([6,9,38,43,56,58,59,61,62,64,70,72,73,74,76,77,78,80,81,82,85,88,91,117,123,124,155,198,222,228,234,256,265,270,292,294,306,310,314,331,336,337,344,345,353,357,],[-6,-5,-125,-7,-125,-125,83,-24,83,-42,-43,-45,-33,83,-32,-40,-35,-41,-44,-34,-39,-38,-36,-37,-56,-58,-46,-59,-48,-57,83,-47,83,-125,-64,-66,-105,-60,83,-109,-65,-107,-106,-110,-108,-111,]),'EQUALS':([93,95,96,97,98,101,102,103,104,105,107,135,137,148,149,153,154,187,207,208,209,210,211,212,213,214,215,216,217,218,239,240,247,248,249,],[-102,-125,141,-103,-125,-101,-96,-104,-125,-99,-100,-84,-85,-88,-89,-93,-95,-125,-125,-125,141,141,141,141,141,141,-125,-125,-97,-95,-87,-86,-91,-90,-94,]),'DRAW_RECTANGLE':([6,9,38,43,56,58,59,61,62,64,70,72,73,74,76,77,78,80,81,82,85,88,91,117,123,124,155,198,222,228,234,256,265,270,292,294,306,310,314,331,336,337,344,345,353,357,],[-6,-5,-125,-7,-125,-125,84,-24,84,-42,-43,-45,-33,84,-32,-40,-35,-41,-44,-34,-39,-38,-36,-37,-56,-58,-46,-59,-48,-57,84,-47,84,-125,-64,-66,-105,-60,84,-109,-65,-107,-106,-110,-108,-111,]),'GREATERTHAN':([93,95,96,97,98,101,102,103,104,105,107,135,137,148,149,153,154,187,207,208,209,210,211,212,213,214,215,216,217,218,239,240,247,248,249,],[-102,-125,143,-103,-125,-101,-96,-104,-125,-99,-100,-84,-85,-88,-89,-93,-95,-125,-125,-125,143,143,143,143,143,143,-125,-125,-97,-95,-87,-86,-91,-90,-94,]),'VAR':([4,38,56,58,],[8,8,8,8,]),'FALSE':([63,99,109,110,111,114,118,119,120,121,126,127,128,130,132,134,136,138,139,141,142,143,144,146,147,150,151,152,159,166,173,174,175,176,177,178,179,180,181,182,183,184,185,188,189,190,193,194,195,203,204,229,250,251,253,254,255,257,262,286,287,289,290,291,296,309,311,312,313,324,325,338,339,346,350,],[103,-125,103,103,103,103,103,103,103,103,103,103,103,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-98,103,-125,103,103,103,-92,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,]),'WHITE':([261,308,315,326,327,347,354,],[282,282,282,282,282,282,282,]),'TIMES':([93,97,98,101,102,103,104,105,107,153,154,187,215,216,217,218,249,],[-102,-103,147,-101,-96,-104,-125,-99,-100,-93,-95,-125,147,147,-97,-95,-94,]),'ID':([1,6,9,14,15,16,17,18,19,21,22,23,31,38,43,46,56,58,59,61,62,63,64,70,72,73,74,76,77,78,80,81,82,85,88,91,99,109,110,111,114,117,118,119,120,121,123,124,126,127,128,130,132,134,136,138,139,141,142,143,144,146,147,150,151,152,155,159,166,173,174,175,176,177,178,179,180,181,182,183,184,185,188,189,190,193,194,195,198,203,204,222,228,229,234,250,251,253,254,255,256,257,262,265,270,286,287,289,290,291,292,294,296,306,309,310,311,312,313,314,324,325,331,336,337,338,339,344,345,346,350,353,357,],[3,-6,-5,27,-27,-30,-28,-29,-31,-18,-17,28,27,-125,-7,51,-125,-125,86,-24,86,104,-42,-43,-45,-33,86,-32,-40,-35,-41,-44,-34,-39,-38,-36,-125,104,104,104,104,-37,104,104,104,104,-56,-58,104,104,104,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-98,187,-125,-46,104,104,187,-92,187,187,187,187,187,187,187,187,187,187,187,187,104,104,104,104,104,-59,104,104,-48,-57,104,86,104,104,104,104,104,-47,104,104,86,-125,104,104,104,104,104,-64,-66,104,-105,104,-60,104,104,104,86,104,104,-109,-65,-107,104,104,-106,-110,104,104,-108,-111,]),'IF':([6,9,38,43,56,58,59,61,62,64,70,72,73,74,76,77,78,80,81,82,85,88,91,117,123,124,155,198,222,228,234,256,265,270,292,294,306,310,314,331,336,337,344,345,353,357,],[-6,-5,-125,-7,-125,-125,87,-24,87,-42,-43,-45,-33,87,-32,-40,-35,-41,-44,-34,-39,-38,-36,-37,-56,-58,-46,-59,-48,-57,87,-47,87,-125,-64,-66,-105,-60,87,-109,-65,-107,-106,-110,-108,-111,]),'AND':([93,94,95,96,97,98,101,102,103,104,105,107,135,137,140,145,148,149,153,154,187,205,206,207,208,209,210,211,212,213,214,215,216,217,218,239,240,241,242,243,244,245,246,247,248,249,],[-102,130,-125,-125,-103,-125,-101,-96,-104,-125,-99,-100,-84,-85,-76,-77,-88,-89,-93,-95,-125,130,130,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-97,-95,-87,-86,-79,-80,-78,-82,-81,-83,-91,-90,-94,]),'RIGHTP':([41,42,47,48,49,51,53,54,57,60,93,94,95,96,97,98,100,101,102,103,104,105,106,107,131,133,135,137,140,145,148,149,153,154,158,166,167,168,186,187,192,197,199,200,201,205,206,207,208,209,210,211,212,213,214,215,216,217,218,223,224,231,232,233,237,238,239,240,241,242,243,244,245,246,247,248,249,257,258,259,269,271,272,273,274,275,276,277,278,279,280,281,282,283,284,316,322,334,335,349,355,],[-125,50,-125,55,-19,-23,-21,-20,-125,-22,-102,-125,-125,-125,-103,-125,-70,-101,-96,-104,-125,-99,-71,-100,-72,-73,-84,-85,-76,-77,-88,-89,-93,-95,191,-125,202,-67,217,-125,-125,230,-52,231,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-97,-95,252,-62,-49,-55,-125,-74,-75,-87,-86,-79,-80,-78,-82,-81,-83,-91,-90,-94,-125,-54,-51,-53,-113,-121,-122,295,-116,-120,-123,-115,-114,-118,-117,-119,-112,-124,323,330,340,341,351,356,]),'RIGHTSB':([40,93,94,95,96,97,98,100,101,102,103,104,105,106,107,131,133,135,137,140,145,148,149,153,154,163,187,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,231,237,238,239,240,241,242,243,244,245,246,247,248,249,],[45,-102,-125,-125,-125,-103,-125,-70,-101,-96,-104,-125,-99,-71,-100,-72,-73,-84,-85,-76,-77,-88,-89,-93,-95,196,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-97,-95,249,-49,-74,-75,-87,-86,-79,-80,-78,-82,-81,-83,-91,-90,-94,]),'MB':([261,308,315,326,327,347,354,],[273,273,273,273,273,273,273,]),'INT':([8,11,41,52,],[15,15,15,15,]),'SUM':([93,95,97,98,101,102,103,104,105,107,148,149,153,154,187,207,208,215,216,217,218,247,248,249,],[-102,136,-103,-125,-101,-96,-104,-125,-99,-100,-88,-89,-93,-95,-125,136,136,-125,-125,-97,-95,-91,-90,-94,]),'FLOAT':([8,11,41,52,],[16,16,16,16,]),'FLOAT_CTE':([63,99,109,110,111,114,118,119,120,121,126,127,128,130,132,134,136,138,139,141,142,143,144,146,147,150,151,152,159,166,173,174,175,176,177,178,179,180,181,182,183,184,185,188,189,190,193,194,195,203,204,229,250,251,253,254,255,257,262,286,287,289,290,291,296,309,311,312,313,324,325,338,339,346,350,],[107,-125,107,107,107,107,107,107,107,107,107,107,107,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-98,107,-125,107,107,107,-92,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,]),'LESSTHAN':([93,95,96,97,98,101,102,103,104,105,107,135,137,148,149,153,154,187,207,208,209,210,211,212,213,214,215,216,217,218,239,240,247,248,249,],[-102,-125,142,-103,-125,-101,-96,-104,-125,-99,-100,-84,-85,-88,-89,-93,-95,-125,-125,-125,142,142,142,142,142,142,-125,-125,-97,-95,-87,-86,-91,-90,-94,]),'DRAW_DOT':([6,9,38,43,56,58,59,61,62,64,70,72,73,74,76,77,78,80,81,82,85,88,91,117,123,124,155,198,222,228,234,256,265,270,292,294,306,310,314,331,336,337,344,345,353,357,],[-6,-5,-125,-7,-125,-125,89,-24,89,-42,-43,-45,-33,89,-32,-40,-35,-41,-44,-34,-39,-38,-36,-37,-56,-58,-46,-59,-48,-57,89,-47,89,-125,-64,-66,-105,-60,89,-109,-65,-107,-106,-110,-108,-111,]),'ASSIGN':([86,196,],[121,229,]),'BOOLEAN':([8,11,41,52,],[18,18,18,18,]),'LY':([261,308,315,326,327,347,354,],[284,284,284,284,284,284,284,]),'RIGHTB':([6,9,38,43,56,58,59,61,62,64,70,71,72,73,74,76,77,78,79,80,81,82,85,88,91,92,116,117,123,124,155,198,222,228,234,256,260,265,270,288,292,294,299,300,306,310,314,321,328,329,331,336,337,344,345,353,357,],[-6,-5,-125,-7,-125,-125,-125,-24,-125,-42,-43,115,-45,-33,-125,-32,-40,-35,-26,-41,-44,-34,-39,-38,-36,129,-25,-37,-56,-58,-46,-59,-48,-57,-125,-47,270,-125,-125,-125,-64,-66,310,-63,-105,-60,-125,-125,336,-69,-109,-65,-107,-106,-110,-108,-111,]),'BLACK':([261,308,315,326,327,347,354,],[281,281,281,281,281,281,281,]),'MAIN':([25,],[29,]),'OR':([93,94,95,96,97,98,101,102,103,104,105,107,135,137,140,145,148,149,153,154,187,205,206,207,208,209,210,211,212,213,214,215,216,217,218,239,240,241,242,243,244,245,246,247,248,249,],[-102,132,-125,-125,-103,-125,-101,-96,-104,-125,-99,-100,-84,-85,-76,-77,-88,-89,-93,-95,-125,132,132,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-97,-95,-87,-86,-79,-80,-78,-82,-81,-83,-91,-90,-94,]),'DRAW_CIRCLE':([6,9,38,43,56,58,59,61,62,64,70,72,73,74,76,77,78,80,81,82,85,88,91,117,123,124,155,198,222,228,234,256,265,270,292,294,306,310,314,331,336,337,344,345,353,357,],[-6,-5,-125,-7,-125,-125,90,-24,90,-42,-43,-45,-33,90,-32,-40,-35,-41,-44,-34,-39,-38,-36,-37,-56,-58,-46,-59,-48,-57,90,-47,90,-125,-64,-66,-105,-60,90,-109,-65,-107,-106,-110,-108,-111,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'goto_main':([12,],[24,]),'idarray':([104,187,],[153,153,]),'constante':([63,109,110,111,114,118,119,120,121,126,127,128,151,159,166,173,175,176,177,178,179,180,181,182,183,184,185,188,189,190,193,194,195,203,204,229,250,251,253,254,255,257,262,286,287,289,290,291,296,309,311,312,313,324,325,338,339,346,350,],[102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,]),'declara_var':([4,38,56,58,],[5,43,59,61,]),'color':([261,308,315,326,327,347,354,],[274,316,322,334,335,349,355,]),'dibujaTriangulo':([59,62,74,234,265,314,],[64,64,64,64,64,64,]),'variables':([4,38,56,58,],[6,6,6,6,]),'end_method':([129,],[171,]),'condicion4':([321,],[328,]),'operador1':([63,109,110,111,114,118,119,120,121,126,127,128,151,159,166,173,175,188,189,190,193,194,195,203,204,229,250,251,253,254,255,257,262,286,287,289,290,291,296,309,311,312,313,324,325,338,339,346,350,],[94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,205,206,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,]),'condicion1':([126,],[167,]),'condicion3':([293,],[304,]),'dibujaCuadrado':([59,62,74,234,265,314,],[70,70,70,70,70,70,]),'bloque':([59,62,74,234,265,314,],[71,92,116,260,288,321,]),'operador2':([63,109,110,111,114,118,119,120,121,126,127,128,151,159,166,173,175,178,179,180,181,182,183,188,189,190,193,194,195,203,204,229,250,251,253,254,255,257,262,286,287,289,290,291,296,309,311,312,313,324,325,338,339,346,350,],[96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,209,210,211,212,213,214,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,]),'operador3':([63,109,110,111,114,118,119,120,121,126,127,128,151,159,166,173,175,176,177,178,179,180,181,182,183,188,189,190,193,194,195,203,204,229,250,251,253,254,255,257,262,286,287,289,290,291,296,309,311,312,313,324,325,338,339,346,350,],[95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,207,208,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,]),'dibujaCuadrilatero':([59,62,74,234,265,314,],[72,72,72,72,72,72,]),'method_vars':([58,],[62,]),'exp4':([98,215,216,],[148,247,248,]),'ciclo':([59,62,74,234,265,314,],[73,73,73,73,73,73,]),'tipo':([8,11,41,52,],[14,21,46,46,]),'paraux':([47,57,],[54,60,]),'exp3':([95,207,208,],[135,239,240,]),'exp2':([96,209,210,211,212,213,214,],[140,241,242,243,244,245,246,]),'exp1':([94,205,206,],[131,237,238,]),'estatuto':([59,62,74,234,265,314,],[74,74,74,74,74,74,]),'param':([201,],[233,]),'operador4':([63,109,110,111,114,118,119,120,121,126,127,128,151,159,166,173,175,176,177,178,179,180,181,182,183,184,185,188,189,190,193,194,195,203,204,229,250,251,253,254,255,257,262,286,287,289,290,291,296,309,311,312,313,324,325,338,339,346,350,],[98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,215,216,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,]),'llamada':([59,62,63,74,109,110,111,114,118,119,120,121,126,127,128,159,166,189,190,193,194,195,203,204,229,234,250,251,253,254,255,257,262,265,286,287,289,290,291,296,309,311,312,313,314,324,325,338,339,346,350,],[75,75,100,75,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,75,100,100,100,100,100,100,100,75,100,100,100,100,100,100,100,100,100,100,75,100,100,100,100,100,100,]),'condicion':([59,62,74,234,265,314,],[76,76,76,76,76,76,]),'tipo_metodo':([11,],[23,]),'llamafun':([86,104,],[125,125,]),'dibujaLinea':([59,62,74,234,265,314,],[77,77,77,77,77,77,]),'var':([14,31,],[26,39,]),'params':([41,],[48,]),'fondofalso':([99,152,],[151,188,]),'lectura':([59,62,74,234,265,314,],[78,78,78,78,78,78,]),'empty':([4,7,10,26,28,29,38,39,41,47,56,57,58,59,62,68,74,86,94,95,96,98,99,104,129,130,132,134,136,138,139,141,142,143,144,146,147,152,166,187,192,201,205,206,207,208,209,210,211,212,213,214,215,216,233,234,257,265,270,288,293,314,321,],[9,13,13,32,35,37,9,32,49,53,9,53,9,79,79,113,79,122,133,137,145,149,150,154,172,174,174,174,174,174,174,174,174,174,174,174,174,150,199,218,224,232,133,133,137,137,145,145,145,145,145,145,149,149,258,79,199,79,294,300,305,79,329,]),'dibujaCirculo':([59,62,74,234,265,314,],[80,80,80,80,80,80,]),'saveop':([130,132,134,136,138,139,141,142,143,144,146,147,],[173,175,176,177,178,179,180,181,182,183,184,185,]),'dibujaRectangulo':([59,62,74,234,265,314,],[81,81,81,81,81,81,]),'return':([59,62,74,234,265,314,],[82,82,82,82,82,82,]),'parametro':([41,52,],[47,57,]),'args':([166,257,],[200,269,]),'else':([270,],[292,]),'inicio_method':([28,],[34,]),'ciclo2':([288,],[299,]),'dibujaPunto':([59,62,74,234,265,314,],[85,85,85,85,85,85,]),'ciclo1':([192,],[223,]),'asigarray':([86,],[123,]),'listargs':([233,],[259,]),'expresion':([63,109,110,111,114,118,119,120,121,126,127,128,151,159,166,188,189,190,193,194,195,203,204,229,250,251,253,254,255,257,262,286,287,289,290,291,296,309,311,312,313,324,325,338,339,346,350,],[106,106,106,106,106,106,106,106,106,106,106,106,186,106,106,219,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,]),'scopemain':([29,],[36,]),'metodo':([7,10,],[10,10,]),'asignacion':([59,62,74,234,265,314,],[88,88,88,88,88,88,]),'metodos':([7,10,],[12,20,]),'asign':([86,196,],[124,228,]),'salto_ciclo':([68,],[112,]),'programa':([0,],[2,]),'exp':([63,109,110,111,114,118,119,120,121,126,127,128,159,166,189,190,193,194,195,203,204,229,250,251,253,254,255,257,262,286,287,289,290,291,296,309,311,312,313,324,325,338,339,346,350,],[108,156,157,158,160,161,162,163,165,168,169,170,192,201,220,221,225,226,227,235,236,165,263,264,266,267,268,201,285,297,298,301,302,303,307,317,318,319,320,332,333,342,343,348,352,]),'lista_variables':([26,39,],[30,44,]),'globales':([4,],[7,]),'escritura':([59,62,74,234,265,314,],[91,91,91,91,91,91,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> PROGRAM ID COLON globales metodos goto_main','programa',6,'p_programa','Parser.py',247),
  ('goto_main -> VOID MAIN scopemain LEFTP RIGHTP LEFTB declara_var bloque RIGHTB','goto_main',9,'p_goto_main','Parser.py',284),
  ('scopemain -> empty','scopemain',1,'p_scopemain','Parser.py',287),
  ('globales -> declara_var','globales',1,'p_globales','Parser.py',298),
  ('declara_var -> empty','declara_var',1,'p_declara_var_vacio','Parser.py',305),
  ('declara_var -> variables','declara_var',1,'p_declara_var','Parser.py',308),
  ('variables -> VAR tipo var lista_variables SEMICOLON declara_var','variables',6,'p_variables','Parser.py',316),
  ('lista_variables -> COMMA var lista_variables','lista_variables',3,'p_lista_variables','Parser.py',325),
  ('lista_variables -> empty','lista_variables',1,'p_lista_variables','Parser.py',326),
  ('var -> ID','var',1,'p_var','Parser.py',329),
  ('var -> ID LEFTSB INT_CTE RIGHTSB','var',4,'p_var','Parser.py',330),
  ('metodos -> metodo metodos','metodos',2,'p_metodos','Parser.py',351),
  ('metodos -> empty','metodos',1,'p_metodos','Parser.py',352),
  ('metodo -> METHOD tipo_metodo ID inicio_method LEFTP params RIGHTP LEFTB method_vars bloque RIGHTB end_method','metodo',12,'p_metodo','Parser.py',359),
  ('inicio_method -> empty','inicio_method',1,'p_inicio_method','Parser.py',372),
  ('end_method -> empty','end_method',1,'p_end_method','Parser.py',391),
  ('tipo_metodo -> VOID','tipo_metodo',1,'p_tipo_metodo','Parser.py',399),
  ('tipo_metodo -> tipo','tipo_metodo',1,'p_tipo_metodo','Parser.py',400),
  ('params -> empty','params',1,'p_params','Parser.py',412),
  ('params -> parametro paraux','params',2,'p_params','Parser.py',413),
  ('paraux -> empty','paraux',1,'p_paraux','Parser.py',416),
  ('paraux -> COMMA parametro paraux','paraux',3,'p_paraux','Parser.py',417),
  ('parametro -> tipo ID','parametro',2,'p_parametro','Parser.py',425),
  ('method_vars -> declara_var','method_vars',1,'p_method_vars','Parser.py',441),
  ('bloque -> estatuto bloque','bloque',2,'p_bloque','Parser.py',448),
  ('bloque -> empty','bloque',1,'p_bloque','Parser.py',449),
  ('tipo -> INT','tipo',1,'p_tipo','Parser.py',457),
  ('tipo -> CHAR','tipo',1,'p_tipo','Parser.py',458),
  ('tipo -> BOOLEAN','tipo',1,'p_tipo','Parser.py',459),
  ('tipo -> FLOAT','tipo',1,'p_tipo','Parser.py',460),
  ('tipo -> STRING','tipo',1,'p_tipo','Parser.py',461),
  ('estatuto -> condicion','estatuto',1,'p_estatuto','Parser.py',471),
  ('estatuto -> ciclo','estatuto',1,'p_estatuto','Parser.py',472),
  ('estatuto -> return','estatuto',1,'p_estatuto','Parser.py',473),
  ('estatuto -> lectura','estatuto',1,'p_estatuto','Parser.py',474),
  ('estatuto -> escritura','estatuto',1,'p_estatuto','Parser.py',475),
  ('estatuto -> llamada SEMICOLON','estatuto',2,'p_estatuto','Parser.py',476),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','Parser.py',477),
  ('estatuto -> dibujaPunto','estatuto',1,'p_estatuto','Parser.py',478),
  ('estatuto -> dibujaLinea','estatuto',1,'p_estatuto','Parser.py',479),
  ('estatuto -> dibujaCirculo','estatuto',1,'p_estatuto','Parser.py',480),
  ('estatuto -> dibujaTriangulo','estatuto',1,'p_estatuto','Parser.py',481),
  ('estatuto -> dibujaCuadrado','estatuto',1,'p_estatuto','Parser.py',482),
  ('estatuto -> dibujaRectangulo','estatuto',1,'p_estatuto','Parser.py',483),
  ('estatuto -> dibujaCuadrilatero','estatuto',1,'p_estatuto','Parser.py',484),
  ('return -> RETURN exp SEMICOLON','return',3,'p_return','Parser.py',492),
  ('lectura -> ID ASSIGN READ LEFTP RIGHTP SEMICOLON','lectura',6,'p_lectura','Parser.py',516),
  ('escritura -> PRINT LEFTP exp RIGHTP SEMICOLON','escritura',5,'p_escritura','Parser.py',537),
  ('llamada -> ID llamafun LEFTP args RIGHTP','llamada',5,'p_llamada','Parser.py',549),
  ('llamafun -> empty','llamafun',1,'p_llamafun','Parser.py',563),
  ('args -> exp param listargs','args',3,'p_args','Parser.py',578),
  ('args -> empty','args',1,'p_args_vacio','Parser.py',581),
  ('listargs -> COMMA args','listargs',2,'p_listargs','Parser.py',584),
  ('listargs -> empty','listargs',1,'p_listargs','Parser.py',585),
  ('param -> empty','param',1,'p_param','Parser.py',588),
  ('asignacion -> ID asigarray','asignacion',2,'p_asignacion','Parser.py',611),
  ('asigarray -> LEFTSB exp RIGHTSB asign','asigarray',4,'p_asignacion_array','Parser.py',646),
  ('asigarray -> asign','asigarray',1,'p_asignacion_array_empty','Parser.py',662),
  ('asign -> ASSIGN exp SEMICOLON','asign',3,'p_asign','Parser.py',665),
  ('ciclo -> WHILE salto_ciclo LEFTP exp ciclo1 RIGHTP LEFTB bloque ciclo2 RIGHTB','ciclo',10,'p_ciclo','Parser.py',676),
  ('salto_ciclo -> empty','salto_ciclo',1,'p_salto_ciclo','Parser.py',684),
  ('ciclo1 -> empty','ciclo1',1,'p_ciclo1','Parser.py',693),
  ('ciclo2 -> empty','ciclo2',1,'p_ciclo2','Parser.py',710),
  ('condicion -> IF LEFTP condicion1 RIGHTP LEFTB bloque RIGHTB else','condicion',8,'p_condicion','Parser.py',723),
  ('else -> ELSE condicion3 LEFTB bloque condicion4 RIGHTB','else',6,'p_else','Parser.py',726),
  ('else -> empty','else',1,'p_else_vacio','Parser.py',729),
  ('condicion1 -> exp','condicion1',1,'p_condicion1','Parser.py',739),
  ('condicion3 -> empty','condicion3',1,'p_condicion3','Parser.py',756),
  ('condicion4 -> empty','condicion4',1,'p_condicion4','Parser.py',769),
  ('exp -> llamada','exp',1,'p_exp','Parser.py',780),
  ('exp -> expresion','exp',1,'p_exp','Parser.py',781),
  ('expresion -> operador1 exp1','expresion',2,'p_expresion','Parser.py',790),
  ('exp1 -> empty','exp1',1,'p_exp1','Parser.py',793),
  ('exp1 -> AND saveop operador1 exp1','exp1',4,'p_exp1_and','Parser.py',797),
  ('exp1 -> OR saveop operador1 exp1','exp1',4,'p_exp1_or','Parser.py',800),
  ('operador1 -> operador2 exp2','operador1',2,'p_operador1','Parser.py',809),
  ('exp2 -> empty','exp2',1,'p_exp2_vacio','Parser.py',812),
  ('exp2 -> EQUALS saveop operador2 exp2','exp2',4,'p_exp2_equals','Parser.py',816),
  ('exp2 -> NOTEQUAL saveop operador2 exp2','exp2',4,'p_exp2_notequals','Parser.py',819),
  ('exp2 -> GREATEREQUAL saveop operador2 exp2','exp2',4,'p_exp2_greatherequal','Parser.py',822),
  ('exp2 -> GREATERTHAN saveop operador2 exp2','exp2',4,'p_exp2_greatherthan','Parser.py',825),
  ('exp2 -> LESSTHAN saveop operador2 exp2','exp2',4,'p_exp2_lessthan','Parser.py',828),
  ('exp2 -> LESSEQUAL saveop operador2 exp2','exp2',4,'p_exp2_lessequal','Parser.py',831),
  ('operador2 -> operador3 exp3','operador2',2,'p_operador2','Parser.py',840),
  ('exp3 -> empty','exp3',1,'p_exp3_vacio','Parser.py',843),
  ('exp3 -> SUM saveop operador3 exp3','exp3',4,'p_exp3_sum','Parser.py',847),
  ('exp3 -> LESS saveop operador3 exp3','exp3',4,'p_exp3_less','Parser.py',850),
  ('operador3 -> operador4 exp4','operador3',2,'p_operador3','Parser.py',859),
  ('exp4 -> empty','exp4',1,'p_exp4_empty','Parser.py',862),
  ('exp4 -> TIMES saveop operador4 exp4','exp4',4,'p_exp4_times','Parser.py',866),
  ('exp4 -> DIVISION saveop operador4 exp4','exp4',4,'p_exp4_division','Parser.py',870),
  ('saveop -> empty','saveop',1,'p_saveop','Parser.py',874),
  ('operador4 -> ID idarray','operador4',2,'p_operador4_id','Parser.py',884),
  ('idarray -> LEFTSB fondofalso expresion RIGHTSB','idarray',4,'p_idarray_full','Parser.py',925),
  ('idarray -> empty','idarray',1,'p_idarray_empty','Parser.py',939),
  ('operador4 -> constante','operador4',1,'p_operador4_cons','Parser.py',942),
  ('operador4 -> LEFTP fondofalso expresion RIGHTP','operador4',4,'p_operador4_exp','Parser.py',945),
  ('fondofalso -> empty','fondofalso',1,'p_fondofalso','Parser.py',950),
  ('constante -> INT_CTE','constante',1,'p_constante_int','Parser.py',959),
  ('constante -> FLOAT_CTE','constante',1,'p_constante_float','Parser.py',971),
  ('constante -> CHAR_CTE','constante',1,'p_constante_char','Parser.py',984),
  ('constante -> STRING_CTE','constante',1,'p_constante_string','Parser.py',996),
  ('constante -> TRUE','constante',1,'p_constante_true','Parser.py',1008),
  ('constante -> FALSE','constante',1,'p_constante_true','Parser.py',1009),
  ('dibujaPunto -> DRAW_DOT LEFTP exp COMMA exp COMMA color RIGHTP SEMICOLON','dibujaPunto',9,'p_dibujaPunto','Parser.py',1022),
  ('dibujaLinea -> DRAW_LINE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON','dibujaLinea',15,'p_dibujaLinea','Parser.py',1029),
  ('dibujaCirculo -> DRAW_CIRCLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON','dibujaCirculo',13,'p_dibujaCirculo','Parser.py',1040),
  ('dibujaTriangulo -> DRAW_TRIANGLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON','dibujaTriangulo',19,'p_dibujaTriangulo','Parser.py',1050),
  ('dibujaCuadrado -> DRAW_SQUARE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON','dibujaCuadrado',13,'p_dibujaCuadrado','Parser.py',1064),
  ('dibujaRectangulo -> DRAW_RECTANGLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON','dibujaRectangulo',15,'p_dibujaRectangulo','Parser.py',1074),
  ('dibujaCuadrilatero -> DRAW_QUADRITERAL LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON','dibujaCuadrilatero',23,'p_dibujaCuadrilatero','Parser.py',1084),
  ('color -> RED','color',1,'p_color','Parser.py',1100),
  ('color -> BLUE','color',1,'p_color','Parser.py',1101),
  ('color -> YELLOW','color',1,'p_color','Parser.py',1102),
  ('color -> PURPLE','color',1,'p_color','Parser.py',1103),
  ('color -> GREEN','color',1,'p_color','Parser.py',1104),
  ('color -> BLACK','color',1,'p_color','Parser.py',1105),
  ('color -> CYAN','color',1,'p_color','Parser.py',1106),
  ('color -> WHITE','color',1,'p_color','Parser.py',1107),
  ('color -> FG','color',1,'p_color','Parser.py',1108),
  ('color -> AW4','color',1,'p_color','Parser.py',1109),
  ('color -> MB','color',1,'p_color','Parser.py',1110),
  ('color -> SNOW','color',1,'p_color','Parser.py',1111),
  ('color -> LY','color',1,'p_color','Parser.py',1112),
  ('empty -> <empty>','empty',0,'p_empty','Parser.py',1122),
]
