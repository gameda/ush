
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightASSIGNleftANDORleftEQUALSNOTEQUALleftGREATERTHANGREATEREQUALLESSTHANLESSEQUALleftSUMLESSleftTIMESDIVISIONID LEFTSB RIGHTSB COMMA SEMICOLON COLON LEFTP RIGHTP LEFTB RIGHTB ASSIGN FLOAT_CTE INT_CTE CHAR_CTE STRING_CTE TIMES DIVISION SUM LESS EQUALS GREATEREQUAL GREATERTHAN LESSTHAN LESSEQUAL NOTEQUAL OR AND RETURN STRING INT VOID FLOAT YELLOW ELSE CHAR PRINT BOOLEAN DRAW_CIRCLE CYAN FALSE TRUE IF BLUE DRAW_TRIANGLE DRAW_LINE DRAW_SQUARE PURPLE DRAW_RECTANGLE READ WHILE PROGRAM DRAW_DOT VAR GREEN WHITE MAIN DRAW_QUADRITERAL METHOD RED BLACKprograma :  PROGRAM ID COLON globales metodos goto_maingoto_main : VOID MAIN scopemain LEFTP RIGHTP LEFTB declara_var bloque RIGHTBscopemain : emptyglobales : declara_vardeclara_var : emptydeclara_var : variablesvariables : VAR tipo var lista_variables SEMICOLON declara_varlista_variables : COMMA var lista_variables\n        | emptyvar : ID\n        | ID LEFTSB INT_CTE RIGHTSBmetodos : metodo metodos\n        | emptymetodo : METHOD tipo_metodo ID inicio_method LEFTP params RIGHTP LEFTB method_vars bloque RIGHTB end_methodinicio_method : emptyend_method : emptytipo_metodo : VOID\n        | tipoparams : empty\n            | parametro parauxparaux : empty\n            | COMMA parametro parauxparametro : tipo IDmethod_vars : declara_varbloque : estatuto bloque\n        | emptytipo : INT\n        | CHAR\n        | BOOLEAN\n        | FLOAT\n        | STRINGestatuto : condicion\n        | ciclo\n        | return\n        | lectura\n        | escritura\n        | llamada SEMICOLON\n        | asignacion\n        | dibujaPunto\n        | dibujaLinea\n        | dibujaCirculo\n        | dibujaTriangulo\n        | dibujaCuadrado\n        | dibujaRectangulo\n        | dibujaCuadrilatero\n        return : RETURN exp SEMICOLONlectura : ID ASSIGN READ LEFTP RIGHTP SEMICOLONescritura : PRINT LEFTP exp RIGHTP SEMICOLONllamada : ID llamafun LEFTP args RIGHTPllamafun : emptyargs : exp param listargsargs : emptylistargs : COMMA args\n        | emptyparam : emptyasignacion : ID asignasignacion : ID LEFTSB exp RIGHTSB asignasign : ASSIGN exp SEMICOLONciclo : WHILE salto_ciclo LEFTP exp ciclo1 RIGHTP LEFTB bloque ciclo2 RIGHTBsalto_ciclo : emptyciclo1 : emptyciclo2 : emptycondicion : IF LEFTP condicion1 RIGHTP LEFTB bloque RIGHTB elseelse : ELSE condicion3 LEFTB bloque condicion4 RIGHTBelse : emptycondicion1 : expcondicion3 : emptycondicion4 : emptyexp : llamada\n        | expresion\n        expresion : operador1 exp1exp1 : emptyexp1 : AND saveop operador1 exp1exp1 : OR saveop operador1 exp1operador1 : operador2 exp2exp2 : emptyexp2 : EQUALS saveop operador2 exp2exp2 : NOTEQUAL saveop operador2 exp2exp2 : GREATEREQUAL saveop operador2 exp2exp2 : GREATERTHAN saveop operador2 exp2exp2 : LESSTHAN saveop operador2 exp2exp2 : LESSEQUAL saveop operador2 exp2operador2 : operador3 exp3exp3 : emptyexp3 : SUM saveop operador3 exp3exp3 : LESS saveop operador3 exp3operador3 : operador4 exp4exp4 : emptyexp4 : TIMES saveop operador4 exp4exp4 : DIVISION saveop operador4 exp4saveop : emptyoperador4 : ID idarrayidarray : emptyidarray : LEFTSB INT_CTE RIGHTSBoperador4 : constanteoperador4 : LEFTP expresion RIGHTPconstante : INT_CTEconstante : FLOAT_CTEconstante : CHAR_CTEconstante : STRING_CTEconstante : TRUE\n            | FALSEdibujaPunto : DRAW_DOT LEFTP exp COMMA exp COMMA color RIGHTP SEMICOLONdibujaLinea : DRAW_LINE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLONdibujaCirculo : DRAW_CIRCLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLONdibujaTriangulo : DRAW_TRIANGLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLONdibujaCuadrado : DRAW_SQUARE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLONdibujaRectangulo : DRAW_RECTANGLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLONdibujaCuadrilatero : DRAW_QUADRITERAL LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLONcolor : RED \n        | BLUE \n        | YELLOW \n        | PURPLE \n        | GREEN \n        | BLACK \n        | CYAN \n        | WHITEempty :'
    
_lr_action_items = {'NOTEQUAL':([93,95,96,97,98,101,102,103,104,105,107,134,136,147,148,150,152,153,185,186,206,207,208,209,210,211,212,213,214,215,216,236,237,244,245,],[-100,-118,137,-101,-118,-99,-95,-102,-118,-97,-98,-83,-84,-87,-88,-118,-92,-93,-96,-93,-118,-118,137,137,137,137,137,137,-118,-118,-94,-86,-85,-90,-89,]),'STRING_CTE':([63,99,109,110,111,114,118,119,120,121,125,126,127,129,131,133,135,137,138,140,141,142,143,145,146,158,165,172,173,174,175,176,177,178,179,180,181,182,183,184,188,189,192,193,194,202,203,226,246,247,249,250,251,253,258,277,278,280,281,282,287,300,302,303,304,315,316,329,330,337,341,],[93,93,93,93,93,93,93,93,93,93,93,93,93,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,93,93,93,-91,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,]),'RETURN':([6,9,38,43,56,58,59,61,62,64,70,72,73,74,76,77,78,80,81,82,85,88,91,117,123,154,197,219,225,231,252,261,266,283,285,297,301,305,322,327,328,335,336,344,348,],[-6,-5,-118,-7,-118,-118,63,-24,63,-42,-43,-45,-33,63,-32,-40,-35,-41,-44,-34,-39,-38,-36,-37,-56,-46,-58,-48,-57,63,-47,63,-118,-63,-65,-103,-59,63,-107,-64,-105,-104,-108,-106,-109,]),'LESS':([93,95,97,98,101,102,103,104,105,107,147,148,150,152,153,185,186,206,207,214,215,216,244,245,],[-100,133,-101,-118,-99,-95,-102,-118,-97,-98,-87,-88,-118,-92,-93,-96,-93,133,133,-118,-118,-94,-90,-89,]),'READ':([121,],[163,]),'VOID':([4,5,6,7,9,10,11,12,13,20,38,43,128,170,171,],[-118,-4,-6,-118,-5,-118,22,25,-13,-12,-118,-7,-118,-14,-16,]),'DRAW_SQUARE':([6,9,38,43,56,58,59,61,62,64,70,72,73,74,76,77,78,80,81,82,85,88,91,117,123,154,197,219,225,231,252,261,266,283,285,297,301,305,322,327,328,335,336,344,348,],[-6,-5,-118,-7,-118,-118,65,-24,65,-42,-43,-45,-33,65,-32,-40,-35,-41,-44,-34,-39,-38,-36,-37,-56,-46,-58,-48,-57,65,-47,65,-118,-63,-65,-103,-59,65,-107,-64,-105,-104,-108,-106,-109,]),'YELLOW':([257,299,306,317,318,338,345,],[271,271,271,271,271,271,271,]),'DRAW_QUADRITERAL':([6,9,38,43,56,58,59,61,62,64,70,72,73,74,76,77,78,80,81,82,85,88,91,117,123,154,197,219,225,231,252,261,266,283,285,297,301,305,322,327,328,335,336,344,348,],[-6,-5,-118,-7,-118,-118,66,-24,66,-42,-43,-45,-33,66,-32,-40,-35,-41,-44,-34,-39,-38,-36,-37,-56,-46,-58,-48,-57,66,-47,66,-118,-63,-65,-103,-59,66,-107,-64,-105,-104,-108,-106,-109,]),'CHAR':([8,11,41,52,],[17,17,17,17,]),'LESSEQUAL':([93,95,96,97,98,101,102,103,104,105,107,134,136,147,148,150,152,153,185,186,206,207,208,209,210,211,212,213,214,215,216,236,237,244,245,],[-100,-118,143,-101,-118,-99,-95,-102,-118,-97,-98,-83,-84,-87,-88,-118,-92,-93,-96,-93,-118,-118,143,143,143,143,143,143,-118,-118,-94,-86,-85,-90,-89,]),'WHILE':([6,9,38,43,56,58,59,61,62,64,70,72,73,74,76,77,78,80,81,82,85,88,91,117,123,154,197,219,225,231,252,261,266,283,285,297,301,305,322,327,328,335,336,344,348,],[-6,-5,-118,-7,-118,-118,68,-24,68,-42,-43,-45,-33,68,-32,-40,-35,-41,-44,-34,-39,-38,-36,-37,-56,-46,-58,-48,-57,68,-47,68,-118,-63,-65,-103,-59,68,-107,-64,-105,-104,-108,-106,-109,]),'PROGRAM':([0,],[1,]),'DRAW_TRIANGLE':([6,9,38,43,56,58,59,61,62,64,70,72,73,74,76,77,78,80,81,82,85,88,91,117,123,154,197,219,225,231,252,261,266,283,285,297,301,305,322,327,328,335,336,344,348,],[-6,-5,-118,-7,-118,-118,69,-24,69,-42,-43,-45,-33,69,-32,-40,-35,-41,-44,-34,-39,-38,-36,-37,-56,-46,-58,-48,-57,69,-47,69,-118,-63,-65,-103,-59,69,-107,-64,-105,-104,-108,-106,-109,]),'PRINT':([6,9,38,43,56,58,59,61,62,64,70,72,73,74,76,77,78,80,81,82,85,88,91,117,123,154,197,219,225,231,252,261,266,283,285,297,301,305,322,327,328,335,336,344,348,],[-6,-5,-118,-7,-118,-118,67,-24,67,-42,-43,-45,-33,67,-32,-40,-35,-41,-44,-34,-39,-38,-36,-37,-56,-46,-58,-48,-57,67,-47,67,-118,-63,-65,-103,-59,67,-107,-64,-105,-104,-108,-106,-109,]),'CYAN':([257,299,306,317,318,338,345,],[272,272,272,272,272,272,272,]),'TRUE':([63,99,109,110,111,114,118,119,120,121,125,126,127,129,131,133,135,137,138,140,141,142,143,145,146,158,165,172,173,174,175,176,177,178,179,180,181,182,183,184,188,189,192,193,194,202,203,226,246,247,249,250,251,253,258,277,278,280,281,282,287,300,302,303,304,315,316,329,330,337,341,],[97,97,97,97,97,97,97,97,97,97,97,97,97,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,97,97,97,-91,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,]),'ELSE':([266,],[284,]),'RED':([257,299,306,317,318,338,345,],[275,275,275,275,275,275,275,]),'BLUE':([257,299,306,317,318,338,345,],[267,267,267,267,267,267,267,]),'LEFTSB':([27,86,104,150,],[33,120,151,151,]),'LEFTP':([28,29,34,35,36,37,63,65,66,67,68,69,83,84,86,87,89,90,99,104,109,110,111,112,113,114,118,119,120,121,122,124,125,126,127,129,131,133,135,137,138,140,141,142,143,145,146,153,158,163,165,172,173,174,175,176,177,178,179,180,181,182,183,184,188,189,192,193,194,202,203,226,246,247,249,250,251,253,258,277,278,280,281,282,287,300,302,303,304,315,316,329,330,337,341,],[-118,-118,41,-15,42,-3,99,109,110,111,-118,114,118,119,-118,125,126,127,99,-118,99,99,99,158,-60,99,99,99,99,99,-50,165,99,99,99,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-50,99,196,99,99,-91,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,]),'SEMICOLON':([26,27,30,32,39,44,45,75,93,94,95,96,97,98,100,101,102,103,104,105,106,107,108,130,132,134,136,139,144,147,148,150,152,153,164,185,186,190,204,205,206,207,208,209,210,211,212,213,214,215,216,227,228,234,235,236,237,238,239,240,241,242,243,244,245,286,314,321,331,332,342,347,],[-118,-10,38,-9,-118,-8,-11,117,-100,-118,-118,-118,-101,-118,-69,-99,-95,-102,-118,-97,-70,-98,154,-71,-72,-83,-84,-75,-76,-87,-88,-118,-92,-93,197,-96,-93,219,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-94,252,-49,-73,-74,-86,-85,-78,-79,-77,-81,-80,-82,-90,-89,297,322,328,335,336,344,348,]),'PURPLE':([257,299,306,317,318,338,345,],[270,270,270,270,270,270,270,]),'GREEN':([257,299,306,317,318,338,345,],[269,269,269,269,269,269,269,]),'CHAR_CTE':([63,99,109,110,111,114,118,119,120,121,125,126,127,129,131,133,135,137,138,140,141,142,143,145,146,158,165,172,173,174,175,176,177,178,179,180,181,182,183,184,188,189,192,193,194,202,203,226,246,247,249,250,251,253,258,277,278,280,281,282,287,300,302,303,304,315,316,329,330,337,341,],[101,101,101,101,101,101,101,101,101,101,101,101,101,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,101,101,101,-91,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,]),'COLON':([3,],[4,]),'LEFTB':([50,55,201,248,284,295,296,],[56,58,231,261,-118,305,-67,]),'COMMA':([26,27,39,45,47,51,57,93,94,95,96,97,98,100,101,102,103,104,105,106,107,130,132,134,136,139,144,147,148,150,152,153,155,156,159,160,161,168,169,185,186,200,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,222,223,224,228,229,230,232,233,234,235,236,237,238,239,240,241,242,243,244,245,259,260,262,263,264,276,288,289,292,293,294,298,308,309,310,311,323,324,333,334,339,343,],[31,-10,31,-11,52,-23,52,-100,-118,-118,-118,-101,-118,-69,-99,-95,-102,-118,-97,-70,-98,-71,-72,-83,-84,-75,-76,-87,-88,-118,-92,-93,188,189,192,193,194,202,203,-96,-93,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-94,246,247,249,250,251,-49,-55,253,257,258,-73,-74,-86,-85,-78,-79,-77,-81,-80,-82,-90,-89,277,278,280,281,282,287,299,300,302,303,304,306,315,316,317,318,329,330,337,338,341,345,]),'INT_CTE':([33,63,99,109,110,111,114,118,119,120,121,125,126,127,129,131,133,135,137,138,140,141,142,143,145,146,151,158,165,172,173,174,175,176,177,178,179,180,181,182,183,184,188,189,192,193,194,202,203,226,246,247,249,250,251,253,258,277,278,280,281,282,287,300,302,303,304,315,316,329,330,337,341,],[40,105,105,105,105,105,105,105,105,105,105,105,105,105,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,187,105,105,105,-91,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,]),'METHOD':([4,5,6,7,9,10,38,43,128,170,171,],[-118,-4,-6,11,-5,11,-118,-7,-118,-14,-16,]),'$end':([2,24,115,],[0,-1,-2,]),'DIVISION':([93,97,98,101,102,103,104,105,107,150,152,153,185,186,214,215,216,],[-100,-101,145,-99,-95,-102,-118,-97,-98,-118,-92,-93,-96,-93,145,145,-94,]),'STRING':([8,11,41,52,],[19,19,19,19,]),'GREATEREQUAL':([93,95,96,97,98,101,102,103,104,105,107,134,136,147,148,150,152,153,185,186,206,207,208,209,210,211,212,213,214,215,216,236,237,244,245,],[-100,-118,138,-101,-118,-99,-95,-102,-118,-97,-98,-83,-84,-87,-88,-118,-92,-93,-96,-93,-118,-118,138,138,138,138,138,138,-118,-118,-94,-86,-85,-90,-89,]),'DRAW_LINE':([6,9,38,43,56,58,59,61,62,64,70,72,73,74,76,77,78,80,81,82,85,88,91,117,123,154,197,219,225,231,252,261,266,283,285,297,301,305,322,327,328,335,336,344,348,],[-6,-5,-118,-7,-118,-118,83,-24,83,-42,-43,-45,-33,83,-32,-40,-35,-41,-44,-34,-39,-38,-36,-37,-56,-46,-58,-48,-57,83,-47,83,-118,-63,-65,-103,-59,83,-107,-64,-105,-104,-108,-106,-109,]),'EQUALS':([93,95,96,97,98,101,102,103,104,105,107,134,136,147,148,150,152,153,185,186,206,207,208,209,210,211,212,213,214,215,216,236,237,244,245,],[-100,-118,140,-101,-118,-99,-95,-102,-118,-97,-98,-83,-84,-87,-88,-118,-92,-93,-96,-93,-118,-118,140,140,140,140,140,140,-118,-118,-94,-86,-85,-90,-89,]),'DRAW_RECTANGLE':([6,9,38,43,56,58,59,61,62,64,70,72,73,74,76,77,78,80,81,82,85,88,91,117,123,154,197,219,225,231,252,261,266,283,285,297,301,305,322,327,328,335,336,344,348,],[-6,-5,-118,-7,-118,-118,84,-24,84,-42,-43,-45,-33,84,-32,-40,-35,-41,-44,-34,-39,-38,-36,-37,-56,-46,-58,-48,-57,84,-47,84,-118,-63,-65,-103,-59,84,-107,-64,-105,-104,-108,-106,-109,]),'GREATERTHAN':([93,95,96,97,98,101,102,103,104,105,107,134,136,147,148,150,152,153,185,186,206,207,208,209,210,211,212,213,214,215,216,236,237,244,245,],[-100,-118,142,-101,-118,-99,-95,-102,-118,-97,-98,-83,-84,-87,-88,-118,-92,-93,-96,-93,-118,-118,142,142,142,142,142,142,-118,-118,-94,-86,-85,-90,-89,]),'VAR':([4,38,56,58,],[8,8,8,8,]),'FALSE':([63,99,109,110,111,114,118,119,120,121,125,126,127,129,131,133,135,137,138,140,141,142,143,145,146,158,165,172,173,174,175,176,177,178,179,180,181,182,183,184,188,189,192,193,194,202,203,226,246,247,249,250,251,253,258,277,278,280,281,282,287,300,302,303,304,315,316,329,330,337,341,],[103,103,103,103,103,103,103,103,103,103,103,103,103,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,103,103,103,-91,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,]),'WHITE':([257,299,306,317,318,338,345,],[274,274,274,274,274,274,274,]),'TIMES':([93,97,98,101,102,103,104,105,107,150,152,153,185,186,214,215,216,],[-100,-101,146,-99,-95,-102,-118,-97,-98,-118,-92,-93,-96,-93,146,146,-94,]),'ID':([1,6,9,14,15,16,17,18,19,21,22,23,31,38,43,46,56,58,59,61,62,63,64,70,72,73,74,76,77,78,80,81,82,85,88,91,99,109,110,111,114,117,118,119,120,121,123,125,126,127,129,131,133,135,137,138,140,141,142,143,145,146,154,158,165,172,173,174,175,176,177,178,179,180,181,182,183,184,188,189,192,193,194,197,202,203,219,225,226,231,246,247,249,250,251,252,253,258,261,266,277,278,280,281,282,283,285,287,297,300,301,302,303,304,305,315,316,322,327,328,329,330,335,336,337,341,344,348,],[3,-6,-5,27,-27,-30,-28,-29,-31,-18,-17,28,27,-118,-7,51,-118,-118,86,-24,86,104,-42,-43,-45,-33,86,-32,-40,-35,-41,-44,-34,-39,-38,-36,150,104,104,104,104,-37,104,104,104,104,-56,104,104,104,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-46,104,104,150,-91,150,150,150,150,150,150,150,150,150,150,150,104,104,104,104,104,-58,104,104,-48,-57,104,86,104,104,104,104,104,-47,104,104,86,-118,104,104,104,104,104,-63,-65,104,-103,104,-59,104,104,104,86,104,104,-107,-64,-105,104,104,-104,-108,104,104,-106,-109,]),'IF':([6,9,38,43,56,58,59,61,62,64,70,72,73,74,76,77,78,80,81,82,85,88,91,117,123,154,197,219,225,231,252,261,266,283,285,297,301,305,322,327,328,335,336,344,348,],[-6,-5,-118,-7,-118,-118,87,-24,87,-42,-43,-45,-33,87,-32,-40,-35,-41,-44,-34,-39,-38,-36,-37,-56,-46,-58,-48,-57,87,-47,87,-118,-63,-65,-103,-59,87,-107,-64,-105,-104,-108,-106,-109,]),'AND':([93,94,95,96,97,98,101,102,103,104,105,107,134,136,139,144,147,148,150,152,153,185,186,204,205,206,207,208,209,210,211,212,213,214,215,216,236,237,238,239,240,241,242,243,244,245,],[-100,129,-118,-118,-101,-118,-99,-95,-102,-118,-97,-98,-83,-84,-75,-76,-87,-88,-118,-92,-93,-96,-93,129,129,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-94,-86,-85,-78,-79,-77,-81,-80,-82,-90,-89,]),'RIGHTP':([41,42,47,48,49,51,53,54,57,60,93,94,95,96,97,98,100,101,102,103,104,105,106,107,130,132,134,136,139,144,147,148,149,150,152,153,157,165,166,167,185,186,191,196,198,199,200,204,205,206,207,208,209,210,211,212,213,214,215,216,220,221,228,229,230,234,235,236,237,238,239,240,241,242,243,244,245,253,254,255,265,267,268,269,270,271,272,273,274,275,307,313,325,326,340,346,],[-118,50,-118,55,-19,-23,-21,-20,-118,-22,-100,-118,-118,-118,-101,-118,-69,-99,-95,-102,-118,-97,-70,-98,-71,-72,-83,-84,-75,-76,-87,-88,185,-118,-92,-93,190,-118,201,-66,-96,-93,-118,227,-52,228,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-94,248,-61,-49,-55,-118,-73,-74,-86,-85,-78,-79,-77,-81,-80,-82,-90,-89,-118,-54,-51,-53,-111,286,-114,-113,-112,-116,-115,-117,-110,314,321,331,332,342,347,]),'RIGHTSB':([40,93,94,95,96,97,98,100,101,102,103,104,105,106,107,130,132,134,136,139,144,147,148,150,152,153,162,185,186,187,204,205,206,207,208,209,210,211,212,213,214,215,216,228,234,235,236,237,238,239,240,241,242,243,244,245,],[45,-100,-118,-118,-118,-101,-118,-69,-99,-95,-102,-118,-97,-70,-98,-71,-72,-83,-84,-75,-76,-87,-88,-118,-92,-93,195,-96,-93,216,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-94,-49,-73,-74,-86,-85,-78,-79,-77,-81,-80,-82,-90,-89,]),'INT':([8,11,41,52,],[15,15,15,15,]),'SUM':([93,95,97,98,101,102,103,104,105,107,147,148,150,152,153,185,186,206,207,214,215,216,244,245,],[-100,135,-101,-118,-99,-95,-102,-118,-97,-98,-87,-88,-118,-92,-93,-96,-93,135,135,-118,-118,-94,-90,-89,]),'FLOAT':([8,11,41,52,],[16,16,16,16,]),'FLOAT_CTE':([63,99,109,110,111,114,118,119,120,121,125,126,127,129,131,133,135,137,138,140,141,142,143,145,146,158,165,172,173,174,175,176,177,178,179,180,181,182,183,184,188,189,192,193,194,202,203,226,246,247,249,250,251,253,258,277,278,280,281,282,287,300,302,303,304,315,316,329,330,337,341,],[107,107,107,107,107,107,107,107,107,107,107,107,107,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,107,107,107,-91,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,]),'LESSTHAN':([93,95,96,97,98,101,102,103,104,105,107,134,136,147,148,150,152,153,185,186,206,207,208,209,210,211,212,213,214,215,216,236,237,244,245,],[-100,-118,141,-101,-118,-99,-95,-102,-118,-97,-98,-83,-84,-87,-88,-118,-92,-93,-96,-93,-118,-118,141,141,141,141,141,141,-118,-118,-94,-86,-85,-90,-89,]),'DRAW_DOT':([6,9,38,43,56,58,59,61,62,64,70,72,73,74,76,77,78,80,81,82,85,88,91,117,123,154,197,219,225,231,252,261,266,283,285,297,301,305,322,327,328,335,336,344,348,],[-6,-5,-118,-7,-118,-118,89,-24,89,-42,-43,-45,-33,89,-32,-40,-35,-41,-44,-34,-39,-38,-36,-37,-56,-46,-58,-48,-57,89,-47,89,-118,-63,-65,-103,-59,89,-107,-64,-105,-104,-108,-106,-109,]),'ASSIGN':([86,195,],[121,226,]),'BOOLEAN':([8,11,41,52,],[18,18,18,18,]),'RIGHTB':([6,9,38,43,56,58,59,61,62,64,70,71,72,73,74,76,77,78,79,80,81,82,85,88,91,92,116,117,123,154,197,219,225,231,252,256,261,266,279,283,285,290,291,297,301,305,312,319,320,322,327,328,335,336,344,348,],[-6,-5,-118,-7,-118,-118,-118,-24,-118,-42,-43,115,-45,-33,-118,-32,-40,-35,-26,-41,-44,-34,-39,-38,-36,128,-25,-37,-56,-46,-58,-48,-57,-118,-47,266,-118,-118,-118,-63,-65,301,-62,-103,-59,-118,-118,327,-68,-107,-64,-105,-104,-108,-106,-109,]),'BLACK':([257,299,306,317,318,338,345,],[273,273,273,273,273,273,273,]),'MAIN':([25,],[29,]),'OR':([93,94,95,96,97,98,101,102,103,104,105,107,134,136,139,144,147,148,150,152,153,185,186,204,205,206,207,208,209,210,211,212,213,214,215,216,236,237,238,239,240,241,242,243,244,245,],[-100,131,-118,-118,-101,-118,-99,-95,-102,-118,-97,-98,-83,-84,-75,-76,-87,-88,-118,-92,-93,-96,-93,131,131,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-94,-86,-85,-78,-79,-77,-81,-80,-82,-90,-89,]),'DRAW_CIRCLE':([6,9,38,43,56,58,59,61,62,64,70,72,73,74,76,77,78,80,81,82,85,88,91,117,123,154,197,219,225,231,252,261,266,283,285,297,301,305,322,327,328,335,336,344,348,],[-6,-5,-118,-7,-118,-118,90,-24,90,-42,-43,-45,-33,90,-32,-40,-35,-41,-44,-34,-39,-38,-36,-37,-56,-46,-58,-48,-57,90,-47,90,-118,-63,-65,-103,-59,90,-107,-64,-105,-104,-108,-106,-109,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'goto_main':([12,],[24,]),'idarray':([104,150,],[152,152,]),'constante':([63,99,109,110,111,114,118,119,120,121,125,126,127,158,165,172,174,175,176,177,178,179,180,181,182,183,184,188,189,192,193,194,202,203,226,246,247,249,250,251,253,258,277,278,280,281,282,287,300,302,303,304,315,316,329,330,337,341,],[102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,]),'declara_var':([4,38,56,58,],[5,43,59,61,]),'color':([257,299,306,317,318,338,345,],[268,307,313,325,326,340,346,]),'dibujaTriangulo':([59,62,74,231,261,305,],[64,64,64,64,64,64,]),'variables':([4,38,56,58,],[6,6,6,6,]),'end_method':([128,],[170,]),'condicion4':([312,],[319,]),'operador1':([63,99,109,110,111,114,118,119,120,121,125,126,127,158,165,172,174,188,189,192,193,194,202,203,226,246,247,249,250,251,253,258,277,278,280,281,282,287,300,302,303,304,315,316,329,330,337,341,],[94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,204,205,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,]),'condicion1':([125,],[166,]),'condicion3':([284,],[295,]),'dibujaCuadrado':([59,62,74,231,261,305,],[70,70,70,70,70,70,]),'bloque':([59,62,74,231,261,305,],[71,92,116,256,279,312,]),'operador2':([63,99,109,110,111,114,118,119,120,121,125,126,127,158,165,172,174,177,178,179,180,181,182,188,189,192,193,194,202,203,226,246,247,249,250,251,253,258,277,278,280,281,282,287,300,302,303,304,315,316,329,330,337,341,],[96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,208,209,210,211,212,213,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,]),'operador3':([63,99,109,110,111,114,118,119,120,121,125,126,127,158,165,172,174,175,176,177,178,179,180,181,182,188,189,192,193,194,202,203,226,246,247,249,250,251,253,258,277,278,280,281,282,287,300,302,303,304,315,316,329,330,337,341,],[95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,206,207,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,]),'dibujaCuadrilatero':([59,62,74,231,261,305,],[72,72,72,72,72,72,]),'method_vars':([58,],[62,]),'exp4':([98,214,215,],[147,244,245,]),'ciclo':([59,62,74,231,261,305,],[73,73,73,73,73,73,]),'tipo':([8,11,41,52,],[14,21,46,46,]),'paraux':([47,57,],[54,60,]),'exp3':([95,206,207,],[134,236,237,]),'exp2':([96,208,209,210,211,212,213,],[139,238,239,240,241,242,243,]),'exp1':([94,204,205,],[130,234,235,]),'estatuto':([59,62,74,231,261,305,],[74,74,74,74,74,74,]),'param':([200,],[230,]),'operador4':([63,99,109,110,111,114,118,119,120,121,125,126,127,158,165,172,174,175,176,177,178,179,180,181,182,183,184,188,189,192,193,194,202,203,226,246,247,249,250,251,253,258,277,278,280,281,282,287,300,302,303,304,315,316,329,330,337,341,],[98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,214,215,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,]),'llamada':([59,62,63,74,109,110,111,114,118,119,120,121,125,126,127,158,165,188,189,192,193,194,202,203,226,231,246,247,249,250,251,253,258,261,277,278,280,281,282,287,300,302,303,304,305,315,316,329,330,337,341,],[75,75,100,75,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,75,100,100,100,100,100,100,100,75,100,100,100,100,100,100,100,100,100,100,75,100,100,100,100,100,100,]),'condicion':([59,62,74,231,261,305,],[76,76,76,76,76,76,]),'tipo_metodo':([11,],[23,]),'llamafun':([86,104,],[124,124,]),'dibujaLinea':([59,62,74,231,261,305,],[77,77,77,77,77,77,]),'var':([14,31,],[26,39,]),'params':([41,],[48,]),'lectura':([59,62,74,231,261,305,],[78,78,78,78,78,78,]),'empty':([4,7,10,26,28,29,38,39,41,47,56,57,58,59,62,68,74,86,94,95,96,98,104,128,129,131,133,135,137,138,140,141,142,143,145,146,150,165,191,200,204,205,206,207,208,209,210,211,212,213,214,215,230,231,253,261,266,279,284,305,312,],[9,13,13,32,35,37,9,32,49,53,9,53,9,79,79,113,79,122,132,136,144,148,153,171,173,173,173,173,173,173,173,173,173,173,173,173,186,198,221,229,132,132,136,136,144,144,144,144,144,144,148,148,254,79,198,79,285,291,296,79,320,]),'dibujaCirculo':([59,62,74,231,261,305,],[80,80,80,80,80,80,]),'saveop':([129,131,133,135,137,138,140,141,142,143,145,146,],[172,174,175,176,177,178,179,180,181,182,183,184,]),'dibujaRectangulo':([59,62,74,231,261,305,],[81,81,81,81,81,81,]),'return':([59,62,74,231,261,305,],[82,82,82,82,82,82,]),'parametro':([41,52,],[47,57,]),'args':([165,253,],[199,265,]),'else':([266,],[283,]),'inicio_method':([28,],[34,]),'ciclo2':([279,],[290,]),'dibujaPunto':([59,62,74,231,261,305,],[85,85,85,85,85,85,]),'ciclo1':([191,],[220,]),'listargs':([230,],[255,]),'expresion':([63,99,109,110,111,114,118,119,120,121,125,126,127,158,165,188,189,192,193,194,202,203,226,246,247,249,250,251,253,258,277,278,280,281,282,287,300,302,303,304,315,316,329,330,337,341,],[106,149,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,]),'scopemain':([29,],[36,]),'metodo':([7,10,],[10,10,]),'asignacion':([59,62,74,231,261,305,],[88,88,88,88,88,88,]),'metodos':([7,10,],[12,20,]),'asign':([86,195,],[123,225,]),'salto_ciclo':([68,],[112,]),'programa':([0,],[2,]),'exp':([63,109,110,111,114,118,119,120,121,125,126,127,158,165,188,189,192,193,194,202,203,226,246,247,249,250,251,253,258,277,278,280,281,282,287,300,302,303,304,315,316,329,330,337,341,],[108,155,156,157,159,160,161,162,164,167,168,169,191,200,217,218,222,223,224,232,233,164,259,260,262,263,264,200,276,288,289,292,293,294,298,308,309,310,311,323,324,333,334,339,343,]),'lista_variables':([26,39,],[30,44,]),'globales':([4,],[7,]),'escritura':([59,62,74,231,261,305,],[91,91,91,91,91,91,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> PROGRAM ID COLON globales metodos goto_main','programa',6,'p_programa','Parser.py',235),
  ('goto_main -> VOID MAIN scopemain LEFTP RIGHTP LEFTB declara_var bloque RIGHTB','goto_main',9,'p_goto_main','Parser.py',271),
  ('scopemain -> empty','scopemain',1,'p_scopemain','Parser.py',274),
  ('globales -> declara_var','globales',1,'p_globales','Parser.py',285),
  ('declara_var -> empty','declara_var',1,'p_declara_var_vacio','Parser.py',292),
  ('declara_var -> variables','declara_var',1,'p_declara_var','Parser.py',295),
  ('variables -> VAR tipo var lista_variables SEMICOLON declara_var','variables',6,'p_variables','Parser.py',303),
  ('lista_variables -> COMMA var lista_variables','lista_variables',3,'p_lista_variables','Parser.py',312),
  ('lista_variables -> empty','lista_variables',1,'p_lista_variables','Parser.py',313),
  ('var -> ID','var',1,'p_var','Parser.py',316),
  ('var -> ID LEFTSB INT_CTE RIGHTSB','var',4,'p_var','Parser.py',317),
  ('metodos -> metodo metodos','metodos',2,'p_metodos','Parser.py',338),
  ('metodos -> empty','metodos',1,'p_metodos','Parser.py',339),
  ('metodo -> METHOD tipo_metodo ID inicio_method LEFTP params RIGHTP LEFTB method_vars bloque RIGHTB end_method','metodo',12,'p_metodo','Parser.py',346),
  ('inicio_method -> empty','inicio_method',1,'p_inicio_method','Parser.py',359),
  ('end_method -> empty','end_method',1,'p_end_method','Parser.py',378),
  ('tipo_metodo -> VOID','tipo_metodo',1,'p_tipo_metodo','Parser.py',386),
  ('tipo_metodo -> tipo','tipo_metodo',1,'p_tipo_metodo','Parser.py',387),
  ('params -> empty','params',1,'p_params','Parser.py',399),
  ('params -> parametro paraux','params',2,'p_params','Parser.py',400),
  ('paraux -> empty','paraux',1,'p_paraux','Parser.py',403),
  ('paraux -> COMMA parametro paraux','paraux',3,'p_paraux','Parser.py',404),
  ('parametro -> tipo ID','parametro',2,'p_parametro','Parser.py',412),
  ('method_vars -> declara_var','method_vars',1,'p_method_vars','Parser.py',428),
  ('bloque -> estatuto bloque','bloque',2,'p_bloque','Parser.py',435),
  ('bloque -> empty','bloque',1,'p_bloque','Parser.py',436),
  ('tipo -> INT','tipo',1,'p_tipo','Parser.py',444),
  ('tipo -> CHAR','tipo',1,'p_tipo','Parser.py',445),
  ('tipo -> BOOLEAN','tipo',1,'p_tipo','Parser.py',446),
  ('tipo -> FLOAT','tipo',1,'p_tipo','Parser.py',447),
  ('tipo -> STRING','tipo',1,'p_tipo','Parser.py',448),
  ('estatuto -> condicion','estatuto',1,'p_estatuto','Parser.py',458),
  ('estatuto -> ciclo','estatuto',1,'p_estatuto','Parser.py',459),
  ('estatuto -> return','estatuto',1,'p_estatuto','Parser.py',460),
  ('estatuto -> lectura','estatuto',1,'p_estatuto','Parser.py',461),
  ('estatuto -> escritura','estatuto',1,'p_estatuto','Parser.py',462),
  ('estatuto -> llamada SEMICOLON','estatuto',2,'p_estatuto','Parser.py',463),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','Parser.py',464),
  ('estatuto -> dibujaPunto','estatuto',1,'p_estatuto','Parser.py',465),
  ('estatuto -> dibujaLinea','estatuto',1,'p_estatuto','Parser.py',466),
  ('estatuto -> dibujaCirculo','estatuto',1,'p_estatuto','Parser.py',467),
  ('estatuto -> dibujaTriangulo','estatuto',1,'p_estatuto','Parser.py',468),
  ('estatuto -> dibujaCuadrado','estatuto',1,'p_estatuto','Parser.py',469),
  ('estatuto -> dibujaRectangulo','estatuto',1,'p_estatuto','Parser.py',470),
  ('estatuto -> dibujaCuadrilatero','estatuto',1,'p_estatuto','Parser.py',471),
  ('return -> RETURN exp SEMICOLON','return',3,'p_return','Parser.py',479),
  ('lectura -> ID ASSIGN READ LEFTP RIGHTP SEMICOLON','lectura',6,'p_lectura','Parser.py',503),
  ('escritura -> PRINT LEFTP exp RIGHTP SEMICOLON','escritura',5,'p_escritura','Parser.py',512),
  ('llamada -> ID llamafun LEFTP args RIGHTP','llamada',5,'p_llamada','Parser.py',524),
  ('llamafun -> empty','llamafun',1,'p_llamafun','Parser.py',538),
  ('args -> exp param listargs','args',3,'p_args','Parser.py',553),
  ('args -> empty','args',1,'p_args_vacio','Parser.py',556),
  ('listargs -> COMMA args','listargs',2,'p_listargs','Parser.py',559),
  ('listargs -> empty','listargs',1,'p_listargs','Parser.py',560),
  ('param -> empty','param',1,'p_param','Parser.py',563),
  ('asignacion -> ID asign','asignacion',2,'p_asignacion','Parser.py',586),
  ('asignacion -> ID LEFTSB exp RIGHTSB asign','asignacion',5,'p_asignacion_array','Parser.py',619),
  ('asign -> ASSIGN exp SEMICOLON','asign',3,'p_asign','Parser.py',629),
  ('ciclo -> WHILE salto_ciclo LEFTP exp ciclo1 RIGHTP LEFTB bloque ciclo2 RIGHTB','ciclo',10,'p_ciclo','Parser.py',640),
  ('salto_ciclo -> empty','salto_ciclo',1,'p_salto_ciclo','Parser.py',648),
  ('ciclo1 -> empty','ciclo1',1,'p_ciclo1','Parser.py',657),
  ('ciclo2 -> empty','ciclo2',1,'p_ciclo2','Parser.py',674),
  ('condicion -> IF LEFTP condicion1 RIGHTP LEFTB bloque RIGHTB else','condicion',8,'p_condicion','Parser.py',687),
  ('else -> ELSE condicion3 LEFTB bloque condicion4 RIGHTB','else',6,'p_else','Parser.py',690),
  ('else -> empty','else',1,'p_else_vacio','Parser.py',693),
  ('condicion1 -> exp','condicion1',1,'p_condicion1','Parser.py',700),
  ('condicion3 -> empty','condicion3',1,'p_condicion3','Parser.py',717),
  ('condicion4 -> empty','condicion4',1,'p_condicion4','Parser.py',730),
  ('exp -> llamada','exp',1,'p_exp','Parser.py',741),
  ('exp -> expresion','exp',1,'p_exp','Parser.py',742),
  ('expresion -> operador1 exp1','expresion',2,'p_expresion','Parser.py',751),
  ('exp1 -> empty','exp1',1,'p_exp1','Parser.py',754),
  ('exp1 -> AND saveop operador1 exp1','exp1',4,'p_exp1_and','Parser.py',758),
  ('exp1 -> OR saveop operador1 exp1','exp1',4,'p_exp1_or','Parser.py',761),
  ('operador1 -> operador2 exp2','operador1',2,'p_operador1','Parser.py',770),
  ('exp2 -> empty','exp2',1,'p_exp2_vacio','Parser.py',773),
  ('exp2 -> EQUALS saveop operador2 exp2','exp2',4,'p_exp2_equals','Parser.py',777),
  ('exp2 -> NOTEQUAL saveop operador2 exp2','exp2',4,'p_exp2_notequals','Parser.py',780),
  ('exp2 -> GREATEREQUAL saveop operador2 exp2','exp2',4,'p_exp2_greatherequal','Parser.py',783),
  ('exp2 -> GREATERTHAN saveop operador2 exp2','exp2',4,'p_exp2_greatherthan','Parser.py',786),
  ('exp2 -> LESSTHAN saveop operador2 exp2','exp2',4,'p_exp2_lessthan','Parser.py',789),
  ('exp2 -> LESSEQUAL saveop operador2 exp2','exp2',4,'p_exp2_lessequal','Parser.py',792),
  ('operador2 -> operador3 exp3','operador2',2,'p_operador2','Parser.py',801),
  ('exp3 -> empty','exp3',1,'p_exp3_vacio','Parser.py',804),
  ('exp3 -> SUM saveop operador3 exp3','exp3',4,'p_exp3_sum','Parser.py',808),
  ('exp3 -> LESS saveop operador3 exp3','exp3',4,'p_exp3_less','Parser.py',812),
  ('operador3 -> operador4 exp4','operador3',2,'p_operador3','Parser.py',821),
  ('exp4 -> empty','exp4',1,'p_exp4_empty','Parser.py',824),
  ('exp4 -> TIMES saveop operador4 exp4','exp4',4,'p_exp4_times','Parser.py',828),
  ('exp4 -> DIVISION saveop operador4 exp4','exp4',4,'p_exp4_division','Parser.py',832),
  ('saveop -> empty','saveop',1,'p_saveop','Parser.py',836),
  ('operador4 -> ID idarray','operador4',2,'p_operador4_id','Parser.py',846),
  ('idarray -> empty','idarray',1,'p_idarray_empty','Parser.py',885),
  ('idarray -> LEFTSB INT_CTE RIGHTSB','idarray',3,'p_idarray_full','Parser.py',888),
  ('operador4 -> constante','operador4',1,'p_operador4_cons','Parser.py',898),
  ('operador4 -> LEFTP expresion RIGHTP','operador4',3,'p_operador4_exp','Parser.py',901),
  ('constante -> INT_CTE','constante',1,'p_constante_int','Parser.py',909),
  ('constante -> FLOAT_CTE','constante',1,'p_constante_float','Parser.py',921),
  ('constante -> CHAR_CTE','constante',1,'p_constante_char','Parser.py',934),
  ('constante -> STRING_CTE','constante',1,'p_constante_string','Parser.py',946),
  ('constante -> TRUE','constante',1,'p_constante_true','Parser.py',958),
  ('constante -> FALSE','constante',1,'p_constante_true','Parser.py',959),
  ('dibujaPunto -> DRAW_DOT LEFTP exp COMMA exp COMMA color RIGHTP SEMICOLON','dibujaPunto',9,'p_dibujaPunto','Parser.py',972),
  ('dibujaLinea -> DRAW_LINE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON','dibujaLinea',15,'p_dibujaLinea','Parser.py',979),
  ('dibujaCirculo -> DRAW_CIRCLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON','dibujaCirculo',13,'p_dibujaCirculo','Parser.py',990),
  ('dibujaTriangulo -> DRAW_TRIANGLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON','dibujaTriangulo',19,'p_dibujaTriangulo','Parser.py',1000),
  ('dibujaCuadrado -> DRAW_SQUARE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON','dibujaCuadrado',13,'p_dibujaCuadrado','Parser.py',1014),
  ('dibujaRectangulo -> DRAW_RECTANGLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON','dibujaRectangulo',15,'p_dibujaRectangulo','Parser.py',1024),
  ('dibujaCuadrilatero -> DRAW_QUADRITERAL LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON','dibujaCuadrilatero',23,'p_dibujaCuadrilatero','Parser.py',1034),
  ('color -> RED','color',1,'p_color','Parser.py',1050),
  ('color -> BLUE','color',1,'p_color','Parser.py',1051),
  ('color -> YELLOW','color',1,'p_color','Parser.py',1052),
  ('color -> PURPLE','color',1,'p_color','Parser.py',1053),
  ('color -> GREEN','color',1,'p_color','Parser.py',1054),
  ('color -> BLACK','color',1,'p_color','Parser.py',1055),
  ('color -> CYAN','color',1,'p_color','Parser.py',1056),
  ('color -> WHITE','color',1,'p_color','Parser.py',1057),
  ('empty -> <empty>','empty',0,'p_empty','Parser.py',1067),
]
