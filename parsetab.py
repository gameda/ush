
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightASSIGNleftANDORleftEQUALSNOTEQUALleftGREATERTHANGREATEREQUALLESSTHANLESSEQUALleftSUMLESSleftTIMESDIVISIONID LEFTSB RIGHTSB COMMA SEMICOLON COLON LEFTP RIGHTP LEFTB RIGHTB ASSIGN FLOAT_CTE INT_CTE CHAR_CTE STRING_CTE TIMES DIVISION SUM LESS EQUALS GREATEREQUAL GREATERTHAN LESSTHAN LESSEQUAL NOTEQUAL OR AND RETURN STRING INT VOID FLOAT YELLOW ELSE CHAR PRINT BOOLEAN DRAW_CIRCLE CYAN FALSE TRUE IF BLUE DRAW_TRIANGLE DRAW_LINE DRAW_SQUARE PURPLE DRAW_RECTANGLE READ WHILE PROGRAM DRAW_DOT VAR GREEN WHITE MAIN DRAW_QUADRITERAL METHOD RED BLACKprograma :  PROGRAM ID COLON globales metodos goto_maingoto_main : VOID MAIN scopemain LEFTP RIGHTP LEFTB declara_var bloque RIGHTBscopemain : emptyglobales : declara_vardeclara_var : emptydeclara_var : variablesvariables : VAR tipo var lista_variables SEMICOLON declara_varlista_variables : COMMA var lista_variables\n        | emptyvar : ID\n        | ID LEFTSB INT_CTE RIGHTSBmetodos : metodo metodos\n        | emptymetodo : METHOD tipo_metodo ID inicio_method LEFTP params RIGHTP LEFTB method_vars bloque RIGHTB end_methodinicio_method : emptyend_method : emptytipo_metodo : VOID\n        | tipoparams : empty\n            | parametro parauxparaux : empty\n            | COMMA parametro parauxparametro : tipo IDmethod_vars : declara_varbloque : estatuto bloque\n        | emptytipo : INT\n        | CHAR\n        | BOOLEAN\n        | FLOAT\n        | STRINGestatuto : condicion\n        | ciclo\n        | return\n        | lectura\n        | escritura\n        | llamada SEMICOLON\n        | asignacion\n        | dibujaPunto\n        | dibujaLinea\n        | dibujaCirculo\n        | dibujaTriangulo\n        | dibujaCuadrado\n        | dibujaRectangulo\n        | dibujaCuadrilatero\n        return : RETURN exp SEMICOLONlectura : ID ASSIGN READ LEFTP RIGHTP SEMICOLONescritura : PRINT LEFTP exp RIGHTP SEMICOLONllamada : ID llamafun LEFTP args RIGHTPllamafun : emptyargs : exp param listargsargs : emptylistargs : COMMA args\n        | emptyparam : emptyasignacion : ID asignasignacion : ID LEFTSB exp RIGHTSB asignasign : ASSIGN exp SEMICOLONciclo : WHILE salto_ciclo LEFTP exp ciclo1 RIGHTP LEFTB bloque ciclo2 RIGHTBsalto_ciclo : emptyciclo1 : emptyciclo2 : emptycondicion : IF LEFTP condicion1 RIGHTP LEFTB bloque RIGHTB elseelse : ELSE condicion3 LEFTB bloque condicion4 RIGHTBelse : emptycondicion1 : expcondicion3 : emptycondicion4 : emptyexp : llamada\n        | expresion\n        expresion : operador1 exp1exp1 : emptyexp1 : AND saveop operador1 exp1exp1 : OR saveop operador1 exp1operador1 : operador2 exp2exp2 : emptyexp2 : EQUALS saveop operador2 exp2exp2 : NOTEQUAL saveop operador2 exp2exp2 : GREATEREQUAL saveop operador2 exp2exp2 : GREATERTHAN saveop operador2 exp2exp2 : LESSTHAN saveop operador2 exp2exp2 : LESSEQUAL saveop operador2 exp2operador2 : operador3 exp3exp3 : emptyexp3 : SUM saveop operador3 exp3exp3 : LESS saveop operador3 exp3operador3 : operador4 exp4exp4 : emptyexp4 : TIMES saveop operador4 exp4exp4 : DIVISION saveop operador4 exp4saveop : emptyoperador4 : IDoperador4 : constanteoperador4 : LEFTP expresion RIGHTPconstante : INT_CTEconstante : FLOAT_CTEconstante : CHAR_CTEconstante : STRING_CTEconstante : TRUE\n            | FALSEdibujaPunto : DRAW_DOT LEFTP exp COMMA exp COMMA color RIGHTP SEMICOLONdibujaLinea : DRAW_LINE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLONdibujaCirculo : DRAW_CIRCLE LEFTP exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLONdibujaTriangulo : DRAW_TRIANGLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLONdibujaCuadrado : DRAW_SQUARE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLONdibujaRectangulo : DRAW_RECTANGLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLONdibujaCuadrilatero : DRAW_QUADRITERAL LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLONcolor : RED \n        | BLUE \n        | YELLOW \n        | PURPLE \n        | GREEN \n        | BLACK \n        | CYAN \n        | WHITEempty :'
    
_lr_action_items = {'NOTEQUAL':([93,95,96,97,98,101,102,103,104,105,107,134,136,147,148,150,182,201,202,203,204,205,206,207,208,209,210,230,231,238,239,],[-98,-116,137,-99,-116,-97,-93,-100,-92,-95,-96,-83,-84,-87,-88,-92,-94,-116,-116,137,137,137,137,137,137,-116,-116,-86,-85,-90,-89,]),'STRING_CTE':([63,99,109,110,111,114,118,119,120,121,125,126,127,129,131,133,135,137,138,140,141,142,143,145,146,155,162,169,170,171,172,173,174,175,176,177,178,179,180,181,183,184,187,188,189,197,198,220,240,241,243,244,245,247,252,271,272,274,275,276,294,296,309,310,321,325,329,],[93,93,93,93,93,93,93,93,93,93,93,93,93,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,93,93,93,-91,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,]),'RETURN':([6,9,38,43,56,58,59,61,62,64,70,72,73,74,76,77,78,80,81,82,85,88,91,117,123,151,192,213,219,225,246,255,260,277,279,291,295,299,307,315,318,319,320,328,334,],[-6,-5,-116,-7,-116,-116,63,-24,63,-42,-43,-45,-33,63,-32,-40,-35,-41,-44,-34,-39,-38,-36,-37,-56,-46,-58,-48,-57,63,-47,63,-116,-63,-65,-101,-59,63,-103,-105,-102,-106,-64,-104,-107,]),'LESS':([93,95,97,98,101,102,103,104,105,107,147,148,150,182,201,202,209,210,238,239,],[-98,133,-99,-116,-97,-93,-100,-92,-95,-96,-87,-88,-92,-94,133,133,-116,-116,-90,-89,]),'READ':([121,],[160,]),'VOID':([4,5,6,7,9,10,11,12,13,20,38,43,128,167,168,],[-116,-4,-6,-116,-5,-116,22,25,-13,-12,-116,-7,-116,-14,-16,]),'DRAW_SQUARE':([6,9,38,43,56,58,59,61,62,64,70,72,73,74,76,77,78,80,81,82,85,88,91,117,123,151,192,213,219,225,246,255,260,277,279,291,295,299,307,315,318,319,320,328,334,],[-6,-5,-116,-7,-116,-116,65,-24,65,-42,-43,-45,-33,65,-32,-40,-35,-41,-44,-34,-39,-38,-36,-37,-56,-46,-58,-48,-57,65,-47,65,-116,-63,-65,-101,-59,65,-103,-105,-102,-106,-64,-104,-107,]),'YELLOW':([251,281,293,297,298,322,331,],[265,265,265,265,265,265,265,]),'DRAW_QUADRITERAL':([6,9,38,43,56,58,59,61,62,64,70,72,73,74,76,77,78,80,81,82,85,88,91,117,123,151,192,213,219,225,246,255,260,277,279,291,295,299,307,315,318,319,320,328,334,],[-6,-5,-116,-7,-116,-116,66,-24,66,-42,-43,-45,-33,66,-32,-40,-35,-41,-44,-34,-39,-38,-36,-37,-56,-46,-58,-48,-57,66,-47,66,-116,-63,-65,-101,-59,66,-103,-105,-102,-106,-64,-104,-107,]),'CHAR':([8,11,41,52,],[17,17,17,17,]),'LESSEQUAL':([93,95,96,97,98,101,102,103,104,105,107,134,136,147,148,150,182,201,202,203,204,205,206,207,208,209,210,230,231,238,239,],[-98,-116,143,-99,-116,-97,-93,-100,-92,-95,-96,-83,-84,-87,-88,-92,-94,-116,-116,143,143,143,143,143,143,-116,-116,-86,-85,-90,-89,]),'WHILE':([6,9,38,43,56,58,59,61,62,64,70,72,73,74,76,77,78,80,81,82,85,88,91,117,123,151,192,213,219,225,246,255,260,277,279,291,295,299,307,315,318,319,320,328,334,],[-6,-5,-116,-7,-116,-116,68,-24,68,-42,-43,-45,-33,68,-32,-40,-35,-41,-44,-34,-39,-38,-36,-37,-56,-46,-58,-48,-57,68,-47,68,-116,-63,-65,-101,-59,68,-103,-105,-102,-106,-64,-104,-107,]),'PROGRAM':([0,],[1,]),'DRAW_TRIANGLE':([6,9,38,43,56,58,59,61,62,64,70,72,73,74,76,77,78,80,81,82,85,88,91,117,123,151,192,213,219,225,246,255,260,277,279,291,295,299,307,315,318,319,320,328,334,],[-6,-5,-116,-7,-116,-116,69,-24,69,-42,-43,-45,-33,69,-32,-40,-35,-41,-44,-34,-39,-38,-36,-37,-56,-46,-58,-48,-57,69,-47,69,-116,-63,-65,-101,-59,69,-103,-105,-102,-106,-64,-104,-107,]),'PRINT':([6,9,38,43,56,58,59,61,62,64,70,72,73,74,76,77,78,80,81,82,85,88,91,117,123,151,192,213,219,225,246,255,260,277,279,291,295,299,307,315,318,319,320,328,334,],[-6,-5,-116,-7,-116,-116,67,-24,67,-42,-43,-45,-33,67,-32,-40,-35,-41,-44,-34,-39,-38,-36,-37,-56,-46,-58,-48,-57,67,-47,67,-116,-63,-65,-101,-59,67,-103,-105,-102,-106,-64,-104,-107,]),'CYAN':([251,281,293,297,298,322,331,],[266,266,266,266,266,266,266,]),'TRUE':([63,99,109,110,111,114,118,119,120,121,125,126,127,129,131,133,135,137,138,140,141,142,143,145,146,155,162,169,170,171,172,173,174,175,176,177,178,179,180,181,183,184,187,188,189,197,198,220,240,241,243,244,245,247,252,271,272,274,275,276,294,296,309,310,321,325,329,],[97,97,97,97,97,97,97,97,97,97,97,97,97,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,97,97,97,-91,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,]),'ELSE':([260,],[278,]),'RED':([251,281,293,297,298,322,331,],[269,269,269,269,269,269,269,]),'BLUE':([251,281,293,297,298,322,331,],[261,261,261,261,261,261,261,]),'LEFTSB':([27,86,],[33,120,]),'LEFTP':([28,29,34,35,36,37,63,65,66,67,68,69,83,84,86,87,89,90,99,104,109,110,111,112,113,114,118,119,120,121,122,124,125,126,127,129,131,133,135,137,138,140,141,142,143,145,146,155,160,162,169,170,171,172,173,174,175,176,177,178,179,180,181,183,184,187,188,189,197,198,220,240,241,243,244,245,247,252,271,272,274,275,276,294,296,309,310,321,325,329,],[-116,-116,41,-15,42,-3,99,109,110,111,-116,114,118,119,-116,125,126,127,99,-116,99,99,99,155,-60,99,99,99,99,99,-50,162,99,99,99,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,99,191,99,99,-91,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,]),'SEMICOLON':([26,27,30,32,39,44,45,75,93,94,95,96,97,98,100,101,102,103,104,105,106,107,108,130,132,134,136,139,144,147,148,150,161,182,185,199,200,201,202,203,204,205,206,207,208,209,210,221,222,228,229,230,231,232,233,234,235,236,237,238,239,280,300,308,311,312,326,333,],[-116,-10,38,-9,-116,-8,-11,117,-98,-116,-116,-116,-99,-116,-69,-97,-93,-100,-92,-95,-70,-96,151,-71,-72,-83,-84,-75,-76,-87,-88,-92,192,-94,213,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,246,-49,-73,-74,-86,-85,-78,-79,-77,-81,-80,-82,-90,-89,291,307,315,318,319,328,334,]),'PURPLE':([251,281,293,297,298,322,331,],[264,264,264,264,264,264,264,]),'GREEN':([251,281,293,297,298,322,331,],[263,263,263,263,263,263,263,]),'CHAR_CTE':([63,99,109,110,111,114,118,119,120,121,125,126,127,129,131,133,135,137,138,140,141,142,143,145,146,155,162,169,170,171,172,173,174,175,176,177,178,179,180,181,183,184,187,188,189,197,198,220,240,241,243,244,245,247,252,271,272,274,275,276,294,296,309,310,321,325,329,],[101,101,101,101,101,101,101,101,101,101,101,101,101,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,101,101,101,-91,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,]),'COLON':([3,],[4,]),'LEFTB':([50,55,196,242,278,289,290,],[56,58,225,255,-116,299,-67,]),'COMMA':([26,27,39,45,47,51,57,93,94,95,96,97,98,100,101,102,103,104,105,106,107,130,132,134,136,139,144,147,148,150,152,153,156,157,158,165,166,182,195,199,200,201,202,203,204,205,206,207,208,209,210,211,212,216,217,218,222,223,224,226,227,228,229,230,231,232,233,234,235,236,237,238,239,253,254,256,257,258,270,282,283,286,287,288,302,303,316,317,323,327,330,],[31,-10,31,-11,52,-23,52,-98,-116,-116,-116,-99,-116,-69,-97,-93,-100,-92,-95,-70,-96,-71,-72,-83,-84,-75,-76,-87,-88,-92,183,184,187,188,189,197,198,-94,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,240,241,243,244,245,-49,-55,247,251,252,-73,-74,-86,-85,-78,-79,-77,-81,-80,-82,-90,-89,271,272,274,275,276,281,293,294,296,297,298,309,310,321,322,325,329,331,]),'INT_CTE':([33,63,99,109,110,111,114,118,119,120,121,125,126,127,129,131,133,135,137,138,140,141,142,143,145,146,155,162,169,170,171,172,173,174,175,176,177,178,179,180,181,183,184,187,188,189,197,198,220,240,241,243,244,245,247,252,271,272,274,275,276,294,296,309,310,321,325,329,],[40,105,105,105,105,105,105,105,105,105,105,105,105,105,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,105,105,105,-91,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,]),'METHOD':([4,5,6,7,9,10,38,43,128,167,168,],[-116,-4,-6,11,-5,11,-116,-7,-116,-14,-16,]),'$end':([2,24,115,],[0,-1,-2,]),'DIVISION':([93,97,98,101,102,103,104,105,107,150,182,209,210,],[-98,-99,145,-97,-93,-100,-92,-95,-96,-92,-94,145,145,]),'STRING':([8,11,41,52,],[19,19,19,19,]),'GREATEREQUAL':([93,95,96,97,98,101,102,103,104,105,107,134,136,147,148,150,182,201,202,203,204,205,206,207,208,209,210,230,231,238,239,],[-98,-116,138,-99,-116,-97,-93,-100,-92,-95,-96,-83,-84,-87,-88,-92,-94,-116,-116,138,138,138,138,138,138,-116,-116,-86,-85,-90,-89,]),'DRAW_LINE':([6,9,38,43,56,58,59,61,62,64,70,72,73,74,76,77,78,80,81,82,85,88,91,117,123,151,192,213,219,225,246,255,260,277,279,291,295,299,307,315,318,319,320,328,334,],[-6,-5,-116,-7,-116,-116,83,-24,83,-42,-43,-45,-33,83,-32,-40,-35,-41,-44,-34,-39,-38,-36,-37,-56,-46,-58,-48,-57,83,-47,83,-116,-63,-65,-101,-59,83,-103,-105,-102,-106,-64,-104,-107,]),'EQUALS':([93,95,96,97,98,101,102,103,104,105,107,134,136,147,148,150,182,201,202,203,204,205,206,207,208,209,210,230,231,238,239,],[-98,-116,140,-99,-116,-97,-93,-100,-92,-95,-96,-83,-84,-87,-88,-92,-94,-116,-116,140,140,140,140,140,140,-116,-116,-86,-85,-90,-89,]),'DRAW_RECTANGLE':([6,9,38,43,56,58,59,61,62,64,70,72,73,74,76,77,78,80,81,82,85,88,91,117,123,151,192,213,219,225,246,255,260,277,279,291,295,299,307,315,318,319,320,328,334,],[-6,-5,-116,-7,-116,-116,84,-24,84,-42,-43,-45,-33,84,-32,-40,-35,-41,-44,-34,-39,-38,-36,-37,-56,-46,-58,-48,-57,84,-47,84,-116,-63,-65,-101,-59,84,-103,-105,-102,-106,-64,-104,-107,]),'GREATERTHAN':([93,95,96,97,98,101,102,103,104,105,107,134,136,147,148,150,182,201,202,203,204,205,206,207,208,209,210,230,231,238,239,],[-98,-116,142,-99,-116,-97,-93,-100,-92,-95,-96,-83,-84,-87,-88,-92,-94,-116,-116,142,142,142,142,142,142,-116,-116,-86,-85,-90,-89,]),'VAR':([4,38,56,58,],[8,8,8,8,]),'FALSE':([63,99,109,110,111,114,118,119,120,121,125,126,127,129,131,133,135,137,138,140,141,142,143,145,146,155,162,169,170,171,172,173,174,175,176,177,178,179,180,181,183,184,187,188,189,197,198,220,240,241,243,244,245,247,252,271,272,274,275,276,294,296,309,310,321,325,329,],[103,103,103,103,103,103,103,103,103,103,103,103,103,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,103,103,103,-91,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,]),'WHITE':([251,281,293,297,298,322,331,],[268,268,268,268,268,268,268,]),'TIMES':([93,97,98,101,102,103,104,105,107,150,182,209,210,],[-98,-99,146,-97,-93,-100,-92,-95,-96,-92,-94,146,146,]),'ID':([1,6,9,14,15,16,17,18,19,21,22,23,31,38,43,46,56,58,59,61,62,63,64,70,72,73,74,76,77,78,80,81,82,85,88,91,99,109,110,111,114,117,118,119,120,121,123,125,126,127,129,131,133,135,137,138,140,141,142,143,145,146,151,155,162,169,170,171,172,173,174,175,176,177,178,179,180,181,183,184,187,188,189,192,197,198,213,219,220,225,240,241,243,244,245,246,247,252,255,260,271,272,274,275,276,277,279,291,294,295,296,299,307,309,310,315,318,319,320,321,325,328,329,334,],[3,-6,-5,27,-27,-30,-28,-29,-31,-18,-17,28,27,-116,-7,51,-116,-116,86,-24,86,104,-42,-43,-45,-33,86,-32,-40,-35,-41,-44,-34,-39,-38,-36,150,104,104,104,104,-37,104,104,104,104,-56,104,104,104,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-46,104,104,150,-91,150,150,150,150,150,150,150,150,150,150,150,104,104,104,104,104,-58,104,104,-48,-57,104,86,104,104,104,104,104,-47,104,104,86,-116,104,104,104,104,104,-63,-65,-101,104,-59,104,86,-103,104,104,-105,-102,-106,-64,104,104,-104,104,-107,]),'IF':([6,9,38,43,56,58,59,61,62,64,70,72,73,74,76,77,78,80,81,82,85,88,91,117,123,151,192,213,219,225,246,255,260,277,279,291,295,299,307,315,318,319,320,328,334,],[-6,-5,-116,-7,-116,-116,87,-24,87,-42,-43,-45,-33,87,-32,-40,-35,-41,-44,-34,-39,-38,-36,-37,-56,-46,-58,-48,-57,87,-47,87,-116,-63,-65,-101,-59,87,-103,-105,-102,-106,-64,-104,-107,]),'AND':([93,94,95,96,97,98,101,102,103,104,105,107,134,136,139,144,147,148,150,182,199,200,201,202,203,204,205,206,207,208,209,210,230,231,232,233,234,235,236,237,238,239,],[-98,129,-116,-116,-99,-116,-97,-93,-100,-92,-95,-96,-83,-84,-75,-76,-87,-88,-92,-94,129,129,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-86,-85,-78,-79,-77,-81,-80,-82,-90,-89,]),'RIGHTP':([41,42,47,48,49,51,53,54,57,60,93,94,95,96,97,98,100,101,102,103,104,105,106,107,130,132,134,136,139,144,147,148,149,150,154,162,163,164,182,186,191,193,194,195,199,200,201,202,203,204,205,206,207,208,209,210,214,215,222,223,224,228,229,230,231,232,233,234,235,236,237,238,239,247,248,249,259,261,262,263,264,265,266,267,268,269,292,301,304,305,324,332,],[-116,50,-116,55,-19,-23,-21,-20,-116,-22,-98,-116,-116,-116,-99,-116,-69,-97,-93,-100,-92,-95,-70,-96,-71,-72,-83,-84,-75,-76,-87,-88,182,-92,185,-116,196,-66,-94,-116,221,-52,222,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,242,-61,-49,-55,-116,-73,-74,-86,-85,-78,-79,-77,-81,-80,-82,-90,-89,-116,-54,-51,-53,-109,280,-112,-111,-110,-114,-113,-115,-108,300,308,311,312,326,333,]),'RIGHTSB':([40,93,94,95,96,97,98,100,101,102,103,104,105,106,107,130,132,134,136,139,144,147,148,150,159,182,199,200,201,202,203,204,205,206,207,208,209,210,222,228,229,230,231,232,233,234,235,236,237,238,239,],[45,-98,-116,-116,-116,-99,-116,-69,-97,-93,-100,-92,-95,-70,-96,-71,-72,-83,-84,-75,-76,-87,-88,-92,190,-94,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-49,-73,-74,-86,-85,-78,-79,-77,-81,-80,-82,-90,-89,]),'INT':([8,11,41,52,],[15,15,15,15,]),'SUM':([93,95,97,98,101,102,103,104,105,107,147,148,150,182,201,202,209,210,238,239,],[-98,135,-99,-116,-97,-93,-100,-92,-95,-96,-87,-88,-92,-94,135,135,-116,-116,-90,-89,]),'FLOAT':([8,11,41,52,],[16,16,16,16,]),'FLOAT_CTE':([63,99,109,110,111,114,118,119,120,121,125,126,127,129,131,133,135,137,138,140,141,142,143,145,146,155,162,169,170,171,172,173,174,175,176,177,178,179,180,181,183,184,187,188,189,197,198,220,240,241,243,244,245,247,252,271,272,274,275,276,294,296,309,310,321,325,329,],[107,107,107,107,107,107,107,107,107,107,107,107,107,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,107,107,107,-91,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,]),'LESSTHAN':([93,95,96,97,98,101,102,103,104,105,107,134,136,147,148,150,182,201,202,203,204,205,206,207,208,209,210,230,231,238,239,],[-98,-116,141,-99,-116,-97,-93,-100,-92,-95,-96,-83,-84,-87,-88,-92,-94,-116,-116,141,141,141,141,141,141,-116,-116,-86,-85,-90,-89,]),'DRAW_DOT':([6,9,38,43,56,58,59,61,62,64,70,72,73,74,76,77,78,80,81,82,85,88,91,117,123,151,192,213,219,225,246,255,260,277,279,291,295,299,307,315,318,319,320,328,334,],[-6,-5,-116,-7,-116,-116,89,-24,89,-42,-43,-45,-33,89,-32,-40,-35,-41,-44,-34,-39,-38,-36,-37,-56,-46,-58,-48,-57,89,-47,89,-116,-63,-65,-101,-59,89,-103,-105,-102,-106,-64,-104,-107,]),'ASSIGN':([86,190,],[121,220,]),'BOOLEAN':([8,11,41,52,],[18,18,18,18,]),'RIGHTB':([6,9,38,43,56,58,59,61,62,64,70,71,72,73,74,76,77,78,79,80,81,82,85,88,91,92,116,117,123,151,192,213,219,225,246,250,255,260,273,277,279,284,285,291,295,299,306,307,313,314,315,318,319,320,328,334,],[-6,-5,-116,-7,-116,-116,-116,-24,-116,-42,-43,115,-45,-33,-116,-32,-40,-35,-26,-41,-44,-34,-39,-38,-36,128,-25,-37,-56,-46,-58,-48,-57,-116,-47,260,-116,-116,-116,-63,-65,295,-62,-101,-59,-116,-116,-103,320,-68,-105,-102,-106,-64,-104,-107,]),'BLACK':([251,281,293,297,298,322,331,],[267,267,267,267,267,267,267,]),'MAIN':([25,],[29,]),'OR':([93,94,95,96,97,98,101,102,103,104,105,107,134,136,139,144,147,148,150,182,199,200,201,202,203,204,205,206,207,208,209,210,230,231,232,233,234,235,236,237,238,239,],[-98,131,-116,-116,-99,-116,-97,-93,-100,-92,-95,-96,-83,-84,-75,-76,-87,-88,-92,-94,131,131,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-86,-85,-78,-79,-77,-81,-80,-82,-90,-89,]),'DRAW_CIRCLE':([6,9,38,43,56,58,59,61,62,64,70,72,73,74,76,77,78,80,81,82,85,88,91,117,123,151,192,213,219,225,246,255,260,277,279,291,295,299,307,315,318,319,320,328,334,],[-6,-5,-116,-7,-116,-116,90,-24,90,-42,-43,-45,-33,90,-32,-40,-35,-41,-44,-34,-39,-38,-36,-37,-56,-46,-58,-48,-57,90,-47,90,-116,-63,-65,-101,-59,90,-103,-105,-102,-106,-64,-104,-107,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'goto_main':([12,],[24,]),'constante':([63,99,109,110,111,114,118,119,120,121,125,126,127,155,162,169,171,172,173,174,175,176,177,178,179,180,181,183,184,187,188,189,197,198,220,240,241,243,244,245,247,252,271,272,274,275,276,294,296,309,310,321,325,329,],[102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,]),'declara_var':([4,38,56,58,],[5,43,59,61,]),'color':([251,281,293,297,298,322,331,],[262,292,301,304,305,324,332,]),'dibujaTriangulo':([59,62,74,225,255,299,],[64,64,64,64,64,64,]),'variables':([4,38,56,58,],[6,6,6,6,]),'end_method':([128,],[167,]),'condicion4':([306,],[313,]),'operador1':([63,99,109,110,111,114,118,119,120,121,125,126,127,155,162,169,171,183,184,187,188,189,197,198,220,240,241,243,244,245,247,252,271,272,274,275,276,294,296,309,310,321,325,329,],[94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,199,200,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,]),'condicion1':([125,],[163,]),'condicion3':([278,],[289,]),'dibujaCuadrado':([59,62,74,225,255,299,],[70,70,70,70,70,70,]),'bloque':([59,62,74,225,255,299,],[71,92,116,250,273,306,]),'operador2':([63,99,109,110,111,114,118,119,120,121,125,126,127,155,162,169,171,174,175,176,177,178,179,183,184,187,188,189,197,198,220,240,241,243,244,245,247,252,271,272,274,275,276,294,296,309,310,321,325,329,],[96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,203,204,205,206,207,208,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,]),'operador3':([63,99,109,110,111,114,118,119,120,121,125,126,127,155,162,169,171,172,173,174,175,176,177,178,179,183,184,187,188,189,197,198,220,240,241,243,244,245,247,252,271,272,274,275,276,294,296,309,310,321,325,329,],[95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,201,202,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,]),'dibujaCuadrilatero':([59,62,74,225,255,299,],[72,72,72,72,72,72,]),'method_vars':([58,],[62,]),'exp4':([98,209,210,],[147,238,239,]),'ciclo':([59,62,74,225,255,299,],[73,73,73,73,73,73,]),'tipo':([8,11,41,52,],[14,21,46,46,]),'paraux':([47,57,],[54,60,]),'exp3':([95,201,202,],[134,230,231,]),'exp2':([96,203,204,205,206,207,208,],[139,232,233,234,235,236,237,]),'exp1':([94,199,200,],[130,228,229,]),'estatuto':([59,62,74,225,255,299,],[74,74,74,74,74,74,]),'param':([195,],[224,]),'operador4':([63,99,109,110,111,114,118,119,120,121,125,126,127,155,162,169,171,172,173,174,175,176,177,178,179,180,181,183,184,187,188,189,197,198,220,240,241,243,244,245,247,252,271,272,274,275,276,294,296,309,310,321,325,329,],[98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,209,210,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,]),'llamada':([59,62,63,74,109,110,111,114,118,119,120,121,125,126,127,155,162,183,184,187,188,189,197,198,220,225,240,241,243,244,245,247,252,255,271,272,274,275,276,294,296,299,309,310,321,325,329,],[75,75,100,75,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,75,100,100,100,100,100,100,100,75,100,100,100,100,100,100,100,75,100,100,100,100,100,]),'condicion':([59,62,74,225,255,299,],[76,76,76,76,76,76,]),'tipo_metodo':([11,],[23,]),'llamafun':([86,104,],[124,124,]),'dibujaLinea':([59,62,74,225,255,299,],[77,77,77,77,77,77,]),'var':([14,31,],[26,39,]),'params':([41,],[48,]),'lectura':([59,62,74,225,255,299,],[78,78,78,78,78,78,]),'empty':([4,7,10,26,28,29,38,39,41,47,56,57,58,59,62,68,74,86,94,95,96,98,104,128,129,131,133,135,137,138,140,141,142,143,145,146,162,186,195,199,200,201,202,203,204,205,206,207,208,209,210,224,225,247,255,260,273,278,299,306,],[9,13,13,32,35,37,9,32,49,53,9,53,9,79,79,113,79,122,132,136,144,148,122,168,170,170,170,170,170,170,170,170,170,170,170,170,193,215,223,132,132,136,136,144,144,144,144,144,144,148,148,248,79,193,79,279,285,290,79,314,]),'dibujaCirculo':([59,62,74,225,255,299,],[80,80,80,80,80,80,]),'saveop':([129,131,133,135,137,138,140,141,142,143,145,146,],[169,171,172,173,174,175,176,177,178,179,180,181,]),'dibujaRectangulo':([59,62,74,225,255,299,],[81,81,81,81,81,81,]),'return':([59,62,74,225,255,299,],[82,82,82,82,82,82,]),'parametro':([41,52,],[47,57,]),'args':([162,247,],[194,259,]),'else':([260,],[277,]),'inicio_method':([28,],[34,]),'ciclo2':([273,],[284,]),'dibujaPunto':([59,62,74,225,255,299,],[85,85,85,85,85,85,]),'ciclo1':([186,],[214,]),'listargs':([224,],[249,]),'expresion':([63,99,109,110,111,114,118,119,120,121,125,126,127,155,162,183,184,187,188,189,197,198,220,240,241,243,244,245,247,252,271,272,274,275,276,294,296,309,310,321,325,329,],[106,149,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,]),'scopemain':([29,],[36,]),'metodo':([7,10,],[10,10,]),'asignacion':([59,62,74,225,255,299,],[88,88,88,88,88,88,]),'metodos':([7,10,],[12,20,]),'asign':([86,190,],[123,219,]),'salto_ciclo':([68,],[112,]),'programa':([0,],[2,]),'exp':([63,109,110,111,114,118,119,120,121,125,126,127,155,162,183,184,187,188,189,197,198,220,240,241,243,244,245,247,252,271,272,274,275,276,294,296,309,310,321,325,329,],[108,152,153,154,156,157,158,159,161,164,165,166,186,195,211,212,216,217,218,226,227,161,253,254,256,257,258,195,270,282,283,286,287,288,302,303,316,317,323,327,330,]),'lista_variables':([26,39,],[30,44,]),'globales':([4,],[7,]),'escritura':([59,62,74,225,255,299,],[91,91,91,91,91,91,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> PROGRAM ID COLON globales metodos goto_main','programa',6,'p_programa','Parser.py',232),
  ('goto_main -> VOID MAIN scopemain LEFTP RIGHTP LEFTB declara_var bloque RIGHTB','goto_main',9,'p_goto_main','Parser.py',268),
  ('scopemain -> empty','scopemain',1,'p_scopemain','Parser.py',271),
  ('globales -> declara_var','globales',1,'p_globales','Parser.py',282),
  ('declara_var -> empty','declara_var',1,'p_declara_var_vacio','Parser.py',289),
  ('declara_var -> variables','declara_var',1,'p_declara_var','Parser.py',292),
  ('variables -> VAR tipo var lista_variables SEMICOLON declara_var','variables',6,'p_variables','Parser.py',300),
  ('lista_variables -> COMMA var lista_variables','lista_variables',3,'p_lista_variables','Parser.py',309),
  ('lista_variables -> empty','lista_variables',1,'p_lista_variables','Parser.py',310),
  ('var -> ID','var',1,'p_var','Parser.py',313),
  ('var -> ID LEFTSB INT_CTE RIGHTSB','var',4,'p_var','Parser.py',314),
  ('metodos -> metodo metodos','metodos',2,'p_metodos','Parser.py',335),
  ('metodos -> empty','metodos',1,'p_metodos','Parser.py',336),
  ('metodo -> METHOD tipo_metodo ID inicio_method LEFTP params RIGHTP LEFTB method_vars bloque RIGHTB end_method','metodo',12,'p_metodo','Parser.py',343),
  ('inicio_method -> empty','inicio_method',1,'p_inicio_method','Parser.py',356),
  ('end_method -> empty','end_method',1,'p_end_method','Parser.py',375),
  ('tipo_metodo -> VOID','tipo_metodo',1,'p_tipo_metodo','Parser.py',383),
  ('tipo_metodo -> tipo','tipo_metodo',1,'p_tipo_metodo','Parser.py',384),
  ('params -> empty','params',1,'p_params','Parser.py',396),
  ('params -> parametro paraux','params',2,'p_params','Parser.py',397),
  ('paraux -> empty','paraux',1,'p_paraux','Parser.py',400),
  ('paraux -> COMMA parametro paraux','paraux',3,'p_paraux','Parser.py',401),
  ('parametro -> tipo ID','parametro',2,'p_parametro','Parser.py',409),
  ('method_vars -> declara_var','method_vars',1,'p_method_vars','Parser.py',425),
  ('bloque -> estatuto bloque','bloque',2,'p_bloque','Parser.py',432),
  ('bloque -> empty','bloque',1,'p_bloque','Parser.py',433),
  ('tipo -> INT','tipo',1,'p_tipo','Parser.py',441),
  ('tipo -> CHAR','tipo',1,'p_tipo','Parser.py',442),
  ('tipo -> BOOLEAN','tipo',1,'p_tipo','Parser.py',443),
  ('tipo -> FLOAT','tipo',1,'p_tipo','Parser.py',444),
  ('tipo -> STRING','tipo',1,'p_tipo','Parser.py',445),
  ('estatuto -> condicion','estatuto',1,'p_estatuto','Parser.py',455),
  ('estatuto -> ciclo','estatuto',1,'p_estatuto','Parser.py',456),
  ('estatuto -> return','estatuto',1,'p_estatuto','Parser.py',457),
  ('estatuto -> lectura','estatuto',1,'p_estatuto','Parser.py',458),
  ('estatuto -> escritura','estatuto',1,'p_estatuto','Parser.py',459),
  ('estatuto -> llamada SEMICOLON','estatuto',2,'p_estatuto','Parser.py',460),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','Parser.py',461),
  ('estatuto -> dibujaPunto','estatuto',1,'p_estatuto','Parser.py',462),
  ('estatuto -> dibujaLinea','estatuto',1,'p_estatuto','Parser.py',463),
  ('estatuto -> dibujaCirculo','estatuto',1,'p_estatuto','Parser.py',464),
  ('estatuto -> dibujaTriangulo','estatuto',1,'p_estatuto','Parser.py',465),
  ('estatuto -> dibujaCuadrado','estatuto',1,'p_estatuto','Parser.py',466),
  ('estatuto -> dibujaRectangulo','estatuto',1,'p_estatuto','Parser.py',467),
  ('estatuto -> dibujaCuadrilatero','estatuto',1,'p_estatuto','Parser.py',468),
  ('return -> RETURN exp SEMICOLON','return',3,'p_return','Parser.py',476),
  ('lectura -> ID ASSIGN READ LEFTP RIGHTP SEMICOLON','lectura',6,'p_lectura','Parser.py',500),
  ('escritura -> PRINT LEFTP exp RIGHTP SEMICOLON','escritura',5,'p_escritura','Parser.py',509),
  ('llamada -> ID llamafun LEFTP args RIGHTP','llamada',5,'p_llamada','Parser.py',521),
  ('llamafun -> empty','llamafun',1,'p_llamafun','Parser.py',535),
  ('args -> exp param listargs','args',3,'p_args','Parser.py',550),
  ('args -> empty','args',1,'p_args_vacio','Parser.py',553),
  ('listargs -> COMMA args','listargs',2,'p_listargs','Parser.py',556),
  ('listargs -> empty','listargs',1,'p_listargs','Parser.py',557),
  ('param -> empty','param',1,'p_param','Parser.py',560),
  ('asignacion -> ID asign','asignacion',2,'p_asignacion','Parser.py',583),
  ('asignacion -> ID LEFTSB exp RIGHTSB asign','asignacion',5,'p_asignacion_array','Parser.py',614),
  ('asign -> ASSIGN exp SEMICOLON','asign',3,'p_asign','Parser.py',617),
  ('ciclo -> WHILE salto_ciclo LEFTP exp ciclo1 RIGHTP LEFTB bloque ciclo2 RIGHTB','ciclo',10,'p_ciclo','Parser.py',628),
  ('salto_ciclo -> empty','salto_ciclo',1,'p_salto_ciclo','Parser.py',636),
  ('ciclo1 -> empty','ciclo1',1,'p_ciclo1','Parser.py',645),
  ('ciclo2 -> empty','ciclo2',1,'p_ciclo2','Parser.py',662),
  ('condicion -> IF LEFTP condicion1 RIGHTP LEFTB bloque RIGHTB else','condicion',8,'p_condicion','Parser.py',675),
  ('else -> ELSE condicion3 LEFTB bloque condicion4 RIGHTB','else',6,'p_else','Parser.py',678),
  ('else -> empty','else',1,'p_else_vacio','Parser.py',681),
  ('condicion1 -> exp','condicion1',1,'p_condicion1','Parser.py',688),
  ('condicion3 -> empty','condicion3',1,'p_condicion3','Parser.py',705),
  ('condicion4 -> empty','condicion4',1,'p_condicion4','Parser.py',718),
  ('exp -> llamada','exp',1,'p_exp','Parser.py',729),
  ('exp -> expresion','exp',1,'p_exp','Parser.py',730),
  ('expresion -> operador1 exp1','expresion',2,'p_expresion','Parser.py',739),
  ('exp1 -> empty','exp1',1,'p_exp1','Parser.py',742),
  ('exp1 -> AND saveop operador1 exp1','exp1',4,'p_exp1_and','Parser.py',746),
  ('exp1 -> OR saveop operador1 exp1','exp1',4,'p_exp1_or','Parser.py',749),
  ('operador1 -> operador2 exp2','operador1',2,'p_operador1','Parser.py',758),
  ('exp2 -> empty','exp2',1,'p_exp2_vacio','Parser.py',761),
  ('exp2 -> EQUALS saveop operador2 exp2','exp2',4,'p_exp2_equals','Parser.py',765),
  ('exp2 -> NOTEQUAL saveop operador2 exp2','exp2',4,'p_exp2_notequals','Parser.py',768),
  ('exp2 -> GREATEREQUAL saveop operador2 exp2','exp2',4,'p_exp2_greatherequal','Parser.py',771),
  ('exp2 -> GREATERTHAN saveop operador2 exp2','exp2',4,'p_exp2_greatherthan','Parser.py',774),
  ('exp2 -> LESSTHAN saveop operador2 exp2','exp2',4,'p_exp2_lessthan','Parser.py',777),
  ('exp2 -> LESSEQUAL saveop operador2 exp2','exp2',4,'p_exp2_lessequal','Parser.py',780),
  ('operador2 -> operador3 exp3','operador2',2,'p_operador2','Parser.py',789),
  ('exp3 -> empty','exp3',1,'p_exp3_vacio','Parser.py',792),
  ('exp3 -> SUM saveop operador3 exp3','exp3',4,'p_exp3_sum','Parser.py',796),
  ('exp3 -> LESS saveop operador3 exp3','exp3',4,'p_exp3_less','Parser.py',800),
  ('operador3 -> operador4 exp4','operador3',2,'p_operador3','Parser.py',809),
  ('exp4 -> empty','exp4',1,'p_exp4_empty','Parser.py',812),
  ('exp4 -> TIMES saveop operador4 exp4','exp4',4,'p_exp4_times','Parser.py',816),
  ('exp4 -> DIVISION saveop operador4 exp4','exp4',4,'p_exp4_division','Parser.py',820),
  ('saveop -> empty','saveop',1,'p_saveop','Parser.py',824),
  ('operador4 -> ID','operador4',1,'p_operador4_id','Parser.py',834),
  ('operador4 -> constante','operador4',1,'p_operador4_cons','Parser.py',869),
  ('operador4 -> LEFTP expresion RIGHTP','operador4',3,'p_operador4_exp','Parser.py',874),
  ('constante -> INT_CTE','constante',1,'p_constante_int','Parser.py',882),
  ('constante -> FLOAT_CTE','constante',1,'p_constante_float','Parser.py',894),
  ('constante -> CHAR_CTE','constante',1,'p_constante_char','Parser.py',907),
  ('constante -> STRING_CTE','constante',1,'p_constante_string','Parser.py',919),
  ('constante -> TRUE','constante',1,'p_constante_true','Parser.py',931),
  ('constante -> FALSE','constante',1,'p_constante_true','Parser.py',932),
  ('dibujaPunto -> DRAW_DOT LEFTP exp COMMA exp COMMA color RIGHTP SEMICOLON','dibujaPunto',9,'p_dibujaPunto','Parser.py',945),
  ('dibujaLinea -> DRAW_LINE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON','dibujaLinea',13,'p_dibujaLinea','Parser.py',952),
  ('dibujaCirculo -> DRAW_CIRCLE LEFTP exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON','dibujaCirculo',11,'p_dibujaCirculo','Parser.py',963),
  ('dibujaTriangulo -> DRAW_TRIANGLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON','dibujaTriangulo',17,'p_dibujaTriangulo','Parser.py',973),
  ('dibujaCuadrado -> DRAW_SQUARE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON','dibujaCuadrado',13,'p_dibujaCuadrado','Parser.py',987),
  ('dibujaRectangulo -> DRAW_RECTANGLE LEFTP exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON','dibujaRectangulo',13,'p_dibujaRectangulo','Parser.py',997),
  ('dibujaCuadrilatero -> DRAW_QUADRITERAL LEFTP exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA exp COMMA color RIGHTP SEMICOLON','dibujaCuadrilatero',23,'p_dibujaCuadrilatero','Parser.py',1007),
  ('color -> RED','color',1,'p_color','Parser.py',1023),
  ('color -> BLUE','color',1,'p_color','Parser.py',1024),
  ('color -> YELLOW','color',1,'p_color','Parser.py',1025),
  ('color -> PURPLE','color',1,'p_color','Parser.py',1026),
  ('color -> GREEN','color',1,'p_color','Parser.py',1027),
  ('color -> BLACK','color',1,'p_color','Parser.py',1028),
  ('color -> CYAN','color',1,'p_color','Parser.py',1029),
  ('color -> WHITE','color',1,'p_color','Parser.py',1030),
  ('empty -> <empty>','empty',0,'p_empty','Parser.py',1040),
]
